Here is my analysis of the key points from the podcast transcript, organized into the requested sections:

1. EPISODE CONTEXT
- Podcast name and episode focus: Not specified
- Hosts and their backgrounds/roles: Akash (host) - no details provided
- Guests and their roles/backgrounds: Claire Vo, Chief Product & Technology Officer at LaunchDarkly
- Featured company overview: LaunchDarkly (stage, funding, core business not discussed)

2. KEY INSIGHTS
1) The core skills and contributions that product managers have traditionally valued, such as stakeholder management, documentation, and being the voice of the customer, are collapsing in cost, time, and value due to AI advancements. PMs need to figure out how to provide unique, human, high-impact value moving forward. 
"I think the things that product managers have held most dear as their skills and their contributions to teams are now collapsing in cost, they're collapsing in time, and candidly they're collapsing in value." - Claire Vo

2) AI is likely to significantly transform and flatten PM organizational structures in the next few years. The ratio of PMs to engineers will shrink as PMs become higher leverage. Traditional career paths involving people management of other PMs will be unsustainable.
"I really believe in this super IC path because I think product teams are going to get smaller and smaller. I really do. I just think that individuals become higher leverage. The ratio will change." - Claire Vo

3) AI could replace many traditional PM responsibilities like stakeholder management, as people get more comfortable interacting with digital/AI colleagues. Human interaction will still be important, but PMs need to prepare for a world where AI handles more tasks.
"I tend to tell people when they say they can't [replace PMs with AI], I say, "Have you tried?" ... I am so humbled at this point by the advances of technology that I see in a field that I have been in for again, many decades." - Claire Vo

4) To stay relevant, PMs need to develop unique human skills that AI struggles with, like adaptability, resilience, improvisation, and the ability to handle nuance. They also need to upskill on working with AI tools effectively.
"So I think about adaptability, I think about resilience, I think about improvisation as things that are uniquely human that we're really good at. And I do think there's something about not losing that as we work more and more with these AI agents and colleagues." - Claire Vo

5) Senior product leaders need to urgently consider how AI will transform their organizations, teams, skills required, and their own roles in the next few years. Otherwise they risk quickly becoming outdated.
"I actually think this is the number one mistake made by executives in organizations right now is they think that AI will transform their organization and AI will transform their customers and AI will absolutely never transform them. And I just think it's so naive." - Claire Vo

3. TECHNOLOGY & PRODUCT DEVELOPMENTS
- Claire demonstrated using AI tools like GPT and Anthropic's Claude to quickly generate product requirements documents (PRDs), get feedback/edits, and translate them into different formats like FAQs
- She also showed using an AI agent called Devon to implement a quick code change to the ChatPRD product based on a PRD
- ChatPRD released new features including document templates, integrations with Google Drive, Notion and Slack, and specialized AI projects trained on specific knowledge areas

7. NOTABLE TECHNOLOGIES
- Large language models (LLMs) that PMs need to learn to interact with effectively
- AI agents that can act as digital colleagues to handle tasks like documentation and coding
- Tools like anthropic, cloud and artifacts that provide specialized AI assistants

8. COMPANIES MENTIONED
LaunchDarkly: The company Claire works at as Chief Product & Technology Officer 
"I am CPTO at LaunchDarkly. I lead all of technology. So everybody reports to me, product, design, engineering, data." - Claire Vo

ChatPRD: Claire's side project/startup - an AI tool for product managers to generate documentation and assist with product work
"I actually started chat PRD as just a tool that I wanted to build for myself, for my product teams. I registered chat PRD on a whim." - Claire Vo

Anthropic: Mentioned in relation to their specialized AI projects feature called Claude
"So if you've used anthropics, clouds, artifacts, things like that, you're probably familiar with the concept of projects, which are specialized chap PRD assistants that have context about a specific area." - Claire Vo

9. PEOPLE MENTIONED

Claire Vo [Chief Product & Technology Officer at LaunchDarkly]: The main guest being interviewed, sharing her perspective on the future of product management and AI
- Leads product, design, engineering and data at LaunchDarkly 
- Founded ChatPRD as a side project
- Believes PMs need to urgently upskill to stay relevant as AI transforms the role

Akash [Host]: Interviewer asking Claire questions
- No other details about background provided

Jen [VP of Product at LaunchDarkly]: Hired by Claire, brings commercial orientation
"I heard a very commercially oriented product leader, Jen, our VP of product, she is a 20 out of 10 product and commercial strategist." - Claire Vo

Devon: An AI agent Claire uses to implement code changes
"I'm going to say, hey, Devon, I'm very polite to my AI. Just in case you're wondering, um, could you please make an upgrade to the banner on the drive projects page about access to the projects feature?" - Claire Vo
- Claire sends Devon tasks via Slack with specs from ChatPRD
- Devon makes the code changes which Claire then QAs and approves

# Transcript


At Config 2025, you famously proclaimed that product management is dead. Why?
I have been in this industry for now 20 years, maybe more. I've been a product manager and a
product leader and product adjacent for many years. And the past 24 months have changed completely
my mindset about how things get built and the role that product managers fit in that organization.
I think the things that product managers have held most dear as their skills and their contributions
to teams are now collapsing in cost, they're collapsing in time, and candidly they're collapsing
in value. And so if product managers are not thinking about how they are going to provide
unique, human, and high impact value to their teams in this new age of AI, our roles are definitely
dead. So what's changing specifically about the role? So I think things that product managers for
many, many years, or at least over the course of my career have held as their highest value
contributions to the process, are starting to collapse in the time and effort and impact it has
to the building process. And so what I mean is stakeholder management and documentation and being
the voice of the customer and even dare I say strategy is something that can now be done in
minutes in a pretty high quality way, if you're intellectually honest. And so in this world where
stake or where product managers have really held very closely this very specific role in a building
team, when you see those tasks start to fall away from the core role, then you have to ask yourself,
well, what is it we do with our 40 or 50 hours a week? What do I do on this team that adds unique
and human value? And how do I justify candidly my existence on this team? And I don't think it's
happening everywhere as aggressively as it might in the future, but I think it's going to happen.
And pans really need to be prepared for that new world and figure out where they're going to
add unique and differentiated value. So the interesting one there is stakeholder management.
If I see sort of a defense or if I try to steal man the other side, that's the part that people
are holding on to is, oh, well, pms, we were nine to five in meetings, like, I can't replace that.
How does AI come into the picture there? I mean, I think what people really don't want
to face is the intersection of a move to remote work and how replaceable stakeholder management
can start to become because at the end of the day, a lot of us show up to our colleagues
as avatars and chats. It's actually very bizarre. If you think about it, we've shifted an entire
workforce to expect to interact with each other largely asynchronously and largely not in a human
nature through remote online. And so I think people overestimate the friction of working with a
digital colleague or an AI colleague. I've certainly had this experience where I've been using Devon
from cognition labs as truly one of our interns or one of our many interns. And I operate very
seamlessly with that AI colleague as just that a colleague. And so I think it betrays a lack of
imagination on what the future can look like to say, oh, you could, you could just never. I am
so humbled at this point by the advances of technology that I see in a field that I have
been in for again, many decades. And I want to be imaginative. I want to cast forward the future
I believe is possible. And I think that's much more advanced than what we have now. That being
said, I do think one, people crave human to human interaction, two, you lose a lot of nuance when
you put a machine in the loop and not a human in the loop. And three, I still think the human brain
is the best large language model on the market. I was thinking about this yesterday, I was thinking,
why, why, why would a AI colleague fail? Or why would it be hard for a team to interact with AI?
And I think as somebody who's built these quote unquote agents,
worked with them, played with them, one of the things that I think is in order to create high
quality with these AI products, you can strain the surface area of their skills.
Today's episode is brought to you by Gibson AI, the future of backend development. Imagine a
world where designing, deploying and scaling your database is as intuitive as having a conversation.
Gibson AI makes that a reality. Gibson AI is your very own AI database engineer.
In just minutes, you can chat with Gibson to design production grade data models,
automatically generate secure REST APIs, and even eliminate technical debt that's been holding
your team back. Whether you're launching a brand new product or modernizing an existing app,
Gibson AI handles everything from data migrations to integration. So you can focus on building what
matters most. Gibson AI is built for the modern engineering team, empowering you to accelerate
development, reduce tedious coding, and deliver powerful solutions faster than ever before.
Head over to Gibson AI dot com slash Akash to experience the future of automated data modeling.
That's G-I-B-S-O-N-A-I dot com slash A-A-K-A-S-H and use code Akash 50 for 50% off your first
12 months. Today's episode is brought to you by Maven. The problem with most courses online,
like Udemy, is there's no live component and the instructors aren't experts in their fields,
they're professors. At Maven, you get direct live access to experts and operators from the world's
best tech companies. You can't get that access anywhere else. In any university, and you usually
can't find them on YouTube either. I've featured so many of Maven's experts in the newsletter and
podcast for that reason. To help you out, I've put together a collection of courses I recommend
at maven.com/x/akash. This includes courses like AI prototyping for PMs, product sense for PMs,
and getting an AIPM certification. Visit it now at maven.com/x/akash.
So, you know, Dev-N can be really good at engineering but can't adapt as easily unless the product
kind of makes, makes upgrades. Charity is a great product owner but, you know, might not adapt as
well to a new environment or a new situation. And so, I think about adaptability, I think about
resilience, I think about improvisation as things that are uniquely human that we're really good at.
And I do think there's something about not losing that as we work more and more with these AI agents
and colleagues. So, the AI colleague element is really an important part here but I guess the AI
colleagues aren't quite there yet. Like, they can't go and train your sales team on the new feature,
they can't go answer your customer support team's questions about how users handle this complex
flow. So, when do you foresee kind of this huge reckoning happening for the PM role?
So, unfortunately, you have me on this podcast and whenever anybody says, "AI can't, I go,
have you tried?" Like, have you legitimately tried? I think there's a difference between no one's
done at scale adoption or built a billion dollar SaaS business off of a problem's face versus
quote-unquote AI can't. I actually took, created over last week we had Hack Week at LaunchDarkly,
it was during our sales kickoff week, I built an agent to ingest all of our product marketing
sales enablement materials and created basically like a co-pilot for our revenue organization to
learn and train and answer questions about our products from a customer perspective. It was for
exactly the use case you said that you couldn't do, train the field and train CS and I did that
in, I don't know, two and a half hours pretty casually and got very, very high quality outputs.
And so, you know, I tend to tell people when they say they can't, I say, "Have you tried?"
Now, what I don't think has changed as quickly and what I anticipate will take longer than sort
of my optimistic or technology forward point of view is organizational adaptation and individual
workflow adaptation to these new models. I candidly think it's hard to change human behavior and we
have been trained over and over in our careers in tech to use a certain set of tools, a certain
set of methods to get things done and those things become muscle memory. They become professional
muscle memory. You know, when you need to reach out to a colleague, you go to Slack and you send
them a message. When you need to communicate something, you make a doc or a slideshow.
When you need to measure something, you write a sequel query or you build a spreadsheet.
It's just muscle memory. It is very hard for people to adapt that muscle memory to a new platform,
unless the value is so obviously there that the pain of workflow change is worth the switch.
And so, I think you're going to have to overcome the kind of inertia of how people get work done.
I think that's hard to do. And then the second thing is organizations just are not ready to change
how they work. Are you really ready to say we're not going to hire anymore PMs? Are you really ready
to do those things? Are you really ready to prepare managers for a world where they're going to
have to manage 20 people or 40 people or 10 AI and 30 human? You know, I don't think organizations
are maturing enough in terms of their hierarchy, management structures, reward structures,
compensation structures, budget structures, actually to be able to ingest the technology.
So I think in all things, like the humans will lag the machines a little bit here,
but I'm pretty bullish that a lot of problems can be solved. And I'm also bullish that humans
have a real unique and valuable role to play in these new organizations. And in fact,
it will create more innovation and more value rather than less.
So if I continue to still man the other side, because I want to represent all of the haters
so that you can answer that. The problem with these AI tools is you might become more efficient
as a PM, but you're still going to need to do a lot of these tasks. You're still going to need to
spend the two and a half hours to create that training bot to train sales on the new set of
features. You're still going to need to interact with executives on product reviews so that they
understand even if it's an AI agent equipped dev team, what they're going to build.
Yeah, I think though, what people underestimate is leverage, which is the capacity. And this is
a lot of what I talked about in my config talk, which people hated. I mean, truly, we're like,
who is this lady? There's no way you can do these 50 things on the slide.
Making it up. No, I know people that do that level of work, and it's because they have
leverage, because they use tools to take an hour's worth of work and turn it into 100 hours worth
of value for the company. And so I think, yeah, you're going to replace the hours with different
kinds of work, but the output of that work is going to be significantly higher leverage and
across a broader surface area and with more depth than you can do without those tools.
And so I just think that again, it portrays a lack of imagination to not think, could I do this
job in a different way? Could I add more value in a different way? And let's make it a little
selfish. If I add value in this differentiated way and I prove I'm an incredibly high leverage
employee or teammate, that opens up growth opportunities for you. That opens up growth
opportunities for the company, because presuming you're operating in a higher leverage way,
you're creating more value for your customers, you're creating more value for the company,
promotion paths open up, new opportunities open up, all sorts of things open up. So I do think
it's a little selfish to be at the front of the line, figuring out how the product management
world is going to transform, because I think those who do are going to exceptionally outperform
those who don't. So if we dive into development and design, which are two of the areas that people
have been hyping up as PMs will be able to do, I wonder if PMs eventually hit a roadblock though,
right? Where they're saying, hey, we don't want PMs to have access to our GitHub or our codebase
or we don't want PMs to have final say on design. Is there eventually a spot where they still need
those experts in those specific fields? So again, I think this is a human problem,
not a technology problem. So I think the technology will get there. I think that
we will make high quality design more and more accessible to folks with good taste and customer
and product sense. I think we will make high quality code more accessible to folks that don't
have deep computer science backgrounds. I think all those things will be very, very accessible.
I think it's relatively inevitable and probably become very inexpensive as well. If you just look
at the competition in the market and how much is available now, then you just cast that forward
to the future. That being said, I think you have a human problem of egos. You have an organization
problem of retaining high context, high talent, creative individuals that can have unique and
hard to replicate impact on a product. And you want those people doing their best work. You want
those people contributing. And so I think ultimately comes down to a leadership challenge and a
culture challenge. And I faced this, launched, I think I talked about this a little bit at Lenny
Summit, where we have explicitly put in an operating principle in our technology organization called
There Are No Lanes. And we created this out of a little bit of territorial behavior between
functions. So I am CPTO at LaunchDarkly. I lead all of technology. So everybody reports to me,
product, design, engineering, data. We're all one big happy family. And I have executives that
lead those functions underneath me, but we really do operate this team as one team. And yet, functional
silos do come up. Engineers write code. Designers make designs. Product managers define problem
spaces, talk to customers. And what I was finding is these anti-patterns of behavior,
where a enthusiastic engineer would come up with a design and really offend a designer.
Or a designer was sitting there waiting for a PM to write a PRD, and this PMs and meetings all
day. And the product wasn't that complicated. And the PRD probably wasn't the blocker.
So, but they were doing it out of like respect for the lanes, like respect for my job as product.
I shall not leave my lane. My job is design. I shall not leave my lane, etc. And so we made this
explicit operating principle. There are no lanes. We're not going to get mad at each other
for stepping into each other's lanes. If you can contribute work product, inform, and contribute.
And let's not get let ego or territory get in the way. So I think there's one cultural thing.
And then the other thing is, again, let's get selfish. No designer or very few designers go
into user experience and think, man, I really want to be like a production designer for engineers
so they don't screw up padding on a form. Like, that's my highest, highest calling in the world
is to like, you know, make sure that the pixels are right. No designer. Once they're
experience and intuition, creativity going into like, that's not great. What they want is to
operate at the highest order of their craft. So what I tell designers is, look, cast off some
of the stuff to design systems and these front-end prototyping tools, like don't spend time on wire
frames. Let's think about the hard problems. Think about interaction design. Let's think about
motion. Let's think about sound. Let's think about copy and all these kinds of things that really do
benefit from this human touch. And so I kind of claim that if you're more generous with
giving out different parts of the cross functional work, you can sort of operate at the highest level
of your craft. And I think that's very valuable and fun. So what is the forecast for the role itself?
Like the role itself of PM has had an unrelenting ascent from 2001 to 2021, where it was growing at
3% per year, and it was compounding. And then in 2022, it actually dropped. In 2023, it stayed flat.
Finally, in 2024, we hit that new all-time high of PMs above 2021. What is the future trajectory for
the number of PMs? Yeah. So I think people would presume that what I'm going to say is the sort of
like ongoing meme on X, which is PMs are just going to become engineers and build things and
prototypes are going to replace PRDs and etc, etc. I actually think that some PMs will go that
direction. So I do think some PMs will become more closely aligned with execution on the technical
side, or they'll become more closely aligned with products and they'll really become like
experienced managers. They're thinking about how do I craft this experience? How do I make it high
quality, understandable, get user from point A to point B, drive value for users, we can drive
value for customers. I think that is certainly a path and a way that the product management role
can shift. I think what people underestimate is PMs really becoming much more commercially
oriented. Everybody wants to say they're a PM as GM and no one wants to put on variable comp
for their P&L. So I do think there is a certain type of product manager and product leader
that is very business oriented that has almost like a finance data or go-to-market revenue strategy
background and is really thinking about, okay, I'm presuming you're going to build a great
experience and solve customer problems. Fine. You experienced managers go do that, you engineers
go do that, designers figure it out. What they're going to be thinking about is how do I extract
commercial value from this? Where are the go-to-market strategies that will actually work? How do I
enable a workforce, whether human or AI, to go after these channels? And how do I actually grow
this business line? And I think that's a really unique and interesting factor for product managers
to think about, which is how do they hone their commercial acumen? Which again, I think benefits
from the protection of the day customers don't want to talk to AI as much. I mean, I think we see
that customers don't want to interact with AI. They don't really want to interact with AI and
support as much. Certainly not in sales. There is this value of human-to-human connection.
Product managers can play a really unique role there because they have the technical lens on it,
but they're bringing a much more business forward mindset. But it can't be at the shallow level that
most PMs think PM as GM operates. It's not okay ours. It's not like, oh, I'm going to increment
this 2%. It is owning the business. And I also think that means that compensation structures
are really going to change. That was where I wanted to go next is, okay, if PM is really going to
change into these two areas of experience management and GMing, what are the skills? What are the
things that I as a PM who's working as a PM today should be focused on in order to adjust to this
new reality? So we can talk about those two things separately. I'll start with the experience
manager, which is hot and fun and like demos really well, which is you got to get really good
on talking to LLMs. And so my joke is I have one of those not very valuable liberal arts degrees,
but jokes on you all. I'm very good at talking to LLMs. So you got to get really good with working
with these tools and understanding how to use natural language to get out good output. I think
especially if you're going to be one of these like AI powered PMs, you're going to need to
learn to code. And I don't mean you're going to need to learn to output code in a tool. You need
to learn to read code. And so it's really funny. I've been teaching my seven year old to use some
of these code generation tools. He's really into the NBA and the NBA has an API. So we're like
making these Python notebooks, pulling like player stats and moms making him read the code.
Because if he's going to be an AI powered PM, kids got to read the code. And so I do think
there's some fundamentals of software engineering that are really valuable to actually make you a
relevant member of a technical team. I think that's why I have credibility is I went code first and
then code gen second as opposed to code gen first. So I think you'll need to code to code.
And then I do think taste matters. And so being exposed to a wide variety of digital
experiences and digital products or products in the world, being able to decompose why an
experience works for a human, how you would align an experience to a user goal, how you would
gently move a user in the direction you want, and how to test and use data to get that right.
I think is a really important skill. And honestly, I don't think there are things
that product managers spend most of their time on. I think they're things that designers spend
most of their time on. And I think there are things that engineers spend most of their time on.
And so one of the things I'm curious about in this experience manager bucket is,
do we really see more PMs becoming experience managers? Or do you see more designers and
engineers becoming more like PMs? So it'll be interesting to see what direction those moves come
from. And then the second category, which is true GM, and what we do, what we see there,
I think it's really going to be commercial and business strategy. And those are going to be
things like channel management. How do you go to market? How do you acquire customers? Where
do they come from? How do they cost? They will be things like pricing and packaging, which is
actually very complicated. I'm candidly not great at it. I've hired somebody who's great at it.
For pricing and packaging, how you think about the aspects of how you might commercialize
anyone product and honestly selling? I think people think that I've gotten to the place in my role
because I'm an exceptional product thinker, engineer, all this things. I think I'm pretty good at
that stuff. I am real good at selling. And so I think, you know, being able to get in front of
customer or user cohort or a market and really share the value of what you've built and set the
stage for an exchange of value between user customer and your company is really important.
And I wish more product managers spent time really understanding how their products are monetized,
thinking about how to optimize that monetization and then thinking about their product as a business.
And if you're looking to improve these skills, do you have specific resources or places people
should go that are your favorites? Yeah, I have two favorites, the school of hard knocks and working
at a startup. You know, I do that. There's all sorts of great books. I have like a wall of great
books. And at the end of the day, the reason why I think I have such breadth of skills is I really
spent the majority of my career in startups of different stages. And startup life just gives you
an exposure to a variety of functions, a variety of skills you have to learn on the go. It is a
great place to be for someone who wants to develop broad skills. If you want to develop narrow skills,
go work a place where you are one of 10,000 PMs, you will get very good at being a PM at that
company. If you want to have a very diverse set of skills, I encourage people to work at smaller
companies where basically the job description for everybody is get it done. I recommend you
take world tours in different functions. So I am a CBTO. I have been a copywriter. I have been a
leader of a growth marketing team. I have run social media. I have run a design team. I have
been a PM. I run a data team. I took the hardware tour of jobs in tech. And now I have a really
robust set of experiences and skills to draw from. And I think you could only do that if you work
at companies that give you sort of a diverse set of experiences. So I just think there's no other
way to learn than to do. You read lots of books. You can do lots of things. You can admire leaders.
You can follow their career journey. But I say get exposed to it and do it. And I think the best
way to do that is work at a startup. How much of it can you learn with side projects and things
outside of your full time job? So what's really funny is you're probably going to ask me a little
bit about chat PRD next and I'm excited to talk about it. My side project is like 20 years
accrued experience being expressed in a very unique moment. And so I don't think everybody's
going to have the side project experience that I'm having with chat PRD because it really is
chat PRD is like the outcome of 20 years of work. It's not something I just like came up with and
released into the world. And so I do think side projects can give you building skills.
So I think it's a great way to learn how to code. I think it's a great way to learn new technologies.
I think it's a great excuse to spend time with customers. But the biggest challenge with side
projects is distribution. And I think you are going to have a much easier time learning distribution
strategies at companies that even have the tiniest inkling of distribution foundation than trying
to zero to one it yourself. I think it takes a lot of time. I mean, you've built something,
you know how hard distribution can be, how much discipline, how much time it really takes.
In fact, it's the thing that I spend the least time on at chat PRD, probably to its growth
that's detriment. And so I do think you can learn building skills. I think it's harder to learn
commercial and business skills because you don't get exposed to it at the scale where it really
matters. But it's very fun. And it shows to me when people have side projects, it shows to me
an intellectual curiosity and a sense of agency that I think bodes well in job searches and in
general jobs. So I like to see it. But I think you have to be realistic about what you at your
stage and career can get out of it at any one time. Now I want to dig in a little bit more to
kind of what this new world of PM looks like day to day. How does a day in the life of a PM
look like, let's say two years from now versus two years ago? I mean, two years ago, we were all
in pools, right? Very fun. No, I mean, I think that in the course of my career, I spent a lot
of time documenting. I spent a lot of time managing expectations, managing engineer. I mean, like,
how okay, actually, two years ago, what is it? Docs and dates, product managers, right in docs,
given dates, given dates to engineers, given dates to executives, giving dates to customers
and then writing lots and lots of docs, either about products or about dates, dates and docs.
And I think now, like, you should be spending a lot less of your time on dates and docs.
And so, you know, I do think continuing to have more time with customers is really important.
So I expect our RPMs at LaunchDarkly to be very, very customer facing spent a lot of time with
customers. Thinking a lot more about the shape of the business is really important to me. And so I
think you're going to be spending a lot less time writing things down as a PM in two years
and a lot more time getting stuff actually done at the edges, whether that's at the commercial
edge or the building edge. And so what I think is that, you know, product manager is translation
layer. I hope goes away and we make a solve for that because I don't think that's the highest use
of anyone's talent. And instead, I think product managers can spend time with customers,
write some code, build some things, actually experience the product and
reduce the steps to adding value. That's one of the most frustrating parts, I remember,
the PM job is you are like the entire company's expert on a feature once you launch it. So anybody
who has a question about it, especially if it's a hard one that the knowledge base maybe wasn't
already written for, they come to you. You are the spokesperson of the product. It was really
interesting. I was actually having a conversation the other day about a, you know, somebody on the
team who felt like their contributions to the product were being overshadowed by the PM's role
as the internal kind of representative. And I said, you don't, you don't want that job. That is,
that is both a feature and a bug. The reason why that person stands up and represents your work
is because we need one person that the entire org knows to go to to answer questions. And I
promise you, you do not want that person to be that person to be you. And so I do think product
managers have to play that role. You have to craft yourself as playing that role because it is too
confusing for the organization to say which of the seven people on this team or these 24 people on
this team or 120 people on the team, do I go to to answer this question? It can't just be,
I don't know, figure it out, it has to be, you know, Joe or whatever. So I do think that's a
frustrating part of the role and why do it? We're not the best at it. It's not, you know, inherently
human to be a, you know, knowledge base. I think there are ways to solve for that. And I think
smart product managers solve it for themselves. How has the PM role at LaunchDarkly? What have you
done to help PMs at LaunchDarkly embrace this new reality? I mean, honestly, I think some
didn't, didn't want to work in clear was America. So I do think it's being clear about what it,
what it means to be a product manager under a specific leader. And again, I have my style.
You've seen it as seen, as seen on the internet. It's what works for the teams that I'm on. It's
what works for the organizations that I try to build. I think it was, it's what drives value.
So one, it's being clear and making it clear if that's not how you want to operate. No hard,
no hard feelings. That's totally fine. But let's find a place where you're going to be more
successful. And then after you make those expectations really clear and you get the people that raise
their hand and go LFG, like I'm really excited, you support them with tools and you set them up for
success. And so a couple of things that I did is I heard a very commercially oriented product
leader, Jen, our VP of product, she is a 20 out of 10 product and commercial strategist.
And she really brings to the team, which was very biased towards more of that like experience side
of things, a real commercial advisory to how they think about work. And so one is you round
out the team with the skills that you want to see to sort of pull the organization in the
direction you want it to go. Two, you get really generous around tools and you get very not
particular about how work gets done. You just care about the work itself.
And so people use whatever tool they want. They can generate docs. There's no like secret
chat GPT in my house. Like let's all lay it out on the line. We should all talk about the tools
that we use. And then you have to show by doing. And so in every role that I've ever been, no matter
how fancy the title, I'm going to PM something. So right now I'm PMing AI configs and I show up
as the PM on that project visibly inside the company as the PM I want to see commercially
oriented, very tight couple with customers prototype in the in the in the product a lot
commercially oriented on a lot of sales calls. And so I think you also have to just show how
it's done to set a new model and then you have to reward it when people can rise to the occasion.
One implication that you've talked about, and I want to actually share my screen here for
those of us watching on YouTube. But if you're not, we'll also talk through this is the era or
the rise of super ICP and the first reaction everyone has looking at this list is, Oh my gosh,
this is a huge list. We're talking about scrappiness and hustle with like 13 bullet points under it.
Commercial mindset with like 13 bullet points under it being indispensable with another
not like 40 things in total that we need our PMs to do. In a world where if you go check the
product management subreddit, the number one thing people say is they're expecting too much of me.
This is an unfair rule and burnt out. How do you kind of thread the needle there? Like what should
be be expecting out of our product managers? So I will say I work in tech in San Francisco.
I know these people, these people work for me. I compensate them very well and they have a lot of
fun. So like, if you don't want to do it, great, like truly don't do it. Don't do it. But there
are people that can. There are people that can. They work for me. We compensate them exceptionally
well. And they look at this and go, this is, this is fun. This is fun. This is how I operate. And
again, if you look at this list, it's not meetings. It's not tasks. It's attributes. It's culture.
It's soft skills. I mean, if somebody says there's no way I could have customer relationship sales
raise relationships and marketing relationships, you should not be a product manager. And so I
think these are attributes of the highest performing product managers. I think if I'm going to hire
product managers, I'm going to hire, you know, as I say, killers only in the house, like,
we are going to try to hire the best of the best. We will hold them to a very high bar and we will
compensate them well. And so, you know, now, now look, you have to make your own decision as, as,
as an individual of one. Do I think I'm compensated fairly relative to the impact I'm having on my
company? And look, I've been in places where that, that calculus doesn't work out, doesn't work out.
You can also decide if you want to work at a company with someone like Claire,
where this is how you operate. If that doesn't feed you, there are lots of other jobs, lots of
other companies where you can go work where folks have different expectations. The people that work
on teams that I lead, I think we want to win. I think we want to get a joke today that the only
prize we want is net new ARR. Like, we're very business oriented folks and we're competitive
and we're hardworking. And so, I think this is a reflection a little bit more of, of attribute
and team culture than it is. How do you fill 40 hours a week? I don't think anybody on my team
is, you know, burning the midnight oil. In fact, I think I'm probably up the latest of most people
when you talk about how I quote unquote do it all. I don't think this is about hours.
I think this is about how you operate in your role as product management, where you find
leverage through tools and don't spend a lot of time on things and where it's really important
to show up culturally. So I think, I think these people exist and if you're out there and
and this is exciting to you, I'm always hiring. Trust isn't just earned, it's demanded.
Whether you're a startup founder navigating your first audit or a seasoned professional
scaling your GRC program, proving your commitment to security has never been more critical or more
complex. That's where Vanta comes in. Businesses use Vanta to establish trust by automating
compliance needs across over 35 frameworks like SOC 2 and ISO 27001. Centralized security
workflows, complete questionnaires up to five times faster and proactively manage vendor risk.
Vanta can help you start or scale your security program by connecting you with
auditors and experts to conduct your audit and set up your security program quickly.
Plus, with automation and AI throughout the platform, Vanta gives you time back
so you can focus on building your company. Join over 9,000 global companies like Atlassian,
Kuora, and Factory who use Vanta to manage risk and prove security in real time.
For a limited time, my listeners get $1,000 off Vanta at Vanta.com/akash. That's a V-A-N-T-A.com/A-A-K-A-S-H
for $1,000 off. So there might be an element then that there's like a bifurcation
almost where there are some PMs who are getting highly compensated doing all of these
activities that we have here, friends with partners, friends with executives, best seller on the team,
and what happens to the PMs who can't really do all of them?
I mean, I think there are still lots of like very lucrative tech jobs. I just think
I really believe in this super IC path because I think product teams are going to get smaller and
smaller. I really do. I just think that individuals become higher leverage. The ratio will change.
This is something that I believe you don't have to believe it, but I believe it. I need to create
career paths for high impact, high potential product managers that do not involve them being
a people manager to other PMs. It is an unsustainable organization structure for the future.
And so I think this represents a growth path for an experienced product manager who probably is
operating this way and wants to have higher and higher impact on the organization, but not people
manage. And this is what's really interesting. I think if you took any VP of product, senior
director of product, director of product who has five to 10 direct reports, they're spending
all their time in one on ones. They're spending all their time people managing. You cut that
out of their day to day. A lot of their time that they could be spending is going towards that list.
And so I do think it's a little bit about time allocation, what you reward, the shape of the job.
And I just hope that the shape of the job goes more and more towards the actual work,
like the customer oriented value creating work, then it becomes about the work around the work
or the work around the people, which to me is internally valuable that creates no value for your
customers. So traditionally, whereas your engineering org, it was very common, you had like an engineering
manager, they might have 10 reports. Oftentimes, what you'd see on the other side on the product
management side is there might be three PMs reporting to one group product manager, one director,
and there might be two or three directors or group product managers reporting to the VP.
And it's a little bit more like one to one or one to three sort of up the reporting chains.
What does the future reporting chain and PM look like?
Yeah, I think that's a reflection of managers not being able to be creative about what a growth
path looks like for a PM. And our industry not being creative about what a great senior leader
and product manager has to look like. And so I think orgs are going to get a lot flatter.
My org is very flat. Sometimes to my judgment, my org is very flat.
Our product org is very flat. We only have one layer in our org.
And even then we suffer with these like I formations or two or three reports into somebody.
And the reason why we have allowed those formations to happen is actually not about
people management, although that's a helpful aspect. It is about internally knowing who the
throat to choke is on a surface area, which is it really is yes, you have the people management
responsibility. But it's really you have the product line responsibility. And it happens that
those people are contributing to the product line. So we really take it a product first orientation.
We say does this product line need a singular leader and does this product line merit this level
investment and product management? And if that is true and the leader has sufficient
people leadership experience to not totally fudge it, then let's put the people under that
because it creates internal clarity for the organization. And it also provides higher
leverage in terms of crafting career paths and all those things that become hard to do at a certain
certain scale. So I think orgs are going to get flatter. I think my role, this like CPTO role
will probably continue to happen more and more as the lines between product engineering
blur and the lines between product engineering and design blur. You're really going to need
leaders that understand the full function and can create kind of creative organization structures
around, you know, uniquely motivated and skilled individuals. I don't care if an engineer has a
software engineering background, all of a sudden wants to be a product manager, but never PM to
Google. Who cares? If they can get the job done at LaunchDarkly, like let's call them a product
manager or let's, you know, let's create a new role around them. So then you have to be really
creative in the future. But I certainly think orgs are going to get more flat. So that's what
happens to the middle of the org. We have a flattening out where people become super ICs.
What does the death of PM mean for VPs of product and CPOs? How does their role change?
I know people always think that I mean them and not us. And I definitely,
definitely mean us. I mean, I am actively creating my own demise. You know, chat PRD,
you're on demand chief product officer. Let me work myself out of a job. Let me like
replace myself. And I can add more value. So I do think it's coming for leaders. I actually think
this is the number one mistake made by executives in organizations right now is they think that
AI will transform their organization and AI will transform their customers and AI will
absolutely never transform them. And I just think it's so naive. I think it's so naive.
I think it's full so much ego. And in fact, I think one of the things that AI is best at is
strategy. And so I think it's definitely coming for us. So, you know, how I think it's going to
change one, you are just I don't think product leaders have spent a lot of time thinking about
the change management of state change technologies. And what I mean is like, if you are not obsessing
every day about how my organization is going to be different in 18 months or 36 months or five
years or 10 years. And my team needs to be trained differently. And I need to show up to customers
differently, because this is a truly state change technology. You will not be an S tier
CPO, in my opinion, you will be left behind. And so I think there's this sort of like obsessive
consideration for the possible futures that needs to happen in in product leaders. I think they
need to think about their organizations as dynamic, not fixed, which is just because your
structure is like this today does not mean it should be structured like that tomorrow and getting
really creative about what moves forward. And then, you know, same as I tell
individual, I see product managers, do you have the commercial skills? Can you code? Like,
are you fluent with these tools? Have you challenged what part of parts of your job you can create
leverage in versus not? Are you walking the walk or are you just writing checks to open AI for the
rest of the team? I think those things are really important. And honestly, I think the
existential threat is competition from other talent. Who will we all want to hire as a CPO or
a VP of product or VP of engineering in three years and what skills and proof points are they
going to have to show? Would you rather have the VP of engineering that has two years of
agentic co-generation under their belt or the one that said it's not going to replace my
engineers ever? So I haven't really experimented that depth in that much depth.
So I think you just really have to prepare, again, your future for what you think the world's going
going to look like. And so, you know, maybe TLDR, roles going to collapse, you're going to have to be
much more broad based, your organization and the way you manage is going to change. So you might as
well be prepared for that. And then, you know, the third thing is, I think that product managers,
product leaders, aren't curious enough about what this world of AI means for how products are
designed and built. And so, chap here, D could go to zero. I'd be very sad. Our customers would
be very sad. And it would still be worth it because I have learned so much about building
AI products. And that is just an education that you cannot afford to miss in this moment.
So even if your current product does not force you to think about
agentic experiences, AI experiences, if you don't learn that, no one is going to hire you
in a couple of years because you will be lacking skills that are going to become
pretty commonplace. And so that is my urgent plea to my fellow chief product officers,
VPs of product leaders is it is coming for you. So think about what that means and really upskill
yourself. So now where I want to go, and we've alluded to this a little bit, is that you walk
the walk, right? We've been giving all this advice out about learning to code and programming. And
you have been doing that with chap PRD. So the first thing I would love is if you can share your
screen and show us all the things you've been shipping over the last year or two with chap PRD.
All right, to start, I would be remiss not to call out that chap PRD got a glow up,
as we say, in in the biz. And we have a brand new brand. So the, you know, people don't make
notes about chap PRD. I did not actually intend this to be an at scale enterprise SaaS business,
like it is today, as I tell my friends, I like ode my hobby into a second job. So jokes on me,
I actually started chap PRD as just a tool that I wanted to build for myself, for my product teams.
I registered chap PRD on a whim. I made the GPT as a whim and our avatar used to be this like version
of me with sunglasses at a laptop and headphones. But we we have grown up now a little over a year
later. And we have this beautiful new brand to sort of represent that we're working with some
of the most amazing companies in the world and helping their product teams be better product
managers. And I really do think we're the number one AI tool for product managers and their teams.
In terms of usage, in terms of broad base, I think we're adding a lot of value. So a little,
little facelift, but more important than facelift is the functionality. So chap PRD is really
oriented to being your AI PM co-pilot to help you get your product work done faster. And while
we work with a lot of product managers, my favorite use cases of product chap PRD are actually non
PMs who need PM skills. So those could be engineers who need to write PRDs, VPs of product who aren't
really ICPMs, but always get tagged in to do a little work, or other folks that would just benefit
from some product thinking. And you know, as I joked earlier, product management is dates and docs.
And so what chap PRD, I think one of the reasons why chap PRD has been successful is we've just
embraced the fact that product managers create a lot of docs. And if we can make product documentation
sharing context a lot easier for product managers and up level their thinking, we could really
create a lot of value for PMs make their lives happier and ultimately help them create better
products. So one of the changes that we've made to chap PRD recently is we've accepted we make a
lot more than PRDs. So I'm going to go into our templates feature, which is one of our most
beloved feature. You're actually, I think you're in here. So we'll get a little snapshot of you,
but we have over a dozen out of the box templates of different docs that you can create. Oh,
look, here's you. Look at that. So if you want the best one, we'll make this default.
Well, well, you will use your PRD. But this is a combination of different PRD templates, one
pagers, competitive analysis, stakeholder decks, checklists, all the kinds of things that product
managers can make. And you can actually upload your own templates if you want. So you can import
them from PDF, you can paste in the text, we'll actually use AI to scaffold out a template.
So this has been a really useful feature for our customers, because they want to be able to
create not just PRDs, but all the documentation that product managers want to create. And they
want to be able to do that in their company format. So they want to be able to do their PRD
template, their PR FAQ. And so templates have been a really useful feature of chap PRD.
We also have several integrations. So we have Google Drive and Notion integration for importing
and exporting documents. So we know a chap PRD is not yet the source of truth for all docs. We
want to make it really easy to work with your current sources of truth. And then we have a slack
bot where you can actually chat with chap PRD directly from Slack. So I was saying earlier, I
think the biggest challenge to product adoption is actually workflow and getting in the workflow
and where do PMs work? They work in Slack. So we have the slack bot that you can actually just
like at chap PRD, can you make me a PRD based on this like thread? And it will make the PRD for
you online and send you a link. It's really a nice experience. And then we recently released a
concept called project. So if you've used anthropics, clouds, artifacts, things like that,
you're probably familiar with the concept of projects, which are specialized chap PRD
assistants that have context about a specific area. So I have for my chap PRD project, I have a
pricing and packaging project. It has my pricing and packaging plans. And it's going to help me
think about price points, packages, upgrade paths, monetization. So it's really focused on
that use case, and then learns sorry, sorry, existing customers and brainstorming ways to
increase prices by 20%. But it helps me, you know, work on different pricing related initiatives and
learns from all the knowledge here in the chat. But let's show off the kind of basic flow
of chap PRD and get a document written. So I look at that, I selected yours as default.
Oh, look at that. We're going to do a PRD. And we're going to say, what am I working on?
And I am working on chap PRD has a team's feature and enterprise plans. So we're starting to work
with larger and larger companies, companies that have 50, 100, etc. PMs. And the admins of those
companies, the people who are the buyers, the commercial buyer, always want to know like,
who's active and are they getting value and how's that working? And so I've been playing with this
idea of an admin reporting center where teams, admins, those who sponsor the chap PRD account
can get reports on how their teammates are using chap PRD usage, time saved, etc.
Seems like a pretty good idea. Okay, so I'm going to click go, non-deterministic model,
non-determine. So it's either going to start writing that document really quickly because
it knows me. Well, no, but it's going to ask me. So this is what we like about chap PRD. We don't
just build it to like, create anything. It really wants to work with you as a co-pilot
to make sure that this document is going to be great. And it's not going to be great based off
like one sentence. So it's going to ask me for input about what I need. I'm going to say,
one, primary goal is to show value to buyers. So they expand and retain. Two, I want it to include
chats and docs created as well as an estimate of time saved. Three, as real time as possible.
For all of this data is available in our prod database, but we want it to be as performant as
possible. And then five, key start growth, no stakeholders. I am everyone. Okay.
And so it's going to take that information. And then it should start drafting a PRD based on
your template. And so what this is doing, I mean, everybody thinks that this is sort of a,
it's going to be an outline. Love this. Yep, usage metrics.
Liking the template and sections. Yeah, it's really nice. So again,
feedback, right? It's not just like, I'm going to yolo you, you know, a bunch of text. It's like,
does this look right? And I'm going to go, this looks awesome. Please write the doc.
So then it should write the document. It should give me a little spinner here in a hot minute.
So here it is. It's writing that admin reporting PRD. Again, you're going to see your sections
problem, high level approach, narrative metrics, how we're going to size it, solution, key features,
all this kind of stuff. Super awesome. So now I have this document. I can ask chat PRD to actually
update that document. So if I have feedback, I can say, I don't love the high level approach.
Can you fix that? I like to say my boss is really mean. Can you edit it with like a really mean
chief product officer's lens on that and all those sorts of things. So I have this document. It's not
just the doc itself. You can actually edit the document in our real time editor here. And so
we have a text editor that lets you go in and edit. You can make AI changes to the content.
You can comment and at mention your colleagues. You can do all this stuff. And then you can
export it to Google driver notion. Or if you're me, you can export it to mark down and use it
inside cursor. So that's a little bit of the spin of what chat PRD does. And then the other
thing that's kind of cool about chat PRD is you can actually switch templates. So let's say I
love this and it's like, this is 10 out of 10. Super great. And I want to take this to the next
step and create it for marketing. I can switch to the PRFQ template. Now I'm using the PRFQ
template. I can say this PRD looks awesome. Generate a PRFQ for me. And it will take the same content
and create a new style document for you based on the content of your template. So we've the
investment in multi doc chats has been a really big one for us in the past couple
weeks. So now we're seeing people creating four or five different assets off the same kind of product
space. People really love the editor and the export. And then the projects workflow where people
are really centralizing around shared knowledge spaces with their team and really learning from
the documents they're generating so that each time you're generating things, it gets better and better.
So that's chat purity. And now where I want to see an action is your AI development tools. Can we
actually try to start developing this? How would we build this? Okay, so we're not going to build
this one because this one's going to take a gajillion years. But I did have I did want to show
something because people always think that I'm lying when I say I use a used Devon. And I'm really
not we're not lying. And so one of the things that I thought it's not a thrilling use case but
we're going to do it anyway, which is this early access banner is actually out of date. And so
projects is no longer an early access. It's available to pro teams or enterprise plans. So
really what this should be is this should be an upgrade flow for for chat purity. And really
what should say is you want access to teams like click here click here to upgrade and it should
send people to to the the plans page. And so what I would do, I don't want to write code,
I'm in meetings all day. So I'm going to screenshot this thing, I'm going to go into chat purity.
She's going to behave. And I'm going to actually one of our most popular templates is no template,
which is just do your best. And I'm going to say I need a quick technical spec for a small task
for my engineer. I want to replace the early access banner on projects with a CTA for anyone who is in
the basic plan to upgrade to pro teams or enterprise to get access to the project's feature.
So I'm going to ask chat purity to write me a PRD. Sometimes I need it for for Devon. Sometimes
I don't but I think it's good practice and they love markdown. They being the AI love markdown.
So I tend to do this just because it tends to save me a bunch of back and forth on tasks.
So again, it's going to give me a task overview, current state, desire change, target audience,
text, unlike projects, that's great. I don't care. I don't want to be a copywriter. Consistent with
branding, end of spec, love it. So the the the the the AI knows we're done. Okay, so I'm going to
actually go into the editor here and I'm going to click export and export this to markdown.
So I have a nice little markdown file down here. And then I am going to
which is always a thrill open slack on a screen share. So I would then
grab my slack because again, I love operating with my colleagues as I would in any other
world, which is with slack. You can see I have a long standing very compelling
chat with Devon that I do all the time. And I'm just going to drag this
MD this PRD here and I'm going to say, hey, Devon, I'm very polite to my AI. Just in case you're
wondering, um, could you please make an upgrade to the banner on the drive projects page about
access to the projects feature? Here is the PRD. I want it to link to plans if the user does
have access. Otherwise, just don't show. Okay. So it has this really nice
spec that it used that we just created from chat PRD. It's going to wake up. Devon sleeps
in awakes. And so it's going to wake up. It's very polite. What I love about AI is they never
like, why are we doing this? Or is this a priority? Like they never ask me,
is should we prioritize this? Or is it a priority that's do it? It's like really quite delightful.
And so what he's going to do, um, it's going to go off and create a branch and do this work for me.
So I should get an alert soon that says that he's working on a plan. If I want him to confirm
with me, which I don't care, I let the AI run wild. Um, it can say confirm or you can say confirm
with me and I'll like double check with you, but you know, yolo, let's let's let it run. And then
this will run and go write the code. So it's going to take a little while. Again, what I think is
really interesting from an AI product design perspective is you really have to work with latency
and async feedback. So you really have to work with, um, how long is somebody going to have to wait,
set expectations? How do you create feedback that the AI is thinking or working? How do you give, um,
the user confidence that something is happening even when as you see here, things aren't happening.
And so I think there's some like pretty interesting product design questions that come up with this,
this guy, but he'll run for a little bit and we'll come back when the PR is live.
All right. So we'll come back when the PR is live. What's your advice for people who want to
build a six finger side hustle like yourself? Work for 20 years. Ship host on Twitter.
Create a channel for yourself and then have a high tolerance for pain.
Is that it? I mean, look, again, I said this earlier, everybody's like, oh, Claire, Claire did
this. This is an incredible amount of work that did not just start a year ago. Um, I have a career.
I have a network. I have an audience. I have experience on the product side. I learned a code.
I did many, many failed startups before, before chat PRD, um, or former and more successful
startups. So again, I, I don't want to undersell how much work has actually gone
in to me being able to build a product like chat PRD. Now, if you want to build one
on the side, one, be prepared to commit a lot of time to it. Like I get up at five in the morning.
I work. I work. I hang out with my kids. I go to work. I come home from work. I hang out with my
kids. I work like I'm answering support tickets at night. Like this is not glamorous. It doesn't
just like print money on the side. I use a lot of AI. So that's really nice, but it is a tremendous
amount of work. So I think that's one thing to consider, uh, be able to dedicate the time to pick
a problem. You actually know something about and is a real problem. It is very hard to build
businesses that don't solve real problems and so many, you know, like side hustle things are like
problem solutions in search of a problem. Like you actually have to find something that people
need and you need to understand that there has to be a significant enough
tam for that problem that you can get enough users to make the thing worth it. And then the
other thing that I think has been really fun is bootstrapping makes you such a good product
manager, such a good product manager, because you have no, you have no excuse when it comes to
investing resources and you are ruthless about not over investing resources and things that aren't
worth it. And I think one of the best benefits of something like chat PRD is it's really kept me
quite honest about what product market fit looks like. Product market fit looks like you
upgrade your models to 03 and in 13 seconds, somebody messages you and is like, chat PRD is
acting weird. Like it's weird today. Did you do something? And so, and I think so many pms when
you work inside a large organization that has so much scaffolding about willing a product to be
useful and rarely deprecates things, rarely admits like we shouldn't have built this.
Bootstrapping something and keeping yourself really honest about product market fit is a very
valuable thing to do. So I don't know if I have any advice other than it's hard,
it takes a lot of time and it makes you a better, better PM than I hope it works out for you.
Love it. Yeah, having built in distribution, I think is super important.
Deeply understanding your problem space, incredibly important. And then, yeah, the grind. I mean,
most of us, we aren't willing to wake up before our kids and work after we put our kids to bed.
And so that's the grind element is very important as well. Yep.
So how is Devin doing with its PR? No, he's really, oh, he did it. Look at that. We chit chat
for a little bit. Okay, create a PR. I'll let you know once it's ready review. It's usually
ready for review. It's like waiting for usually weights. Yeah, I already changed the files.
So it tends to wait for, yeah, the versatile like preflight checks to happen. And so let's check
the files. So what I would typically do here is I would like look at the code. Yes, if subscription
plan is basic, then show this new thing, unlock projects. That all looks delight.
That looks right. And I don't want to write that code to be perfectly honest.
And then what I would tend to do is I would run this locally. Unfortunately, I don't think
locally. And now I have a, I have a basic, I don't think I have a basic plan locally,
easy logged in, but I would check this locally. And I would go look at projects,
maybe the easiest thing to show locally is that that banner no longer exists. Fingers crossed.
So I'd go to, I would, I would turn this. Oh, I'm not even the right branch. That's going to be a
problem. So I would go to Devin's branch. I would pull it up locally. I would confirm that it has
done perfect and unassailable high quality engineering work. I would check a couple edge cases and
then I would approve the PR and we would ship it and it would be live. And I can do this. I tend
to do this. I'm just finding you. I tend to do at least one of these around 545 in the morning
every day. So whether it's like, hey, Devin, I noticed something weird or there's this bug
reported overnight or whatever I tend to. Yep. Okay. So that banner is now gone,
which is what we wanted on my team's account, which is what I need. And we'll have to go check
see if I have a. What is chapter any test to subscribe to? Who knows? But I would go,
I would go test another thing. And we would check that all this works. So that's, that's how you
build stuff with AI. So the QA is pretty important. And then you can ship it. Yeah, QA and again,
like read the code. So I do a lot of like looking at the code. What I do it this way. Does this make
sense? Do I like the library that the AI chose? But yeah, I tend to do QA. It's hard to get Devin
to do QA really hard to keep Devin's environment easy. It's like working with an engineer who can
write code, but somehow can't use computers. So the QA piece I haven't quite figured out. It's a
little bit of like user error and agent error. So we've mutually just accepted that Devin writes
code. I QA and review code. And it's a, it's a nice relationship. But yeah, that's, that's how we
do it. A little simple example. But you can see, if you're on your phone at the playground watching
your kids, I'm not going to pull up VS code and like, write HTML, that sounds boring. So this is
part of how I get stuff done. And that is where I wanted to end. I feel like you have more, you have
a different day than us. You don't have the 24 hour day that we have you unpacked it a teeny bit
where you're working when they're asleep. So it sounds like you're trading off sleep a little
bit. No, I'm actually not working when they're, they're asleep. So this is so funny. You take a
24 hour day, you sleep eight hours a day, which I really try to sleep eight hours a day.
That's 16 hours in your day. I would say like dedicated to work and like the pickup and drop
off and all that's you 10 hours off that. So then you have six hours a day that are like yours to do.
And even if you admittedly like me, like waste away 90 minutes of those six hours scrolling
Twitter, I'm sorry, scrolling X, you still have like four and a half hours in your day. And that's,
you know, and the things that I prioritize in those four and a half hours in a day are my kids and my
husband. And so I take them to school and pick them up almost every day. We do homework every night,
we eat dinner at home. I'm not actually on my computer after the kids go to bed unless it is an
emergency because I want to spend time with my husband. So we watch like a little TV and hang out
and lights out by 945, but I get up real early. I get stuff done before the kids are up. And then
I work the weekend. So I was thinking about it this weekend. I work seven days a week, like truly,
I work seven plus days a week. So not just on chap here, D, I have to check in on launch
weekly stuff. Like no, executive does not have to do that. I work seven days a week. So I just
think people don't hear what it actually takes to have a side hustle. And it takes prioritizing time
and effort to get stuff done and like how you spend those hours. And I'm not saying everybody
wants to spend those hours like I do. I find this very fun. It's intellectually fulfilling.
It's interesting. My kids hang out with me. They love it. My seven year old yesterday said
high risk high reward. I was like, dude, we are hanging out way too much. You have too much time
with me. You're saying high risk high reward. And so, you know, we just, I just love it. It's
fun. It feels me, but I spend time on it. But it definitely comes after I spend time on the things
that I love the most, which are my kiddos and my family. I think loving it is important if you're
going to be working on it on the weekends. And so that is a critical thing for anyone listening.
Yeah, that's got to be fun. It's super. I mean, it's so fun. So fun to me. It's just
such a delight. But so is my my work at launch darkly. I love my job. I think I'm real good at it.
And I love I chap here. He is a launch darkly customer and launch darkly uses chap here for
product work. Like I think building things is the most fun job in the world. I say this every time,
you know, when you go back to like that slide is scary. I think that slide is play for pay.
That slide is like making friends and being creative and playing games and competing
for like San Francisco tech dollars. Like I have the top 0.1% of jobs in the whole world. I get
to sit in my house and tip type into a laptop and make magic internet and do it with incredibly
smart people. Like I just think if you take a step back and you think about the gratitude that
we can even have these creative jobs, I just I just come to my work with an immense sense
of gratitude. I come to my work with an immense sense of appreciation for what I get to do. And
when you when you have that mindset, it just really doesn't feel like work.
Well, if you're not excited after that, I don't know what's going to excite you and get you
motivated to work on stuff you love. If people want to find you online, where can they do that?
Yeah. So I am on X at Claire bow. And you can also hit us up at chap here at hello at chap
PRD. And then of course, I am at launch darkly as well. So if you're a software engineering team,
hit me up at the old launch darkly website.
Amazing. Claire, thank you so much. Oh, thanks. This was super fun.
Thank you so much for listening. If you found this valuable, you can subscribe to the show on
Apple podcasts, Spotify, or your favorite podcast app. Also, please consider giving us a rating
or leaving a review as that really helps other listeners find out about the podcast.
You can find all the past episodes or learn more about the show at product-growth.com.
See you in the next episode.

