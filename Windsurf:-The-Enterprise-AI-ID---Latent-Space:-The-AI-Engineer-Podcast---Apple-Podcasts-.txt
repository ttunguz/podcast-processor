
[00:00:00.000 --> 00:00:05.000]   [MUSIC]
[00:00:05.000 --> 00:00:07.400]   >> Hey, everyone. Welcome to the latest base podcast.
[00:00:07.400 --> 00:00:09.240]   >> This is Alessio, partner in CTO.
[00:00:09.240 --> 00:00:11.760]   That's about partners, and I'm joined by my co-host Swiss,
[00:00:11.760 --> 00:00:12.880]   founder of Small AI.
[00:00:12.880 --> 00:00:15.960]   >> Hey, and today we are delighted to be,
[00:00:15.960 --> 00:00:18.440]   I think the first podcast in the new podium office.
[00:00:18.440 --> 00:00:21.880]   So thanks for having us, and welcome Farun and I show.
[00:00:21.880 --> 00:00:22.920]   >> That's for having us.
[00:00:22.920 --> 00:00:24.080]   >> Yeah, thanks for having us.
[00:00:24.080 --> 00:00:25.520]   >> This is the Silicon Valley office?
[00:00:25.520 --> 00:00:26.040]   >> Yeah.
[00:00:26.040 --> 00:00:27.720]   >> So what's the story behind this?
[00:00:27.720 --> 00:00:31.400]   >> The story is that the office was previously,
[00:00:31.400 --> 00:00:33.040]   so we used to be on Castro Street,
[00:00:33.040 --> 00:00:34.200]   so this is in Mountain View,
[00:00:34.200 --> 00:00:36.040]   and I think a lot of the people at
[00:00:36.040 --> 00:00:39.960]   the company previously were NSF, were still NSF.
[00:00:39.960 --> 00:00:42.240]   Actually, one thing if you notice about the company is,
[00:00:42.240 --> 00:00:44.320]   it's actually a two-minute walk from the Caltrain,
[00:00:44.320 --> 00:00:48.320]   and I think we didn't want to move the office very far away from
[00:00:48.320 --> 00:00:50.880]   the Caltrain that would probably piss off a lot of
[00:00:50.880 --> 00:00:54.200]   the people that lived in in San Francisco, this guy included.
[00:00:54.200 --> 00:00:57.840]   So we were scouting a lot of spaces in the nearby area,
[00:00:57.840 --> 00:00:59.520]   and this area popped up.
[00:00:59.520 --> 00:01:02.080]   It previously was being leased by,
[00:01:02.080 --> 00:01:03.840]   I think, Facebook/watsapp,
[00:01:03.840 --> 00:01:05.280]   and then immediately after that,
[00:01:05.280 --> 00:01:08.320]   a ghost autonomy, and now here we are.
[00:01:08.320 --> 00:01:11.320]   I guess one of the things that the landlord told us was,
[00:01:11.320 --> 00:01:12.760]   this was the place that they shot
[00:01:12.760 --> 00:01:14.320]   all the scenes for Silicon Valley,
[00:01:14.320 --> 00:01:15.840]   at least externally and stuff like that.
[00:01:15.840 --> 00:01:17.320]   So that just became a meme.
[00:01:17.320 --> 00:01:19.760]   Trust me, that wasn't the main reason why we picked it,
[00:01:19.760 --> 00:01:21.440]   but we've leaned into it.
[00:01:21.440 --> 00:01:24.800]   It doesn't hurt, and obviously that played it a little bit
[00:01:24.800 --> 00:01:26.960]   into your launch with WinSurf as well.
[00:01:26.960 --> 00:01:28.600]   So let's get caught up.
[00:01:28.600 --> 00:01:30.520]   You were guest number four.
[00:01:30.520 --> 00:01:31.600]   I think I was two.
[00:01:31.600 --> 00:01:32.440]   Maybe I was two.
[00:01:32.440 --> 00:01:36.240]   So a lot has happened since then.
[00:01:36.240 --> 00:01:39.680]   You've raised a huge round and also just launched your ID.
[00:01:39.680 --> 00:01:42.080]   Like, what's been the progress over the last year or so
[00:01:42.080 --> 00:01:44.480]   since the in-space people last saw you?
[00:01:44.480 --> 00:01:47.000]   Yeah, so I think the biggest things that have happened
[00:01:47.000 --> 00:01:50.160]   are podiums, extensions have continued to gain
[00:01:50.160 --> 00:01:52.400]   a lot of popularity.
[00:01:52.400 --> 00:01:56.200]   We have over 800,000 developers that use that product.
[00:01:56.200 --> 00:01:58.320]   Lots of large enterprises also use the product.
[00:01:58.320 --> 00:02:00.440]   We were recently awarded JP Morgan Chase's
[00:02:00.440 --> 00:02:02.600]   Hall of Innovation Award, which is usually not
[00:02:02.600 --> 00:02:05.240]   something a company gets within a year of deploying
[00:02:05.240 --> 00:02:07.760]   an enterprise product, and then large companies like Dell
[00:02:07.760 --> 00:02:08.760]   and stuff use the product.
[00:02:08.760 --> 00:02:10.560]   So I think we've seen a lot of traction on the enterprise
[00:02:10.560 --> 00:02:13.120]   base, but I think one of the most exciting things we've
[00:02:13.120 --> 00:02:17.320]   launched recently is this actually ID called WinSurf.
[00:02:17.320 --> 00:02:19.600]   And I think for us, one of the things that we've always
[00:02:19.600 --> 00:02:21.960]   thought about is how do we build the most powerful AI
[00:02:21.960 --> 00:02:23.880]   system for developers everywhere?
[00:02:23.880 --> 00:02:25.760]   The reason why we started out with the extension system
[00:02:25.760 --> 00:02:29.240]   was we felt that there were lots of developers that were not
[00:02:29.240 --> 00:02:30.520]   going to be on one platform.
[00:02:30.520 --> 00:02:32.040]   And that still is true, by the way.
[00:02:32.040 --> 00:02:34.960]   Outside of Silicon Valley, a lot of people don't use GitHub.
[00:02:34.960 --> 00:02:36.880]   This is like a very surprising finding,
[00:02:36.880 --> 00:02:41.200]   but most people use GitLab, Bitbucket, Garrett, Perverse,
[00:02:41.200 --> 00:02:42.680]   CVS, Harvest, Mercurial.
[00:02:42.680 --> 00:02:45.240]   I could keep going down a list, but there's probably 10 of them.
[00:02:45.240 --> 00:02:47.680]   GitHub might have less than 10% penetration
[00:02:47.680 --> 00:02:49.720]   of the Fortune 500, full penetration.
[00:02:49.720 --> 00:02:50.720]   It's very small.
[00:02:50.720 --> 00:02:52.800]   And then also on top of that, GitHub
[00:02:52.800 --> 00:02:56.120]   has very high switching costs for source code management tools,
[00:02:56.120 --> 00:02:58.040]   because you actually need to switch over all the dependent
[00:02:58.040 --> 00:02:59.640]   systems on this workflow software.
[00:02:59.640 --> 00:03:02.080]   It's much harder than even switching off of a database.
[00:03:02.080 --> 00:03:04.200]   So because of that, we actually found ways
[00:03:04.200 --> 00:03:06.160]   in which we could be better partners to our customers,
[00:03:06.160 --> 00:03:08.040]   regardless of where they started their source code.
[00:03:08.040 --> 00:03:10.160]   And then more specifically on the ID category,
[00:03:10.160 --> 00:03:11.600]   a lot of developers, surprise, surprise,
[00:03:11.600 --> 00:03:13.480]   don't just write TypeScript and Python.
[00:03:13.480 --> 00:03:15.880]   They write Java, they write Golang.
[00:03:15.880 --> 00:03:17.400]   They write a lot of different languages.
[00:03:17.400 --> 00:03:19.520]   And then a high-quality language servers and debuggers
[00:03:19.520 --> 00:03:20.280]   matter.
[00:03:20.280 --> 00:03:23.560]   Very honestly, the JetBrains has the best debugger for Java.
[00:03:23.560 --> 00:03:24.880]   It's not even close.
[00:03:24.880 --> 00:03:27.480]   These are extremely complex pieces of software.
[00:03:27.480 --> 00:03:29.720]   We have customers where over 70% of their developers
[00:03:29.720 --> 00:03:30.480]   use JetBrains.
[00:03:30.480 --> 00:03:32.200]   And because of that, we wanted to provide
[00:03:32.200 --> 00:03:34.320]   a great experience wherever the developer was.
[00:03:34.320 --> 00:03:36.000]   But one thing that we found was lacking
[00:03:36.000 --> 00:03:38.680]   was we were running into the limitations of building
[00:03:38.680 --> 00:03:41.640]   within the VS Code ecosystem on the VS Code platform.
[00:03:41.640 --> 00:03:44.880]   And I think we felt that there was an opportunity for us
[00:03:44.880 --> 00:03:47.360]   to build a premier sort of experience.
[00:03:47.360 --> 00:03:49.240]   And that was within the reach of the team.
[00:03:49.240 --> 00:03:51.680]   The team has done all the work, all the infrastructure work,
[00:03:51.680 --> 00:03:53.320]   to build the best possible experience
[00:03:53.320 --> 00:03:54.800]   and plug it into every ID.
[00:03:54.800 --> 00:03:56.680]   Why don't we just build our own ID that
[00:03:56.680 --> 00:03:58.640]   is, by far, the best experience?
[00:03:58.640 --> 00:04:01.680]   And as these agent products sort of become more and more
[00:04:01.680 --> 00:04:04.160]   possible, and all the research we had done on retrieval
[00:04:04.160 --> 00:04:05.720]   and just reasoning about code bases
[00:04:05.720 --> 00:04:07.680]   became more and more to life, we were like, hey,
[00:04:07.680 --> 00:04:11.280]   if we launched this agent product on top of a system
[00:04:11.280 --> 00:04:13.080]   that we didn't have a lot of control over,
[00:04:13.080 --> 00:04:14.880]   it's just going to limit the value of the product
[00:04:14.880 --> 00:04:16.800]   and we're just not going to be able to do the best tool.
[00:04:16.800 --> 00:04:19.280]   That's why we were super excited to launch OneSurf.
[00:04:19.280 --> 00:04:22.240]   I do think it is the most powerful ID system out there
[00:04:22.240 --> 00:04:24.440]   right now in the capability, right?
[00:04:24.440 --> 00:04:25.360]   And this is just the beginning.
[00:04:25.360 --> 00:04:28.600]   I think we suspect that there's much, much more we can do,
[00:04:28.600 --> 00:04:30.880]   more than just the autocomplete sort of site, right?
[00:04:30.880 --> 00:04:32.560]   When we originally talked, probably autocomplete
[00:04:32.560 --> 00:04:33.840]   was the only piece of functionality
[00:04:33.840 --> 00:04:35.880]   the product actually had.
[00:04:35.880 --> 00:04:37.480]   And we've come a long way since then, right?
[00:04:37.480 --> 00:04:39.920]   These systems can now reason about large code bases
[00:04:39.920 --> 00:04:41.840]   without you adding everything, right?
[00:04:41.840 --> 00:04:44.680]   But when you use Google, do you say, at New York Times post,
[00:04:44.680 --> 00:04:46.360]   blah, blah, blah, and ask it a question?
[00:04:46.360 --> 00:04:48.400]   No, we want it to be a magical experience
[00:04:48.400 --> 00:04:49.600]   where you don't need to do that.
[00:04:49.600 --> 00:04:51.120]   We want it to actually go at an execute code.
[00:04:51.120 --> 00:04:54.120]   We think code execution is a really, really important piece.
[00:04:54.120 --> 00:04:56.920]   And when you write software, you not only just
[00:04:56.920 --> 00:04:59.600]   kind of come up with an idea of the way software kind of gets
[00:04:59.600 --> 00:05:02.480]   created is software is originally this amorphous blob.
[00:05:02.480 --> 00:05:05.240]   And as time goes on, and you have an idea,
[00:05:05.240 --> 00:05:07.000]   the blob and the cloud sort of disappear
[00:05:07.000 --> 00:05:09.160]   and you see this mountain, and we want it to be the case
[00:05:09.160 --> 00:05:10.840]   that as soon as you see the mountain,
[00:05:10.840 --> 00:05:12.360]   the AI helps you get to the mountain.
[00:05:12.360 --> 00:05:13.960]   And as soon as you see the mountain,
[00:05:13.960 --> 00:05:16.040]   the AI just creates the mountain for you, right?
[00:05:16.040 --> 00:05:18.320]   And that's why we don't believe in this sort of modality
[00:05:18.320 --> 00:05:20.800]   where you just write a task and it just goes out and does it, right?
[00:05:20.800 --> 00:05:21.840]   It's good for zero to one apps.
[00:05:21.840 --> 00:05:23.080]   And I think people have been seeing
[00:05:23.080 --> 00:05:24.840]   wind surface capable of doing that on a let on show,
[00:05:24.840 --> 00:05:26.120]   we'll talk about that a little bit.
[00:05:26.120 --> 00:05:29.720]   But we've been seeing real value in real software development,
[00:05:29.720 --> 00:05:31.400]   which is more to say, this is not to say
[00:05:31.400 --> 00:05:32.960]   that current tools can.
[00:05:32.960 --> 00:05:36.200]   But I think more in the process of actually evolving code
[00:05:36.200 --> 00:05:38.640]   from a very basic idea, code is not really built
[00:05:38.640 --> 00:05:41.760]   because you have a PRD and then you get some output out.
[00:05:41.760 --> 00:05:44.560]   It's more like you have a general vision and yes.
[00:05:44.560 --> 00:05:46.640]   And as you write the code, you get more and more clarity
[00:05:46.640 --> 00:05:48.200]   on approaches that don't work and do work.
[00:05:48.200 --> 00:05:50.920]   You're killing ideas and creating ideas constantly.
[00:05:50.920 --> 00:05:53.080]   And we think wind surface is the right paradigm for that.
[00:05:53.080 --> 00:05:57.040]   - Can you spell out what you couldn't do in VS code?
[00:05:57.040 --> 00:05:59.520]   Because I think when we did the cursor episode,
[00:05:59.520 --> 00:06:01.960]   explain that everybody on Agronews is like,
[00:06:01.960 --> 00:06:03.960]   oh, why did you work?
[00:06:03.960 --> 00:06:05.560]   Why you could have done it in an extension?
[00:06:05.560 --> 00:06:09.120]   Like, can you maybe just explain more of those limitations?
[00:06:09.120 --> 00:06:11.320]   - I mean, I think a lot of the limitations
[00:06:11.320 --> 00:06:13.560]   around like APIs are pretty well documented.
[00:06:13.560 --> 00:06:16.760]   I don't know if we necessarily go down that rabbit hole.
[00:06:16.760 --> 00:06:18.600]   I think it was when we started thinking, okay,
[00:06:18.600 --> 00:06:21.640]   what are the pieces that we actually need to give the AI
[00:06:21.640 --> 00:06:24.560]   to get to that kind of emergent behavior
[00:06:24.560 --> 00:06:26.040]   that we haven't talked about, right?
[00:06:26.040 --> 00:06:28.640]   And yes, we were talking about all the knowledge
[00:06:28.640 --> 00:06:30.000]   retrieval systems that we've been building
[00:06:30.000 --> 00:06:31.400]   for the enterprise all this time.
[00:06:31.400 --> 00:06:33.720]   Like, that's obviously a component of that.
[00:06:33.720 --> 00:06:35.000]   We were talking about all the different tools
[00:06:35.000 --> 00:06:36.840]   that we give it access to so they can go like do
[00:06:36.840 --> 00:06:39.280]   like kind of terminal execution and things like that.
[00:06:39.280 --> 00:06:41.120]   And then the third main category that we realized
[00:06:41.120 --> 00:06:42.520]   would be like kind of that magical thing
[00:06:42.520 --> 00:06:44.800]   where you're not out there writing out a PRD,
[00:06:44.800 --> 00:06:46.680]   you're not scoping the problem for the AI,
[00:06:46.680 --> 00:06:48.400]   is that if we're actually being able to understand
[00:06:48.400 --> 00:06:49.920]   the kind of the trajectory of what developers
[00:06:49.920 --> 00:06:51.360]   are doing within the editor, right?
[00:06:51.360 --> 00:06:52.560]   If we actually are being able to see like,
[00:06:52.560 --> 00:06:55.440]   oh, the developer just went and opened up
[00:06:55.440 --> 00:06:56.880]   this part of the director and tried to view it,
[00:06:56.880 --> 00:06:58.280]   then they made these kind of edits.
[00:06:58.280 --> 00:06:59.920]   And they tried to do like some kind of commands
[00:06:59.920 --> 00:07:00.760]   in the terminal.
[00:07:00.760 --> 00:07:02.800]   And if we actually understand that trajectory,
[00:07:02.800 --> 00:07:04.840]   then our ability for the AI to just be immediately
[00:07:04.840 --> 00:07:06.800]   like, oh, I understand your intent,
[00:07:06.800 --> 00:07:07.640]   this is what you want to do,
[00:07:07.640 --> 00:07:09.840]   without you having to spell it all out for it,
[00:07:09.840 --> 00:07:12.320]   that is one like that kind of like magic would really happen.
[00:07:12.320 --> 00:07:13.760]   I think that was kind of like that into it.
[00:07:13.760 --> 00:07:16.240]   So you have the restrictions of the APIs
[00:07:16.240 --> 00:07:17.520]   that are well documented.
[00:07:17.520 --> 00:07:20.360]   We have the kind of vision of like what we actually
[00:07:20.360 --> 00:07:22.680]   need to be able to hook into to really expose this.
[00:07:22.680 --> 00:07:24.440]   And I think it was that combination of those two
[00:07:24.440 --> 00:07:26.840]   where we're like, I think it's about time to do the editor.
[00:07:26.840 --> 00:07:28.920]   The editor was not like a necessarily a new idea.
[00:07:28.920 --> 00:07:30.160]   I think we've been talking about the editor
[00:07:30.160 --> 00:07:31.480]   for a very long time.
[00:07:31.480 --> 00:07:33.800]   I think it's like, of course, we just pulled it all together
[00:07:33.800 --> 00:07:35.040]   in the last couple of months,
[00:07:35.040 --> 00:07:37.040]   but it was always something in the back of the mind.
[00:07:37.040 --> 00:07:38.320]   And it's only when we started realizing,
[00:07:38.320 --> 00:07:40.840]   okay, the models are not capable of doing this.
[00:07:40.840 --> 00:07:42.200]   We actually can look at this data.
[00:07:42.200 --> 00:07:43.520]   Like we have a really good conics awareness,
[00:07:43.520 --> 00:07:45.400]   and we're like, I think now is the time.
[00:07:45.400 --> 00:07:47.320]   And we went on and executed on it.
[00:07:47.320 --> 00:07:49.080]   - So it's busy not actually,
[00:07:49.080 --> 00:07:50.720]   it's not like one action you couldn't do,
[00:07:50.720 --> 00:07:52.800]   but it's like how you brought it all together.
[00:07:52.800 --> 00:07:54.560]   It's like the VS code's kind of like sandbox,
[00:07:54.560 --> 00:07:55.400]   so to speak.
[00:07:55.400 --> 00:07:58.200]   - Yeah, let me maybe like even just to go one step deeper
[00:07:58.200 --> 00:08:00.240]   on each of the aspects that Anshoul talked about,
[00:08:00.240 --> 00:08:01.920]   let's go with the API aspect.
[00:08:01.920 --> 00:08:03.520]   So right now, I'll give you an example,
[00:08:03.520 --> 00:08:04.800]   super complete is actually a feature
[00:08:04.800 --> 00:08:07.320]   that I think is like very exciting about the product, right?
[00:08:07.320 --> 00:08:09.680]   It can suggest refactors of the code.
[00:08:09.680 --> 00:08:12.000]   I think it can do it quickly and very powerfully.
[00:08:12.000 --> 00:08:14.400]   On VS code, actually, the problem for us
[00:08:14.400 --> 00:08:16.000]   wasn't actually being able to implement the feature.
[00:08:16.000 --> 00:08:17.320]   We had the feature for a while.
[00:08:17.320 --> 00:08:19.000]   Problem was actually even to show the feature,
[00:08:19.000 --> 00:08:21.320]   VS code would not expose an API for us to do this.
[00:08:21.320 --> 00:08:22.600]   So what we actually ended up doing
[00:08:22.600 --> 00:08:25.280]   was dynamically generating PNGs
[00:08:25.280 --> 00:08:27.040]   to actually go out and showcase this.
[00:08:27.040 --> 00:08:28.120]   It was not really aligned.
[00:08:28.120 --> 00:08:29.400]   We actually ended up doing it ourselves,
[00:08:29.400 --> 00:08:30.360]   and it took us a couple hours
[00:08:30.360 --> 00:08:32.400]   to actually go out and implement this, right?
[00:08:32.400 --> 00:08:34.240]   And that wasn't because we were bad engineers.
[00:08:34.240 --> 00:08:36.400]   No, our good engineering time was being spent fighting
[00:08:36.400 --> 00:08:38.440]   against the system rather than being a good system.
[00:08:38.440 --> 00:08:40.040]   Another example was we needed to go out
[00:08:40.040 --> 00:08:41.800]   and find ways to refactor the code.
[00:08:41.800 --> 00:08:44.200]   The VS code API would constantly keep breaking on us.
[00:08:44.200 --> 00:08:46.720]   We'd constantly need to show a worse and worse experience.
[00:08:46.720 --> 00:08:48.840]   This actually comes down to the second point
[00:08:48.840 --> 00:08:50.120]   which Anshoul brought up, which is like,
[00:08:50.120 --> 00:08:52.120]   we can come up with great work and great research.
[00:08:52.120 --> 00:08:53.880]   All the work we have here is not like,
[00:08:53.880 --> 00:08:55.760]   the research on cascade is not like a couple of months thing.
[00:08:55.760 --> 00:08:58.160]   This is like a nine months to a year thing
[00:08:58.160 --> 00:09:00.120]   that we've been investigating as a company.
[00:09:00.120 --> 00:09:01.680]   Investing in on evals, right?
[00:09:01.680 --> 00:09:04.440]   Even the evals for this are a lot of effort, right?
[00:09:04.440 --> 00:09:06.520]   A lot of actually systems worked to actually go out and do it.
[00:09:06.520 --> 00:09:08.040]   But ultimately, like, this needs to be a product
[00:09:08.040 --> 00:09:09.400]   that developers actually use.
[00:09:09.400 --> 00:09:11.400]   And I think, you know, let's even go for a cascade,
[00:09:11.400 --> 00:09:13.480]   for example, like, and looking at the trajectory.
[00:09:13.480 --> 00:09:14.600]   Yeah, we like to see-- - Can you define cascade
[00:09:14.600 --> 00:09:15.960]   because that's the first time you brought it up.
[00:09:15.960 --> 00:09:17.640]   - Yeah, so cascade is the product
[00:09:17.640 --> 00:09:20.800]   that is the actual, agentic part of the product, right?
[00:09:20.800 --> 00:09:23.520]   That is capable of taking information
[00:09:23.520 --> 00:09:24.800]   from both these human trajectories
[00:09:24.800 --> 00:09:27.040]   and these AI trajectories, what the human ended up doing,
[00:09:27.040 --> 00:09:29.560]   what the AI ended up doing to actually propose changes
[00:09:29.560 --> 00:09:31.640]   and actually execute code to finally get you
[00:09:31.640 --> 00:09:33.160]   the final work output, right?
[00:09:33.160 --> 00:09:34.560]   I'll even talk about something very basic.
[00:09:34.560 --> 00:09:35.760]   Cascade gives you a bunch of code.
[00:09:35.760 --> 00:09:38.440]   We want developers to very easily be able to review this code.
[00:09:38.440 --> 00:09:41.040]   Okay, then we can show developers a hideous UI
[00:09:41.040 --> 00:09:42.320]   that they don't wanna look at.
[00:09:42.320 --> 00:09:43.920]   No one's gonna really use this product.
[00:09:43.920 --> 00:09:46.040]   And we think that this is like a fundamental building block
[00:09:46.040 --> 00:09:47.920]   for us to make the product materially better.
[00:09:47.920 --> 00:09:50.000]   If people are not even willing to use the building block,
[00:09:50.000 --> 00:09:51.560]   where does this go, right?
[00:09:51.560 --> 00:09:53.360]   And we just felt our ceiling was capped
[00:09:53.360 --> 00:09:55.520]   on what we could deliver as an experience.
[00:09:55.520 --> 00:09:58.600]   Interestingly, JetBrains is a much more configurable paradigm
[00:09:58.600 --> 00:10:02.000]   than VS Code is, but we just felt so limited
[00:10:02.000 --> 00:10:05.040]   on both the sort of directions that Onshore said
[00:10:05.040 --> 00:10:06.160]   that we were just like, hey,
[00:10:06.160 --> 00:10:08.520]   if we actually remove these limitations,
[00:10:08.520 --> 00:10:10.200]   we can move substantially faster.
[00:10:10.200 --> 00:10:13.240]   And we believe that this was a necessary step for us.
[00:10:13.240 --> 00:10:15.560]   - I'm curious more about the EVALS said,
[00:10:15.560 --> 00:10:17.720]   because you brought it up, and we have to ask
[00:10:17.720 --> 00:10:19.760]   what EVALS means and anyone brings up EVALS.
[00:10:19.760 --> 00:10:21.160]   How do you evaluate a thing like this
[00:10:21.160 --> 00:10:26.160]   that is so multi-stepped and so spanning like so much context?
[00:10:26.360 --> 00:10:28.760]   - So what you can imagine we can sort of do,
[00:10:28.760 --> 00:10:30.480]   and this is like one of the beautiful things about code
[00:10:30.480 --> 00:10:31.880]   is code can be executed.
[00:10:31.880 --> 00:10:33.960]   We could go take a bunch of open source code,
[00:10:33.960 --> 00:10:35.960]   we can find a bunch of commits, right?
[00:10:35.960 --> 00:10:38.720]   And we can actually see if some of these commits
[00:10:38.720 --> 00:10:40.440]   have tests associated with them.
[00:10:40.440 --> 00:10:41.720]   We can start stripping the commits,
[00:10:41.720 --> 00:10:44.240]   and the approach of stripping the commits is good
[00:10:44.240 --> 00:10:45.840]   because it tests the fact that the code
[00:10:45.840 --> 00:10:47.080]   is in an incomplete state, right?
[00:10:47.080 --> 00:10:48.160]   When you're writing the commit,
[00:10:48.160 --> 00:10:50.000]   the goal is not the commit has already been written for you.
[00:10:50.000 --> 00:10:51.920]   You're given it in a state that where the entire thing
[00:10:51.920 --> 00:10:52.960]   has not been written.
[00:10:52.960 --> 00:10:55.240]   And can we go out and actually retrieve the right snippets
[00:10:55.240 --> 00:10:57.600]   and actually come up with a cohesive plan
[00:10:57.600 --> 00:10:59.880]   and iterative loop that gets you to a state
[00:10:59.880 --> 00:11:01.080]   where the code actually passes.
[00:11:01.080 --> 00:11:02.600]   So you can actually break down
[00:11:02.600 --> 00:11:04.640]   and decompose this complex problem
[00:11:04.640 --> 00:11:06.600]   into like a planning retrieval
[00:11:06.600 --> 00:11:07.960]   and multi-stepped execution problem.
[00:11:07.960 --> 00:11:09.720]   And you can see on every single one of these axes
[00:11:09.720 --> 00:11:10.560]   is it getting better.
[00:11:10.560 --> 00:11:12.600]   And if you do this across enough repositories,
[00:11:12.600 --> 00:11:14.840]   you've turned this highly discontinuous
[00:11:14.840 --> 00:11:16.880]   and discrete problem of make up PR work
[00:11:16.880 --> 00:11:19.120]   versus make it not work into a continuous problem.
[00:11:19.120 --> 00:11:21.080]   And now that's a hill you can actually climb,
[00:11:21.080 --> 00:11:23.080]   and that's a way that you can actually apply research
[00:11:23.080 --> 00:11:25.120]   where it's like, hey, my retrieval got way better.
[00:11:25.120 --> 00:11:27.040]   This made my eval get better, right?
[00:11:27.040 --> 00:11:29.720]   And then notice how the way the eval works is
[00:11:29.720 --> 00:11:31.040]   I'm not that interested in the eval
[00:11:31.040 --> 00:11:32.760]   where purely it's the commit message
[00:11:32.760 --> 00:11:34.080]   and you finish the entire thing.
[00:11:34.080 --> 00:11:36.920]   I'm more interested in the code is in an incomplete state
[00:11:36.920 --> 00:11:38.800]   and the commit message isn't even given to you
[00:11:38.800 --> 00:11:40.520]   because that's another thing about developers.
[00:11:40.520 --> 00:11:43.080]   They are not willing to tell you exactly what's in their head.
[00:11:43.080 --> 00:11:45.440]   That's the actual important piece of this problem.
[00:11:45.440 --> 00:11:47.360]   We believe that developers will never
[00:11:47.360 --> 00:11:50.720]   completely pose the problem statement, right?
[00:11:50.720 --> 00:11:52.600]   Because the problem statement lives in their head,
[00:11:52.600 --> 00:11:55.600]   conversations that you and I have had at the coffee area,
[00:11:55.600 --> 00:11:57.000]   conversations that I've had over time,
[00:11:57.000 --> 00:11:59.160]   conversations I've had over JIRA, right?
[00:11:59.160 --> 00:12:00.800]   Maybe not JIRA, let's say linear, right?
[00:12:00.800 --> 00:12:02.200]   That's the cool thing nowadays.
[00:12:02.200 --> 00:12:03.240]   They're talking about JIRA.
[00:12:03.240 --> 00:12:06.560]   Yeah, so conversations I've had on linear
[00:12:06.560 --> 00:12:08.440]   and all of these things come together
[00:12:08.440 --> 00:12:10.920]   to actually finally propose sort of a solution there,
[00:12:10.920 --> 00:12:13.120]   which is why we want to test the incomplete code.
[00:12:13.120 --> 00:12:15.240]   What happens if the state is in an incomplete state
[00:12:15.240 --> 00:12:17.400]   and am I actually able to make this pass
[00:12:17.400 --> 00:12:19.280]   without the commit and can I actually guess your commit?
[00:12:19.280 --> 00:12:21.200]   Well, now you can convert the problem
[00:12:21.200 --> 00:12:23.160]   into a mask prediction problem
[00:12:23.160 --> 00:12:25.280]   where you want to guess both the high-level intent
[00:12:25.280 --> 00:12:26.960]   and as well as the remainder of changes
[00:12:26.960 --> 00:12:28.160]   to make the actual test pass.
[00:12:28.160 --> 00:12:30.080]   And you can imagine if you build up all of these,
[00:12:30.080 --> 00:12:31.840]   now you can see, hey, my systems are getting better,
[00:12:31.840 --> 00:12:32.920]   retrieval quality is getting better
[00:12:32.920 --> 00:12:34.160]   and you can actually start testing this
[00:12:34.160 --> 00:12:36.040]   on a larger and larger code basis, right?
[00:12:36.040 --> 00:12:38.480]   And I guess that's one thing that we honestly,
[00:12:38.480 --> 00:12:40.560]   to be honest, we could have done a little faster.
[00:12:40.560 --> 00:12:41.800]   We had the technology to go out
[00:12:41.800 --> 00:12:43.280]   and build these zero to one apps very quickly.
[00:12:43.280 --> 00:12:44.760]   And I think people are using Windsurf
[00:12:44.760 --> 00:12:47.120]   to actually do that and it's extremely impressive.
[00:12:47.120 --> 00:12:50.440]   But the real value I think is actually much deeper than that.
[00:12:50.440 --> 00:12:52.480]   It's actually that you take a large code base
[00:12:52.480 --> 00:12:53.640]   and it's actually a really good first pass
[00:12:53.640 --> 00:12:55.120]   and I'm not saying it's perfect,
[00:12:55.120 --> 00:12:56.240]   but it's only gonna keep getting better
[00:12:56.240 --> 00:12:59.240]   and we have like deep sort of infrastructure
[00:12:59.240 --> 00:13:00.480]   that actually is validating
[00:13:00.480 --> 00:13:02.200]   that we are getting better on this dimension.
[00:13:02.200 --> 00:13:03.960]   - We've already mentioned the end-to-end emails
[00:13:03.960 --> 00:13:06.160]   that we have for the system, which I think are like super cool,
[00:13:06.160 --> 00:13:08.200]   but I think you can even decompose each of those steps,
[00:13:08.200 --> 00:13:11.280]   the ideas of just take a retrieval, for example, right?
[00:13:11.280 --> 00:13:13.880]   Like, how can we make evil for retrieval really good?
[00:13:13.880 --> 00:13:15.880]   And I think this is just a general thing
[00:13:15.880 --> 00:13:17.120]   that's been true about us in the companies,
[00:13:17.120 --> 00:13:20.000]   like most emails and benchmarks that exist
[00:13:20.000 --> 00:13:22.880]   out there for software development is kind of bogus.
[00:13:22.880 --> 00:13:24.520]   That there's not really a better way of putting it.
[00:13:24.520 --> 00:13:26.920]   Like, okay, you have sweet bench, that's cool.
[00:13:26.920 --> 00:13:29.840]   No actual professional work looks like sweet bench,
[00:13:29.840 --> 00:13:31.040]   like human evil, same thing.
[00:13:31.040 --> 00:13:33.160]   Like these things are just a little kind of broken.
[00:13:33.160 --> 00:13:35.520]   So when you're trying to optimize against a metric
[00:13:35.520 --> 00:13:36.360]   that's a little bit broken,
[00:13:36.360 --> 00:13:38.200]   you end up making kind of sub-optimal decisions.
[00:13:38.200 --> 00:13:40.200]   So something that we're always very keen on is like,
[00:13:40.200 --> 00:13:41.600]   okay, what is the actual metric
[00:13:41.600 --> 00:13:43.480]   that we want to test for this part of the system?
[00:13:43.480 --> 00:13:45.080]   And so take a retrieval, for example.
[00:13:45.080 --> 00:13:47.480]   A lot of the benchmarks for these embedding-based systems
[00:13:47.480 --> 00:13:49.320]   are like needle in the haystack problems.
[00:13:49.320 --> 00:13:52.560]   Like I want to find this one particular piece of information
[00:13:52.560 --> 00:13:54.600]   out of all this potential context.
[00:13:54.600 --> 00:13:56.680]   That's not really what actually is necessary
[00:13:56.680 --> 00:13:57.600]   for doing software engineering
[00:13:57.600 --> 00:14:00.000]   because code is a super distributed knowledge store.
[00:14:00.000 --> 00:14:01.320]   You actually want to pull in snippets
[00:14:01.320 --> 00:14:02.720]   from a lot of different parts of the code-based
[00:14:02.720 --> 00:14:04.120]   in order to do the work, right?
[00:14:04.120 --> 00:14:07.320]   And so we built systems that instead of looking
[00:14:07.320 --> 00:14:08.680]   at retrieval at one,
[00:14:08.680 --> 00:14:09.960]   you're looking at retrieval at like 50,
[00:14:09.960 --> 00:14:12.280]   like thinking one of the 50 highest things
[00:14:12.280 --> 00:14:13.120]   that you can actually retrieve.
[00:14:13.120 --> 00:14:16.280]   And are you capturing all of the necessary pieces for that?
[00:14:16.280 --> 00:14:17.480]   And what are all the necessary pieces?
[00:14:17.480 --> 00:14:19.960]   Well, you can look again back at old commits
[00:14:19.960 --> 00:14:21.800]   and see over all the different files
[00:14:21.800 --> 00:14:24.280]   that together were edited to make a commit
[00:14:24.280 --> 00:14:26.360]   because those are semantically similar things
[00:14:26.360 --> 00:14:27.880]   that might not actually show
[00:14:27.880 --> 00:14:30.000]   if you actually try to map out a code graph, right?
[00:14:30.000 --> 00:14:32.040]   And so we can actually build these kind of golden sets.
[00:14:32.040 --> 00:14:34.240]   We can do this evaluation even for sub-problems
[00:14:34.240 --> 00:14:35.440]   in the overall task.
[00:14:35.440 --> 00:14:37.040]   And so now we have like an engineering team
[00:14:37.040 --> 00:14:38.600]   that can iterate on all of these things
[00:14:38.600 --> 00:14:40.400]   and still make sure that the end goal
[00:14:40.400 --> 00:14:42.400]   that we're trying to build too is like really, really strong.
[00:14:42.400 --> 00:14:44.120]   So we have confidence in what we're pushing out.
[00:14:44.120 --> 00:14:46.760]   - And by the way, just to talk with one more thing
[00:14:46.760 --> 00:14:47.840]   about the sweep bench thing,
[00:14:47.840 --> 00:14:49.960]   just to showcase these existing metrics,
[00:14:49.960 --> 00:14:51.480]   I think benchmarks are not a bad thing.
[00:14:51.480 --> 00:14:52.320]   You do want benchmarks.
[00:14:52.320 --> 00:14:54.120]   Actually, like I would prefer if there are benchmarks
[00:14:54.120 --> 00:14:56.680]   versus let's say everything was just vibes, right?
[00:14:56.680 --> 00:14:58.600]   But vibes are also very important, by the way,
[00:14:58.600 --> 00:15:01.280]   because they showcase where the benchmark is not valuable
[00:15:01.280 --> 00:15:02.840]   because actually vibes sometimes show you
[00:15:02.840 --> 00:15:05.920]   where criminal issues are sort of exist in the benchmark.
[00:15:05.920 --> 00:15:07.160]   But like you look at some of the ways
[00:15:07.160 --> 00:15:08.640]   in which people have optimized sweep bench,
[00:15:08.640 --> 00:15:11.120]   it's like make sure to run PyTest every time X happens.
[00:15:11.120 --> 00:15:12.520]   And it's like, yeah, like sure,
[00:15:12.520 --> 00:15:14.240]   you can start like prompting it
[00:15:14.240 --> 00:15:15.760]   in like every single possible way.
[00:15:15.760 --> 00:15:18.080]   And like if you remove that suddenly, it doesn't get good at it.
[00:15:18.080 --> 00:15:19.960]   It's like, what really matters here?
[00:15:19.960 --> 00:15:23.040]   What really matters here is like across a broad set of tasks,
[00:15:23.040 --> 00:15:26.160]   you're performing like high quality sort of suggestions
[00:15:26.160 --> 00:15:27.840]   for people and people love using the product.
[00:15:27.840 --> 00:15:30.040]   And I think actually like the way these things work
[00:15:30.040 --> 00:15:31.240]   is beyond a certain point.
[00:15:31.240 --> 00:15:33.080]   Because yes, I actually think that it's valuable
[00:15:33.080 --> 00:15:33.920]   beyond a certain point.
[00:15:33.920 --> 00:15:36.200]   But once it starts hitting the peak of these benchmarks,
[00:15:36.200 --> 00:15:39.640]   getting the last 10%, actually probably is like counterintuitive
[00:15:39.640 --> 00:15:41.760]   to the actual goal of what the benchmark was.
[00:15:41.760 --> 00:15:43.880]   Like you probably should find a new hill to climb
[00:15:43.880 --> 00:15:46.680]   rather than sort of p-hacking or really optimizing
[00:15:46.680 --> 00:15:49.200]   for how you can get higher on the benchmark.
[00:15:49.200 --> 00:15:50.920]   - Yeah, we did an episode with Anthropic
[00:15:50.920 --> 00:15:52.800]   about their recent like three agents,
[00:15:52.800 --> 00:15:54.280]   sweep bench results.
[00:15:54.280 --> 00:15:56.520]   And we talked about the human email versus sweep bench.
[00:15:56.520 --> 00:15:58.880]   And or like human email, it's kind of like a green field
[00:15:58.880 --> 00:16:00.960]   benchmark, you know, you need to be good at that.
[00:16:00.960 --> 00:16:02.200]   Sweep bench is more accessing.
[00:16:02.200 --> 00:16:05.000]   But it sounds like, I mean, your email creation
[00:16:05.000 --> 00:16:07.360]   is similar to sweep bench as far as like using
[00:16:07.360 --> 00:16:09.240]   get up commits and kind of like the history.
[00:16:09.240 --> 00:16:12.160]   But then it's more like masking at the commit level
[00:16:12.160 --> 00:16:13.720]   versus just testing the output.
[00:16:13.720 --> 00:16:14.560]   - That's right.
[00:16:14.560 --> 00:16:15.480]   - Of the thing.
[00:16:15.480 --> 00:16:16.320]   - Cool.
[00:16:16.320 --> 00:16:17.520]   - We have some listener questions actually
[00:16:17.520 --> 00:16:18.520]   about the Windsor launch.
[00:16:18.520 --> 00:16:20.440]   And obviously I also want to give you the chance
[00:16:20.440 --> 00:16:22.120]   to just respond to Hacker News.
[00:16:22.120 --> 00:16:23.440]   (laughing)
[00:16:23.440 --> 00:16:24.280]   - Oh man.
[00:16:24.280 --> 00:16:25.120]   - Oh man.
[00:16:25.120 --> 00:16:28.200]   - Hey, let me tell you something very, very interesting.
[00:16:28.200 --> 00:16:31.000]   I love Hacker News as much as the next person.
[00:16:31.000 --> 00:16:33.080]   But the moment we launched our product,
[00:16:33.080 --> 00:16:35.160]   the first comment, I like, this was a year ago,
[00:16:35.160 --> 00:16:37.680]   the first comment was, this product is a virus.
[00:16:37.680 --> 00:16:38.520]   And we were like--
[00:16:38.520 --> 00:16:40.520]   - Like the original coding launched like two years ago?
[00:16:40.520 --> 00:16:41.360]   - This is the original.
[00:16:41.360 --> 00:16:43.320]   - Like I am analyzing the binary
[00:16:43.320 --> 00:16:45.160]   as we speak, we'll report back.
[00:16:45.160 --> 00:16:47.680]   - And then he was like, it's a virus.
[00:16:47.680 --> 00:16:49.960]   And I was like, dude, like, it's not a virus.
[00:16:49.960 --> 00:16:51.440]   (laughing)
[00:16:51.440 --> 00:16:53.200]   - We just want to give autocomplete suggestions.
[00:16:53.200 --> 00:16:54.360]   That's all we want to do.
[00:16:54.360 --> 00:16:55.200]   - Yeah.
[00:16:55.200 --> 00:16:56.040]   - Okay, it was.
[00:16:56.040 --> 00:16:56.880]   - Oh, okay.
[00:16:56.880 --> 00:16:57.720]   - I didn't expect that.
[00:16:57.720 --> 00:16:58.920]   - And then there was like Teodrama.
[00:16:58.920 --> 00:17:01.240]   There's enough drama on the launch to cover.
[00:17:01.240 --> 00:17:04.920]   But I don't know if we want to just make this a cascade piece.
[00:17:04.920 --> 00:17:06.680]   But we had a bunch of people in our Discord
[00:17:06.680 --> 00:17:08.440]   try out the product, give a lot of feedback.
[00:17:08.440 --> 00:17:10.080]   One question people have is like,
[00:17:10.080 --> 00:17:12.760]   to them, cascade already felt pretty agentic.
[00:17:12.760 --> 00:17:15.000]   Like, is that something you want to do more of?
[00:17:15.000 --> 00:17:17.480]   You know, obviously, since it just launched an idea,
[00:17:17.480 --> 00:17:19.200]   you're kind of like, you're focusing on
[00:17:19.200 --> 00:17:20.520]   having people write the code.
[00:17:20.520 --> 00:17:22.640]   But maybe this is kind of like the Trojan horse
[00:17:22.640 --> 00:17:26.640]   to just do more full on end to end, like code creation.
[00:17:26.640 --> 00:17:27.480]   - Dev in style.
[00:17:27.480 --> 00:17:28.320]   - Yeah.
[00:17:28.320 --> 00:17:29.760]   I think it's like, how do you get there
[00:17:29.760 --> 00:17:32.800]   in a, like a real principled manner?
[00:17:32.800 --> 00:17:33.640]   Right?
[00:17:33.640 --> 00:17:35.040]   We have, obviously, like enterprise asking us all the time.
[00:17:35.040 --> 00:17:36.360]   Like, oh, when's it going to be like N10?
[00:17:36.360 --> 00:17:38.200]   Where the reality is like, okay, well,
[00:17:38.200 --> 00:17:39.720]   if we have something in the idea that again,
[00:17:39.720 --> 00:17:41.920]   can like see your entire actions and get a lot of intent
[00:17:41.920 --> 00:17:44.360]   that you can't actually get if you're not in the idea.
[00:17:44.360 --> 00:17:49.040]   If the agent there has to always get human involvement
[00:17:49.040 --> 00:17:51.640]   to keep on fixing itself, it's probably not ready
[00:17:51.640 --> 00:17:53.560]   to become a full end-to-end automated system.
[00:17:53.560 --> 00:17:54.880]   'Cause then we're just gonna turn into a linter,
[00:17:54.880 --> 00:17:56.960]   where like, it produces a bunch of things
[00:17:56.960 --> 00:17:58.160]   and no one looks at any of it.
[00:17:58.160 --> 00:18:00.880]   Like, that's not the great end state.
[00:18:00.880 --> 00:18:02.200]   But if we start seeing like, oh, yeah,
[00:18:02.200 --> 00:18:04.440]   there's common patterns that people do that like,
[00:18:04.440 --> 00:18:05.800]   never require human involvement,
[00:18:05.800 --> 00:18:07.080]   just end-to-end just totally works
[00:18:07.080 --> 00:18:09.520]   without like any like intent-based information.
[00:18:09.520 --> 00:18:11.160]   Sure, that can become like fully agentic.
[00:18:11.160 --> 00:18:13.120]   And like, we'll learn what those tasks are like,
[00:18:13.120 --> 00:18:14.880]   pretty quickly 'cause we have a lot of data.
[00:18:14.880 --> 00:18:16.120]   Maybe add on to that.
[00:18:16.120 --> 00:18:18.760]   I think that if the answer is like,
[00:18:18.760 --> 00:18:21.280]   full agentic is called like, is Devin.
[00:18:21.280 --> 00:18:23.160]   I think like, yes, the answer is,
[00:18:23.160 --> 00:18:25.640]   this product should become fully agentic
[00:18:25.640 --> 00:18:28.320]   and limited human interaction is the goal,
[00:18:28.320 --> 00:18:29.480]   is 100% the goal.
[00:18:29.480 --> 00:18:32.120]   And I think honestly, of all usable products right now,
[00:18:32.120 --> 00:18:33.640]   I think we're the closest right now.
[00:18:33.640 --> 00:18:35.400]   Of all usable products in an ID.
[00:18:35.400 --> 00:18:37.440]   Now, let me caveat this by saying,
[00:18:37.440 --> 00:18:38.880]   I think there are lots of hard problems
[00:18:38.880 --> 00:18:40.080]   that have yet to be solved,
[00:18:40.080 --> 00:18:41.160]   that we need to go out and solve
[00:18:41.160 --> 00:18:42.240]   to actually make this happen.
[00:18:42.240 --> 00:18:43.080]   Like, for instance,
[00:18:43.080 --> 00:18:44.160]   I think one of the most annoying parts
[00:18:44.160 --> 00:18:46.680]   about the product is the fact that you need to accept
[00:18:46.680 --> 00:18:48.560]   every command that kind of gets run.
[00:18:48.560 --> 00:18:49.920]   It's actually fairly annoying.
[00:18:49.920 --> 00:18:51.280]   I would like it to go out and run it.
[00:18:51.280 --> 00:18:53.800]   Unfortunately, me going out and running arbitrary binaries
[00:18:53.800 --> 00:18:55.560]   has some problems in that if it like,
[00:18:55.560 --> 00:18:56.840]   RMR is my hard disk.
[00:18:56.840 --> 00:18:57.680]   - It's actually a virus.
[00:18:57.680 --> 00:18:58.520]   - I'm not going to be.
[00:18:58.520 --> 00:18:59.360]   - It's a virus.
[00:18:59.360 --> 00:19:00.640]   - I think it needs to be one you.
[00:19:00.640 --> 00:19:03.200]   Yeah, it does become a virus.
[00:19:03.200 --> 00:19:05.040]   I think this is solvable with like,
[00:19:05.040 --> 00:19:06.480]   with complex systems.
[00:19:06.480 --> 00:19:09.480]   I think we love working on complex systems infrastructure.
[00:19:09.480 --> 00:19:10.440]   I think we'll solve it.
[00:19:10.440 --> 00:19:12.680]   Now, the simpler way to go about solving this is,
[00:19:12.680 --> 00:19:13.920]   don't run it on the user's machine
[00:19:13.920 --> 00:19:14.760]   and run it somewhere else,
[00:19:14.760 --> 00:19:16.280]   because then if you work with that machine,
[00:19:16.280 --> 00:19:17.480]   you're kind of totally fine.
[00:19:17.480 --> 00:19:19.120]   Now, I think though,
[00:19:19.120 --> 00:19:20.320]   maybe there's a little bit of trade-off
[00:19:20.320 --> 00:19:21.840]   of like running it locally versus remotely,
[00:19:21.840 --> 00:19:23.680]   and I think we might change our mind on this,
[00:19:23.680 --> 00:19:25.640]   but I think the goal for this is not for this
[00:19:25.640 --> 00:19:26.480]   to be the final state.
[00:19:26.480 --> 00:19:27.880]   I think the goal for this is A,
[00:19:27.880 --> 00:19:29.960]   it's actually able to do very complex tasks
[00:19:29.960 --> 00:19:31.040]   with limited human interaction,
[00:19:31.040 --> 00:19:34.600]   but it needs to know when to actually go back to the human.
[00:19:34.600 --> 00:19:35.440]   Also, on top of that,
[00:19:35.440 --> 00:19:37.880]   compress every cycle that the agent is running.
[00:19:37.880 --> 00:19:39.720]   Right now, actually, I even feel like the product
[00:19:39.720 --> 00:19:41.840]   is too slow for me sometimes right now.
[00:19:41.840 --> 00:19:44.040]   Even with it running really fast.
[00:19:44.040 --> 00:19:45.400]   It's objectively a pretty fast.
[00:19:45.400 --> 00:19:47.640]   I would still want it to be faster, right?
[00:19:47.640 --> 00:19:49.080]   So there is like systems work
[00:19:49.080 --> 00:19:50.840]   and probably modeling work that needs to happen there
[00:19:50.840 --> 00:19:52.560]   to make the product even faster
[00:19:52.560 --> 00:19:55.200]   on both the retrieval side and the generation side, right?
[00:19:55.200 --> 00:19:56.440]   And then finally speaking,
[00:19:56.440 --> 00:19:58.520]   I think another key piece here that's like really important
[00:19:58.520 --> 00:20:01.880]   is I actually think asking people to do things explicitly
[00:20:01.880 --> 00:20:04.320]   is probably going to be more of an anti-pattern
[00:20:04.320 --> 00:20:06.440]   if we can actually go and possibly suggest
[00:20:06.440 --> 00:20:08.080]   the entire change for the user.
[00:20:08.080 --> 00:20:10.880]   So almost imagine as the user is using the product
[00:20:10.880 --> 00:20:13.040]   that we're going to suggest the remainder of the PR
[00:20:13.040 --> 00:20:16.280]   without the user kind of like even asking us for it.
[00:20:16.280 --> 00:20:17.880]   I think this is sort of the beginning for it,
[00:20:17.880 --> 00:20:19.440]   but yeah, like these are hard problems.
[00:20:19.440 --> 00:20:21.520]   I can't give a particular deadline for this.
[00:20:21.520 --> 00:20:22.720]   I think this is like a big step up
[00:20:22.720 --> 00:20:25.160]   than what we had particularly in the past.
[00:20:25.160 --> 00:20:28.000]   But I think what Entrel said is 100% true,
[00:20:28.000 --> 00:20:30.360]   but the goal is for us to get better at this.
[00:20:30.360 --> 00:20:32.320]   - I mean, the remote execution thing is interesting.
[00:20:32.320 --> 00:20:34.760]   You've wrote a post about the end of local host.
[00:20:34.760 --> 00:20:36.360]   - Yeah. - And now it's almost like,
[00:20:36.360 --> 00:20:37.200]   then we were kind of like,
[00:20:37.200 --> 00:20:39.040]   well, now maybe we do need the internet
[00:20:39.040 --> 00:20:40.360]   and like people want to run things,
[00:20:40.360 --> 00:20:42.840]   but now it's like, okay, no, actually I don't really care.
[00:20:42.840 --> 00:20:44.160]   Like I want the model to do that.
[00:20:44.160 --> 00:20:46.840]   And if you were like, you can do a task end to end,
[00:20:46.840 --> 00:20:49.000]   but it needs to run remotely, not on your computer.
[00:20:49.000 --> 00:20:50.360]   I'm sure most people would say, yeah.
[00:20:50.360 --> 00:20:51.640]   - No, I agree with that. - I agree with it.
[00:20:51.640 --> 00:20:53.160]   - I actually agree with it running remotely.
[00:20:53.160 --> 00:20:54.480]   That's not a security issue.
[00:20:54.480 --> 00:20:55.800]   I actually, I totally agree with you
[00:20:55.800 --> 00:20:59.280]   that it's possible that everything could run remotely.
[00:20:59.280 --> 00:21:02.600]   - I tell it is most like because like Facebook's like,
[00:21:02.600 --> 00:21:04.240]   nobody runs things locally.
[00:21:04.240 --> 00:21:05.080]   - No one does.
[00:21:05.080 --> 00:21:06.160]   In fact, you connect to our own--
[00:21:06.160 --> 00:21:07.640]   - It's an extension to the mainframe.
[00:21:07.640 --> 00:21:08.480]   - You're right on that.
[00:21:08.480 --> 00:21:11.280]   Maybe the one thing that I do think is kind of important
[00:21:11.280 --> 00:21:13.840]   for these systems that is more than just running remotely is,
[00:21:13.840 --> 00:21:15.960]   basically like, you know, when you look at these agents,
[00:21:15.960 --> 00:21:18.120]   there's kind of like a rollout of a trajectory.
[00:21:18.120 --> 00:21:20.280]   And I kind of want to roll this trajectory back, right?
[00:21:20.280 --> 00:21:22.240]   In some ways, I want like a snapshot of the system
[00:21:22.240 --> 00:21:23.760]   that I can like constantly checkpoint
[00:21:23.760 --> 00:21:24.920]   and move back and forth.
[00:21:24.920 --> 00:21:25.760]   And then also on top of that,
[00:21:25.760 --> 00:21:28.200]   I might want to do multiple rollouts of this.
[00:21:28.200 --> 00:21:30.120]   So basically, I think there needs to be a way to,
[00:21:30.120 --> 00:21:33.160]   to almost like move forward and move backwards the system.
[00:21:33.160 --> 00:21:34.880]   And whether that's locally or remotely,
[00:21:34.880 --> 00:21:35.960]   I think that's necessary.
[00:21:35.960 --> 00:21:37.800]   But every time if you move the system forward,
[00:21:37.800 --> 00:21:39.640]   it like destroys your machine.
[00:21:39.640 --> 00:21:41.840]   It's probably going to be a hard system to kind of,
[00:21:41.840 --> 00:21:43.280]   or potentially destroys your machine.
[00:21:43.280 --> 00:21:44.760]   That's just not a workable solution.
[00:21:44.760 --> 00:21:46.560]   So I think the local versus remote,
[00:21:46.560 --> 00:21:48.480]   I think you still need to solve the problem of,
[00:21:48.480 --> 00:21:50.520]   this thing is not going to destroy your machine
[00:21:50.520 --> 00:21:52.160]   on every execution, if that makes sense.
[00:21:52.160 --> 00:21:53.000]   - Yeah.
[00:21:53.000 --> 00:21:53.840]   - Yeah.
[00:21:53.840 --> 00:21:55.840]   - There is a category of emerging infrastructure providers
[00:21:55.840 --> 00:21:58.260]   that are working on time travel VMs.
[00:21:58.260 --> 00:21:59.100]   - Yeah.
[00:21:59.100 --> 00:22:01.800]   And at Veron's first episode on the spotcast as an indication,
[00:22:01.800 --> 00:22:03.400]   we like infrastructure problems.
[00:22:03.400 --> 00:22:04.240]   - Yeah, okay.
[00:22:04.240 --> 00:22:05.360]   Oh, so you're going there, all right.
[00:22:05.360 --> 00:22:06.200]   Okay.
[00:22:06.200 --> 00:22:07.040]   - Well, that's funny, right?
[00:22:07.040 --> 00:22:08.480]   It's like when we first had you,
[00:22:08.480 --> 00:22:11.560]   you were doing so much on like actual model inference,
[00:22:11.560 --> 00:22:12.800]   optimization, all these things.
[00:22:12.800 --> 00:22:14.240]   And today it's almost like--
[00:22:14.240 --> 00:22:15.920]   - It's quad, it's foro.
[00:22:15.920 --> 00:22:17.560]   - It's like, you know, people are like,
[00:22:17.560 --> 00:22:18.760]   forgetting about the model.
[00:22:18.760 --> 00:22:20.600]   You know, not it's all about at a higher level.
[00:22:20.600 --> 00:22:21.440]   - Yes.
[00:22:21.440 --> 00:22:22.280]   Yeah.
[00:22:22.280 --> 00:22:23.880]   So maybe I can say like a little bit about
[00:22:23.880 --> 00:22:26.000]   how our strategy on this is like evolved,
[00:22:26.000 --> 00:22:27.640]   because it objectively hops for it.
[00:22:27.640 --> 00:22:30.400]   I think I would be, I would be lying if I said it hasn't.
[00:22:30.400 --> 00:22:32.160]   The things like autocomplete and super complete
[00:22:32.160 --> 00:22:35.120]   that run on every keystroke are entirely like our own models.
[00:22:35.120 --> 00:22:37.240]   And by the way, that is still because properties
[00:22:37.240 --> 00:22:39.480]   like FIM fill in the middle capabilities
[00:22:39.480 --> 00:22:41.560]   are still quite bad with the current model.
[00:22:41.560 --> 00:22:42.560]   - It's non-existent.
[00:22:42.560 --> 00:22:44.040]   - They're all, they're very bad.
[00:22:44.040 --> 00:22:45.560]   Non-existent, they're not good.
[00:22:45.560 --> 00:22:46.400]   Actually at it.
[00:22:46.400 --> 00:22:49.480]   - 'Cause FIM is an actual like how you order the tokens.
[00:22:49.480 --> 00:22:51.760]   - It's how you order the tokens actually in some ways.
[00:22:51.760 --> 00:22:53.160]   And this is a, this is sort of,
[00:22:53.160 --> 00:22:55.200]   if you look at what these products have sort of become
[00:22:55.200 --> 00:22:57.720]   and this is great is a lot of the clods in the opening eyes
[00:22:57.720 --> 00:23:00.200]   have focused on kind of the chat like Assistant API
[00:23:00.200 --> 00:23:02.240]   where it's like complete pieces of work message
[00:23:02.240 --> 00:23:03.360]   and other complete piece of work.
[00:23:03.360 --> 00:23:06.040]   So multi-turn kind of back and forth systems.
[00:23:06.040 --> 00:23:07.840]   In fact, like actually even these systems
[00:23:07.840 --> 00:23:09.800]   are not that good at making point changes.
[00:23:09.800 --> 00:23:10.720]   When they make point changes,
[00:23:10.720 --> 00:23:13.320]   they kind of are like off here and there by a little bit
[00:23:13.320 --> 00:23:16.160]   because yeah, when you, when you like are doing multi-point
[00:23:16.160 --> 00:23:17.680]   kind of like conversations, it's, you know,
[00:23:17.680 --> 00:23:21.400]   exact gifts getting applied is not like even a perfect science.
[00:23:21.400 --> 00:23:22.240]   I'm still yet.
[00:23:22.240 --> 00:23:23.280]   So we care about that.
[00:23:23.280 --> 00:23:25.760]   The second piece where we've actually sort of trained
[00:23:25.760 --> 00:23:27.720]   our model is actually on the retrieval system.
[00:23:27.720 --> 00:23:28.960]   And this is not even for embedding,
[00:23:28.960 --> 00:23:31.680]   but like actually being able to use high powered LLMs
[00:23:31.680 --> 00:23:34.160]   to be able to do much higher quality retrieval
[00:23:34.160 --> 00:23:36.040]   across the code base, right?
[00:23:36.040 --> 00:23:38.040]   So this is actually what UNTRL said.
[00:23:38.040 --> 00:23:40.480]   For a lot of the systems, we do believe embeddings work.
[00:23:40.480 --> 00:23:42.960]   But for complex questions, we don't believe embeddings
[00:23:42.960 --> 00:23:46.600]   can encapsulate all the granularity of a particular query.
[00:23:46.600 --> 00:23:48.600]   Like imagine, imagine I have a question
[00:23:48.600 --> 00:23:51.200]   on a code base of find me all quadratic time algorithms
[00:23:51.200 --> 00:23:52.040]   in this code base.
[00:23:52.040 --> 00:23:54.880]   Do we genuinely believe the embedding can encapsulate
[00:23:54.880 --> 00:23:57.280]   the fact that this function is a quadratic time function?
[00:23:57.280 --> 00:23:58.640]   No, I don't think it does.
[00:23:58.640 --> 00:24:00.680]   So you are going to get extremely poor precision
[00:24:00.680 --> 00:24:01.680]   recall at this task.
[00:24:01.680 --> 00:24:03.960]   So we need to apply something a little more high powered
[00:24:03.960 --> 00:24:05.280]   to actually go out and do that.
[00:24:05.280 --> 00:24:07.560]   So we've actually built large distributed systems
[00:24:07.560 --> 00:24:09.440]   to actually go out and run these at scale,
[00:24:09.440 --> 00:24:12.040]   run custom models at scale across large code bases.
[00:24:12.040 --> 00:24:13.760]   So I think it's more a question of that.
[00:24:13.760 --> 00:24:16.160]   The planning models right now, undoubtedly,
[00:24:16.160 --> 00:24:18.960]   I think the clods in the OpenAIs have the best products.
[00:24:18.960 --> 00:24:20.840]   I think LAMA4, depending on where it goes,
[00:24:20.840 --> 00:24:22.240]   it could be materially better.
[00:24:22.240 --> 00:24:24.200]   It's very clear that they're willing to invest
[00:24:24.200 --> 00:24:28.160]   a similar amount of compute as the OpenAIs and the anthropics.
[00:24:28.160 --> 00:24:29.000]   So we'll see.
[00:24:29.000 --> 00:24:30.880]   I would be very happy if they got really good,
[00:24:30.880 --> 00:24:32.400]   but unclear so far.
[00:24:32.400 --> 00:24:33.440]   - Don't forget Grok.
[00:24:33.440 --> 00:24:35.640]   - Hey, dude, I think Grok is also possible, right?
[00:24:35.640 --> 00:24:37.200]   I think don't doubt Elon.
[00:24:37.200 --> 00:24:40.040]   - Okay, so I didn't actually know.
[00:24:40.040 --> 00:24:41.840]   It's not obvious when I use Cascade.
[00:24:41.840 --> 00:24:42.960]   I should also mention that, you know,
[00:24:42.960 --> 00:24:44.920]   I was part of the preview and thanks for letting me in.
[00:24:44.920 --> 00:24:48.000]   And I've been maining WinSurf for a long time.
[00:24:48.000 --> 00:24:48.840]   It's not actually obvious.
[00:24:48.840 --> 00:24:51.080]   You don't make it obvious that you are running your own models.
[00:24:51.080 --> 00:24:52.080]   I feel like you should.
[00:24:52.080 --> 00:24:55.560]   So that like, I feel like it has more differentiation.
[00:24:55.560 --> 00:24:58.080]   Like I only have exclusive access to your models
[00:24:58.080 --> 00:24:59.360]   via your IDE
[00:24:59.360 --> 00:25:02.080]   than having the drop down as this cloud and for all.
[00:25:02.080 --> 00:25:03.720]   Cause I actually thought that was what you did.
[00:25:03.720 --> 00:25:05.160]   - No, so actually the way it works
[00:25:05.160 --> 00:25:07.520]   is the high level planning that is going on in the model
[00:25:07.520 --> 00:25:09.880]   is actually getting done with products like the cloud,
[00:25:09.880 --> 00:25:12.200]   but the extremely fast retrieval,
[00:25:12.200 --> 00:25:14.640]   as well as the ability to like take the high level plan
[00:25:14.640 --> 00:25:16.080]   and actually apply to the code base
[00:25:16.080 --> 00:25:18.200]   is proprietary systems that are running internally.
[00:25:18.200 --> 00:25:20.960]   - And then the stuff that you said about embedding
[00:25:20.960 --> 00:25:22.000]   is not being enough.
[00:25:22.000 --> 00:25:22.840]   Are you familiar with the,
[00:25:22.840 --> 00:25:24.280]   I thought it's a late interaction?
[00:25:24.280 --> 00:25:25.200]   - No, I actually have no room.
[00:25:25.200 --> 00:25:26.840]   - Yeah, so this is Colbert
[00:25:26.840 --> 00:25:29.120]   or like a guy Omar Khattab from,
[00:25:29.120 --> 00:25:31.320]   I think Stanford has been promoting this a lot.
[00:25:31.320 --> 00:25:32.640]   And it is basically what you've done.
[00:25:32.640 --> 00:25:33.480]   - Okay.
[00:25:33.480 --> 00:25:34.320]   (laughs)
[00:25:34.320 --> 00:25:36.200]   - It's sort of embedding on retrieval
[00:25:36.200 --> 00:25:37.200]   rather than pre-embedding.
[00:25:37.200 --> 00:25:39.080]   - Okay, that's in a very loose.
[00:25:39.080 --> 00:25:41.120]   - I think that sounds like a very good idea
[00:25:41.120 --> 00:25:42.640]   that is very similar to what we're doing.
[00:25:42.640 --> 00:25:44.080]   - It sounds like a very good idea.
[00:25:44.080 --> 00:25:44.920]   - Yeah.
[00:25:44.920 --> 00:25:45.760]   - I think we're excited.
[00:25:45.760 --> 00:25:46.840]   - That's like the meme of Obama
[00:25:46.840 --> 00:25:48.440]   giving himself a metal right there.
[00:25:48.440 --> 00:25:49.920]   (laughs)
[00:25:49.920 --> 00:25:51.360]   - No, I mean, there might be,
[00:25:51.360 --> 00:25:52.720]   like there might be something to learn
[00:25:52.720 --> 00:25:54.840]   from contrasting the ideas and seeing where,
[00:25:54.840 --> 00:25:56.440]   like the subtle opinion and differences.
[00:25:56.440 --> 00:25:58.280]   - It's also been applied very effectively
[00:25:58.280 --> 00:25:59.880]   to vision understanding,
[00:25:59.880 --> 00:26:03.360]   because vision models tend to just consume the whole image.
[00:26:03.360 --> 00:26:05.560]   If you are able to sort of focus on images
[00:26:05.560 --> 00:26:06.680]   based on the query,
[00:26:06.680 --> 00:26:10.000]   I think that can get you a lot of extra performance.
[00:26:10.000 --> 00:26:12.120]   - The basic idea of using compute
[00:26:12.120 --> 00:26:14.360]   in a distributed manner to do, you know,
[00:26:14.360 --> 00:26:16.440]   operations over a whole set of like raw data
[00:26:16.440 --> 00:26:18.080]   rather than like a materialized view
[00:26:18.080 --> 00:26:19.040]   is not anything new, right?
[00:26:19.040 --> 00:26:20.280]   Like, I think it's just like,
[00:26:20.280 --> 00:26:21.640]   how does that look like for all of them?
[00:26:21.640 --> 00:26:23.840]   - When I hear you say like build large distributed systems,
[00:26:23.840 --> 00:26:26.480]   like you have a very strange product strategy
[00:26:26.480 --> 00:26:28.480]   of going to down to the individual developer,
[00:26:28.480 --> 00:26:30.120]   but also to the large enterprise.
[00:26:30.120 --> 00:26:31.960]   Is it the same in front of serves everything?
[00:26:31.960 --> 00:26:33.880]   - I think the answer to that is yes.
[00:26:33.880 --> 00:26:34.720]   The answer to that is yes.
[00:26:34.720 --> 00:26:37.440]   And the only reason why for the answer is yes.
[00:26:37.440 --> 00:26:39.800]   And to be honest, our company is a lot more complex
[00:26:39.800 --> 00:26:42.440]   than I think if we just wanted to serve the individual.
[00:26:42.440 --> 00:26:43.280]   And I'll tell you that
[00:26:43.280 --> 00:26:46.200]   because we don't really like pay other providers
[00:26:46.200 --> 00:26:47.640]   to do things for our indexing.
[00:26:47.640 --> 00:26:49.200]   We don't pay like other providers
[00:26:49.200 --> 00:26:53.000]   to do our serving of our own customer models, right?
[00:26:53.000 --> 00:26:55.160]   And I think that's a core competency within our company
[00:26:55.160 --> 00:26:56.120]   that we have decided to build,
[00:26:56.120 --> 00:26:58.680]   but that's also enabled us to go and like make sure
[00:26:58.680 --> 00:27:00.200]   that when we're serving these products
[00:27:00.200 --> 00:27:02.400]   in an environment that works for these large enterprises,
[00:27:02.400 --> 00:27:03.400]   we're not going out and being like,
[00:27:03.400 --> 00:27:05.480]   we need to build this custom system for you guys, right?
[00:27:05.480 --> 00:27:08.480]   This is the same system that serves our entire user base.
[00:27:08.480 --> 00:27:11.680]   So that is a very unique decision we've taken as a company.
[00:27:11.680 --> 00:27:14.400]   And we admit that there are probably faster ways
[00:27:14.400 --> 00:27:15.400]   that we could have done this.
[00:27:15.400 --> 00:27:16.240]   - I was thinking, you know,
[00:27:16.240 --> 00:27:17.760]   when I was working with you for enterprise space,
[00:27:17.760 --> 00:27:20.160]   I was thinking like this philosophy of go slow to go fast,
[00:27:20.160 --> 00:27:23.440]   like build deliberately for the right level of instruction
[00:27:23.440 --> 00:27:26.200]   that can serve the market that you really aren't going after.
[00:27:26.200 --> 00:27:28.080]   - Yeah, I mean, I would say like I was writing,
[00:27:28.080 --> 00:27:29.920]   when writing that piece, like looking back
[00:27:29.920 --> 00:27:32.280]   and reading it back, it sounds so like almost obvious.
[00:27:32.280 --> 00:27:34.680]   And it has not all of those are really conscious decisions
[00:27:34.680 --> 00:27:36.480]   we made, like I'll be the first to admit that.
[00:27:36.480 --> 00:27:37.440]   But like it does help, right?
[00:27:37.440 --> 00:27:39.160]   When we go to like an enterprise
[00:27:39.160 --> 00:27:41.120]   that has tens of thousands of developers
[00:27:41.120 --> 00:27:42.320]   and they're like, oh, wow, you know,
[00:27:42.320 --> 00:27:44.040]   we have tens of thousands of developers
[00:27:44.040 --> 00:27:45.640]   and like does your infrastructure work
[00:27:45.640 --> 00:27:47.120]   for tens of thousands of developers?
[00:27:47.120 --> 00:27:48.000]   We can turn around and be like,
[00:27:48.000 --> 00:27:50.200]   well, we have hundreds of thousands of developers
[00:27:50.200 --> 00:27:51.640]   own individual plan that we're serving.
[00:27:51.640 --> 00:27:53.240]   Like, I think we'll be able to support you, right?
[00:27:53.240 --> 00:27:55.600]   So like, being able to do those things,
[00:27:55.600 --> 00:27:57.920]   like we started off by just like, let's give it to individuals,
[00:27:57.920 --> 00:28:00.440]   let's see what people like and what they don't like and learn,
[00:28:00.440 --> 00:28:01.760]   but then those become value propositions
[00:28:01.760 --> 00:28:02.800]   when we go to the enterprise.
[00:28:02.800 --> 00:28:05.440]   - And to recap, when you first came on the part,
[00:28:05.440 --> 00:28:08.240]   it was like auto completion is free
[00:28:08.240 --> 00:28:10.200]   and co-panel was 10 bucks a month.
[00:28:10.200 --> 00:28:12.120]   And you said, look, what we care about
[00:28:12.120 --> 00:28:14.720]   is building things on top of code completion.
[00:28:14.720 --> 00:28:17.400]   How did you decide to like just not focus
[00:28:17.400 --> 00:28:19.720]   on like short-term kind of like growth monetization
[00:28:19.720 --> 00:28:20.960]   of like the individual developer
[00:28:20.960 --> 00:28:22.160]   and like build some of this?
[00:28:22.160 --> 00:28:23.880]   Because the alternative would have been,
[00:28:23.880 --> 00:28:25.600]   hey, all these people are using it.
[00:28:25.600 --> 00:28:26.840]   It's like we're gonna make this other
[00:28:26.840 --> 00:28:29.800]   like five bucks a month plan monetize.
[00:28:29.800 --> 00:28:33.160]   - I think this might be a little bit of like commercial
[00:28:33.160 --> 00:28:34.680]   instinct that the company has
[00:28:34.680 --> 00:28:36.880]   and unclear if the commercial instinct is right.
[00:28:36.880 --> 00:28:40.360]   I think that right now optimizing for making money
[00:28:40.360 --> 00:28:42.040]   off of individual developers
[00:28:42.040 --> 00:28:44.960]   is probably the wrong actually strategy.
[00:28:44.960 --> 00:28:46.640]   - Largely because I think individual developers
[00:28:46.640 --> 00:28:48.640]   can switch off of products like very quickly.
[00:28:48.640 --> 00:28:51.400]   And unless we have like a very large lead
[00:28:51.400 --> 00:28:53.160]   trying to optimize for making a lot of profit
[00:28:53.160 --> 00:28:54.920]   off of individual developers,
[00:28:54.920 --> 00:28:56.560]   it's probably something that someone else
[00:28:56.560 --> 00:28:57.920]   could just vaporize very quickly
[00:28:57.920 --> 00:29:00.360]   and then they move to another product.
[00:29:00.360 --> 00:29:01.920]   And I'm gonna say this very honestly, right?
[00:29:01.920 --> 00:29:03.360]   Like when you use a product like
[00:29:03.360 --> 00:29:05.400]   podium on the individual side,
[00:29:05.400 --> 00:29:08.160]   there's not much that prevents you to switch
[00:29:08.160 --> 00:29:09.000]   onto another product.
[00:29:09.000 --> 00:29:10.160]   I think that will change with time
[00:29:10.160 --> 00:29:12.680]   as the products get better and better and deeper and deeper.
[00:29:12.680 --> 00:29:14.560]   I constantly say this like there's a book
[00:29:14.560 --> 00:29:16.280]   in business called like Seven Powers
[00:29:16.280 --> 00:29:17.720]   and I think one of the powers that a business
[00:29:17.720 --> 00:29:20.080]   like ours need to have is like real switching costs.
[00:29:20.080 --> 00:29:22.280]   But like you first need something in the product
[00:29:22.280 --> 00:29:24.200]   that makes people switch on and stay on
[00:29:24.200 --> 00:29:26.680]   before you think about how do you make people switch off.
[00:29:26.680 --> 00:29:29.480]   And I think for us, we believe that
[00:29:29.480 --> 00:29:31.880]   there's probably much more differentiation we can derive
[00:29:31.880 --> 00:29:34.040]   in the enterprise by working with these large companies
[00:29:34.040 --> 00:29:35.800]   in a way that is like, that is interesting
[00:29:35.800 --> 00:29:36.880]   and scalable for them.
[00:29:36.880 --> 00:29:39.120]   Like I'll be maybe more concrete here.
[00:29:39.120 --> 00:29:41.440]   Individual developers are much more sort of
[00:29:41.440 --> 00:29:43.640]   tuned towards small price changes.
[00:29:43.640 --> 00:29:44.680]   They care a lot more, right?
[00:29:44.680 --> 00:29:47.040]   Like if our product is 10, 20 bucks a month
[00:29:47.040 --> 00:29:49.000]   instead of 50 or a hundred bucks a month,
[00:29:49.000 --> 00:29:50.280]   that matters to them a lot.
[00:29:50.280 --> 00:29:52.200]   And for a large company where they're already spending
[00:29:52.200 --> 00:29:53.600]   billions of dollars on software,
[00:29:53.600 --> 00:29:54.520]   this is much less important.
[00:29:54.520 --> 00:29:57.240]   So you can actually solve maybe deeper problems for them
[00:29:57.240 --> 00:29:59.640]   and you can actually kind of provide
[00:29:59.640 --> 00:30:01.320]   more differentiation on that angle.
[00:30:01.320 --> 00:30:03.240]   Whereas I think individual developers
[00:30:03.240 --> 00:30:05.240]   could be churning as long as we don't have the best product.
[00:30:05.240 --> 00:30:06.800]   So focus on being the best product,
[00:30:06.800 --> 00:30:07.960]   not trying to like take price
[00:30:07.960 --> 00:30:09.680]   and make a lot of money off of people.
[00:30:09.680 --> 00:30:12.680]   And I don't think we will, for the foreseeable future,
[00:30:12.680 --> 00:30:14.240]   try to be a company that tries to make
[00:30:14.240 --> 00:30:15.960]   a lot of money off individual developers.
[00:30:15.960 --> 00:30:17.120]   - I mean, that makes sense.
[00:30:17.120 --> 00:30:19.320]   So why $10 a month for WinSurf?
[00:30:19.320 --> 00:30:22.040]   - Why $10 a month was actually the pro plan.
[00:30:22.040 --> 00:30:23.880]   So we launched our individual pro plan
[00:30:23.880 --> 00:30:25.400]   before WinSurf existed.
[00:30:25.400 --> 00:30:27.240]   'Cause I think there's, let's also,
[00:30:27.240 --> 00:30:28.760]   we also had to be financially responsible.
[00:30:28.760 --> 00:30:29.840]   (laughing)
[00:30:29.840 --> 00:30:30.680]   Right?
[00:30:30.680 --> 00:30:32.680]   - Yeah, we can't run out of money.
[00:30:32.680 --> 00:30:34.440]   - There's 150 million dollars.
[00:30:34.440 --> 00:30:35.280]   - It's like, it's like, it's cool.
[00:30:35.280 --> 00:30:36.120]   I mean, there's a lot of things
[00:30:36.120 --> 00:30:36.960]   'cause of our infrastructure background,
[00:30:36.960 --> 00:30:39.040]   we can give like, for essentially free,
[00:30:39.040 --> 00:30:41.480]   like unlimited auto-complete, unlimited chat
[00:30:41.480 --> 00:30:43.320]   on like our, you know, faster models,
[00:30:43.320 --> 00:30:46.280]   like we have a lot of things actually out for free.
[00:30:46.280 --> 00:30:47.480]   But yeah, when we start doing things
[00:30:47.480 --> 00:30:48.520]   like the super-completes
[00:30:48.520 --> 00:30:50.480]   and really large amounts of indexing
[00:30:50.480 --> 00:30:53.120]   and all of these things, like there is real cogs here.
[00:30:53.120 --> 00:30:54.560]   Like we can't ignore that.
[00:30:54.560 --> 00:30:57.640]   And so we just created $10 a month pro plan,
[00:30:57.640 --> 00:30:58.840]   mostly just to cover the costs.
[00:30:58.840 --> 00:31:00.160]   Like we're not really like operating,
[00:31:00.160 --> 00:31:01.680]   I think on a much of a margin there either.
[00:31:01.680 --> 00:31:04.120]   But like, okay, like just to cover us there.
[00:31:04.120 --> 00:31:07.040]   So for WinSurf, it just ended up being the same thing.
[00:31:07.040 --> 00:31:09.240]   And everyone who downloads WinSurf in the first,
[00:31:09.240 --> 00:31:10.880]   like at every, like a couple of weeks,
[00:31:10.880 --> 00:31:12.080]   like at like two weeks or three,
[00:31:12.080 --> 00:31:13.480]   which is how people try it out less,
[00:31:13.480 --> 00:31:14.520]   know what they like, what they don't like.
[00:31:14.520 --> 00:31:16.400]   And that's how we've always operated.
[00:31:16.400 --> 00:31:19.560]   - I've talked to a lot of CTOs and like the Fortune 100
[00:31:19.560 --> 00:31:21.600]   where most of the engineers they have,
[00:31:21.600 --> 00:31:23.120]   they don't really do much anyway.
[00:31:23.120 --> 00:31:26.600]   The problem is not that the developer costs 200K
[00:31:26.600 --> 00:31:28.200]   and you're saving 8K.
[00:31:28.200 --> 00:31:30.640]   It's like that developer should not be paid 200K.
[00:31:30.640 --> 00:31:33.320]   But that's kind of like the base price, you know?
[00:31:33.320 --> 00:31:35.440]   But then you have developers getting paid 200K,
[00:31:35.440 --> 00:31:37.000]   there should be paid 500K.
[00:31:37.000 --> 00:31:40.200]   So it's almost like you're averaging out the price
[00:31:40.200 --> 00:31:42.440]   because most people are actually not that productive anyway.
[00:31:42.440 --> 00:31:44.160]   So if you made them 20% more productive,
[00:31:44.160 --> 00:31:45.600]   they're still not very productive.
[00:31:45.600 --> 00:31:47.480]   And I don't know in the future like,
[00:31:47.480 --> 00:31:52.200]   is it that the junior developer's salary is like 50K, you know?
[00:31:52.200 --> 00:31:54.800]   And it's like the bottom of the end gets kind of squeezed out
[00:31:54.800 --> 00:31:56.880]   and then the top end gets squeezed up.
[00:31:56.880 --> 00:31:59.000]   - Yeah, maybe I'll ask you one thing that I think about a lot
[00:31:59.000 --> 00:32:01.400]   because I do think about this, the perceived anything.
[00:32:01.400 --> 00:32:03.300]   All of this stuff I think about a good deal.
[00:32:03.300 --> 00:32:05.320]   Let's take a product like Office 365.
[00:32:05.320 --> 00:32:06.840]   I will say a lawyer at Codeium
[00:32:06.840 --> 00:32:08.800]   uses Microsoft Word way more than I do.
[00:32:08.800 --> 00:32:10.400]   I'm still putting the same bill.
[00:32:10.400 --> 00:32:13.080]   But the amount of value that he's driving from Office 365
[00:32:13.080 --> 00:32:15.440]   is probably, you know, tens of thousands of dollars.
[00:32:15.440 --> 00:32:18.120]   By the way, everyone, you know, Google Docs, great product.
[00:32:18.120 --> 00:32:20.480]   Microsoft Word is a crazy product.
[00:32:20.480 --> 00:32:22.600]   It made it so that the moment you review anything
[00:32:22.600 --> 00:32:24.320]   in Microsoft Word, the only way you can review it
[00:32:24.320 --> 00:32:26.080]   is with other people in Microsoft Word.
[00:32:26.080 --> 00:32:28.160]   It's like this virus that penetrates everything
[00:32:28.160 --> 00:32:29.840]   and it's not only penetrates it within the company,
[00:32:29.840 --> 00:32:31.800]   it penetrates it cross-company too.
[00:32:31.800 --> 00:32:34.240]   The amount of value it's driving is way higher for him.
[00:32:34.240 --> 00:32:35.800]   So for these kinds of products,
[00:32:35.800 --> 00:32:37.880]   there's always going to be for these kinds of products,
[00:32:37.880 --> 00:32:41.120]   this variance between who gets value from these products, right?
[00:32:41.120 --> 00:32:41.960]   And you're right.
[00:32:41.960 --> 00:32:42.840]   It's almost like a blended,
[00:32:42.840 --> 00:32:44.200]   'cause you're actually totally right.
[00:32:44.200 --> 00:32:45.400]   Probably this company should be paying
[00:32:45.400 --> 00:32:47.760]   that one developer maybe like four times as much.
[00:32:47.760 --> 00:32:50.680]   But in weird way, software is like this team activity enough
[00:32:50.680 --> 00:32:52.440]   that there is a bunch of blended outcomes,
[00:32:52.440 --> 00:32:54.880]   but hey, like 20% of the four times
[00:32:54.880 --> 00:32:56.400]   and there are four people is still going to cover
[00:32:56.400 --> 00:32:58.160]   the cost across the four individuals, right?
[00:32:58.160 --> 00:33:01.680]   And that's how roughly these products kind of get priced out.
[00:33:01.680 --> 00:33:03.000]   - I mean, more than about pricing,
[00:33:03.000 --> 00:33:05.920]   this is about like the future of like the software engineer.
[00:33:05.920 --> 00:33:07.600]   Like we could be very wrong also.
[00:33:07.600 --> 00:33:10.000]   - Yeah, I think nobody knows.
[00:33:10.000 --> 00:33:11.880]   - Reserve the right to being incredibly off.
[00:33:11.880 --> 00:33:12.720]   - Yeah.
[00:33:12.720 --> 00:33:13.960]   I mean, business model does, in fact,
[00:33:13.960 --> 00:33:16.520]   the product product does impact the user experience.
[00:33:16.520 --> 00:33:17.600]   So it's all of a kind.
[00:33:17.600 --> 00:33:18.440]   I don't mind.
[00:33:18.440 --> 00:33:21.400]   We do are as concerned about the business of tech
[00:33:21.400 --> 00:33:22.680]   as the tech itself.
[00:33:22.680 --> 00:33:23.520]   - That's cool.
[00:33:23.520 --> 00:33:25.360]   - Speaking of which, there's other listener questions.
[00:33:25.360 --> 00:33:27.280]   Shout out to Daniel and felt it was pretty active
[00:33:27.280 --> 00:33:29.720]   in our Discord, just asking all these things.
[00:33:29.720 --> 00:33:32.240]   Multi-agent, very, very hot and popular,
[00:33:32.240 --> 00:33:34.760]   especially from like the Microsoft Research point of view,
[00:33:34.760 --> 00:33:37.360]   have you made any explorations there?
[00:33:37.360 --> 00:33:38.680]   - I think we have.
[00:33:38.680 --> 00:33:40.800]   I don't think we've called it a multi-agent,
[00:33:40.800 --> 00:33:42.080]   which is more so like,
[00:33:42.080 --> 00:33:44.680]   once you, this notion of having many trajectories
[00:33:44.680 --> 00:33:46.160]   that you can spawn off,
[00:33:46.160 --> 00:33:49.040]   they kind of like validate sort of some different hypotheses
[00:33:49.040 --> 00:33:50.840]   and you can kind of pick the most interesting one.
[00:33:50.840 --> 00:33:53.040]   This is stuff that we've actually analyzed internally
[00:33:53.040 --> 00:33:53.880]   at the company.
[00:33:53.880 --> 00:33:56.480]   By the way, the reason why we have not put these things in
[00:33:56.480 --> 00:33:58.480]   actually is partially because we can't go out
[00:33:58.480 --> 00:34:01.520]   and execute some random stuff in peril in the meantime,
[00:34:01.520 --> 00:34:03.040]   in the meantime on other side effects.
[00:34:03.040 --> 00:34:04.320]   Because of the side effects, right?
[00:34:04.320 --> 00:34:06.680]   So there are some things that are a little bit dependent
[00:34:06.680 --> 00:34:09.880]   on us unlocking more and more functionality internally.
[00:34:09.880 --> 00:34:11.920]   And then the other thing is, in the short term,
[00:34:11.920 --> 00:34:13.800]   I think there is also a latency component.
[00:34:13.800 --> 00:34:15.880]   And I think all of these things can kind of be solved.
[00:34:15.880 --> 00:34:17.600]   I actually believe all of these things are solved over them.
[00:34:17.600 --> 00:34:18.840]   They're not unsolved over them.
[00:34:18.840 --> 00:34:20.680]   And if you want to run all of them in parallel,
[00:34:20.680 --> 00:34:22.560]   you probably don't want end machines to go out and do it.
[00:34:22.560 --> 00:34:23.840]   I think that's unnecessary,
[00:34:23.840 --> 00:34:26.600]   especially if most of them are I/O bound kind of operations
[00:34:26.600 --> 00:34:28.720]   where all you're doing is reading a little bit of data
[00:34:28.720 --> 00:34:29.760]   and writing out a little bit of data.
[00:34:29.760 --> 00:34:31.640]   It's not extremely computer intensive.
[00:34:31.640 --> 00:34:33.280]   I think that it's a good idea
[00:34:33.280 --> 00:34:35.320]   and probably something we will pursue
[00:34:35.320 --> 00:34:36.840]   and is going to be in the product.
[00:34:36.840 --> 00:34:39.000]   - I'm still processing what you just said about things
[00:34:39.000 --> 00:34:39.840]   being I/O bound.
[00:34:39.840 --> 00:34:42.160]   So for a certain class of concurrency,
[00:34:42.160 --> 00:34:43.680]   you can actually just run it all in one machine.
[00:34:43.680 --> 00:34:44.520]   - Yeah, why not?
[00:34:44.520 --> 00:34:47.280]   'Cause if you look at the changes that are made, right?
[00:34:47.280 --> 00:34:48.240]   And for some of these,
[00:34:48.240 --> 00:34:50.360]   it's writing out like what, a couple of thousand bytes,
[00:34:50.360 --> 00:34:52.720]   maybe like tens of thousands of bytes on every tree.
[00:34:52.720 --> 00:34:54.560]   It's not a lot, very small.
[00:34:54.560 --> 00:34:56.800]   - What's next for cascade or winter?
[00:34:56.800 --> 00:34:58.040]   - Oh, there's a lot.
[00:34:58.040 --> 00:34:58.880]   I don't know.
[00:34:58.880 --> 00:35:00.960]   We did an internal pull and we're just like,
[00:35:00.960 --> 00:35:02.520]   are you more excited about this launcher
[00:35:02.520 --> 00:35:04.400]   or the launch that's happening in a month
[00:35:04.400 --> 00:35:06.040]   or like what we're going to come out within a month?
[00:35:06.040 --> 00:35:08.080]   And I was like almost uniformly in a month.
[00:35:08.080 --> 00:35:10.120]   I think like, you know, there's some like obvious ones.
[00:35:10.120 --> 00:35:11.480]   I don't know how much for anyone to say.
[00:35:11.480 --> 00:35:13.920]   I don't want to just speak of it.
[00:35:13.920 --> 00:35:17.280]   But I think you look at all the same axes of the system, right?
[00:35:17.280 --> 00:35:19.200]   Like, how can we improve the knowledge or triple?
[00:35:19.200 --> 00:35:20.480]   Like we'll always keep on figuring out
[00:35:20.480 --> 00:35:21.480]   how to improve knowledge or triple.
[00:35:21.480 --> 00:35:22.880]   In the inner launch video,
[00:35:22.880 --> 00:35:24.800]   we even showed some of like the early explorations
[00:35:24.800 --> 00:35:27.280]   that we have about looking to other data sources.
[00:35:27.280 --> 00:35:28.280]   That might not be the coolest thing
[00:35:28.280 --> 00:35:30.560]   to the individual developer building a zero to one app,
[00:35:30.560 --> 00:35:32.240]   but you can really believe that like,
[00:35:32.240 --> 00:35:33.720]   the enterprise customers really think
[00:35:33.720 --> 00:35:35.080]   that that's very cool, right?
[00:35:35.080 --> 00:35:36.840]   I think on the tool side,
[00:35:36.840 --> 00:35:38.240]   I think there's a whole lot more that we can do.
[00:35:38.240 --> 00:35:39.200]   I mean, of course,
[00:35:39.200 --> 00:35:41.320]   we're just talking about not just suggesting
[00:35:41.320 --> 00:35:42.840]   the terminal command, but actually executing them.
[00:35:42.840 --> 00:35:45.120]   Like I think that's going to be huge unlocked.
[00:35:45.120 --> 00:35:47.720]   You look at the actions that people are taking, right?
[00:35:47.720 --> 00:35:49.640]   Like the human actions, the trajectories that we can build.
[00:35:49.640 --> 00:35:51.680]   Like how can we make that even more detailed?
[00:35:51.680 --> 00:35:52.920]   And I think all of those things,
[00:35:52.920 --> 00:35:55.880]   and you make some like even a cleaner UI,
[00:35:55.880 --> 00:35:58.720]   like the idea of looking at future trajectories,
[00:35:58.720 --> 00:35:59.680]   trying a few different things
[00:35:59.680 --> 00:36:01.960]   and like suggesting potential and next like actions
[00:36:01.960 --> 00:36:02.800]   to be taken.
[00:36:02.800 --> 00:36:04.240]   That doesn't really exist yet,
[00:36:04.240 --> 00:36:05.760]   but like it's pretty obvious.
[00:36:05.760 --> 00:36:06.920]   I think how that would look like, right?
[00:36:06.920 --> 00:36:09.760]   You open up cascade and instead of like starting typing,
[00:36:09.760 --> 00:36:12.120]   it's just like, here's a bunch of things that we want to do.
[00:36:12.120 --> 00:36:12.960]   We're kind of joking.
[00:36:12.960 --> 00:36:13.960]   It's like clippies coming back,
[00:36:13.960 --> 00:36:16.560]   but like maybe now's the time for clippie to really shine, right?
[00:36:16.560 --> 00:36:19.080]   So I think there's a lot of ways that we can take this,
[00:36:19.080 --> 00:36:20.960]   which I think is like the very exciting part.
[00:36:20.960 --> 00:36:22.960]   We're calling each of our launches waves, I believe,
[00:36:22.960 --> 00:36:25.760]   because we want to really double down on the aquatic themes.
[00:36:25.760 --> 00:36:26.600]   - Oh yeah.
[00:36:26.600 --> 00:36:27.920]   Does someone actually wincer for the company?
[00:36:27.920 --> 00:36:28.760]   - Is it?
[00:36:28.760 --> 00:36:30.560]   (both laughing)
[00:36:30.560 --> 00:36:32.640]   - Yeah, we're living out our dream of being cool enough
[00:36:32.640 --> 00:36:33.880]   to wincer through the rise.
[00:36:33.880 --> 00:36:35.240]   - Yeah, I don't think we can't.
[00:36:35.240 --> 00:36:36.520]   - Yeah, all right.
[00:36:36.520 --> 00:36:37.920]   - That was actually something we learned,
[00:36:37.920 --> 00:36:39.200]   because I don't think any of us are wood surfers,
[00:36:39.200 --> 00:36:40.440]   like in our launch video,
[00:36:40.440 --> 00:36:43.080]   we have someone like using windsurf on a windsurf.
[00:36:43.080 --> 00:36:43.920]   - You saw that?
[00:36:43.920 --> 00:36:44.760]   - You saw that in the beginning of the video,
[00:36:44.760 --> 00:36:45.920]   someone has a computer
[00:36:45.920 --> 00:36:48.400]   and we didn't realize like now apparently is like the time
[00:36:48.400 --> 00:36:50.920]   of the year where there's like not enough wind to windsurf.
[00:36:50.920 --> 00:36:52.720]   So we were trying to figure out how to do this like,
[00:36:52.720 --> 00:36:54.440]   you know, a launch video with a windsurf on the windsurf
[00:36:54.440 --> 00:36:56.360]   and like every windsurf we attacked were like,
[00:36:56.360 --> 00:36:57.200]   yeah, it's not possible.
[00:36:57.200 --> 00:36:58.240]   And it was like one crazy guy.
[00:36:58.240 --> 00:37:00.200]   He was like, yeah, I think we can do this.
[00:37:00.200 --> 00:37:01.800]   And we made it happen.
[00:37:01.800 --> 00:37:03.040]   - Oh, okay.
[00:37:03.040 --> 00:37:04.040]   - Well, it's funny.
[00:37:04.040 --> 00:37:05.640]   - Is there anything that you want feedback on?
[00:37:05.640 --> 00:37:07.120]   Like maybe if there's a fork in a road,
[00:37:07.120 --> 00:37:09.880]   you want feedback, you want people to respond to this,
[00:37:09.880 --> 00:37:11.880]   podcast and tell you what they want?
[00:37:11.880 --> 00:37:14.200]   - Yeah, I think there's a lot of things
[00:37:14.200 --> 00:37:16.680]   that I think could be more polished about the product
[00:37:16.680 --> 00:37:18.800]   that we'd like to improve.
[00:37:18.800 --> 00:37:20.000]   Lots of different environments
[00:37:20.000 --> 00:37:21.400]   that we're gonna improve performance on.
[00:37:21.400 --> 00:37:25.120]   And I think we would love to hear from folks across the gamut.
[00:37:25.120 --> 00:37:26.880]   Like, hey, like if you have this environment,
[00:37:26.880 --> 00:37:28.600]   you use Windows and X version.
[00:37:28.600 --> 00:37:30.040]   It didn't work or this language.
[00:37:30.040 --> 00:37:30.880]   - Oh, yeah.
[00:37:30.880 --> 00:37:31.720]   - It was like very poor.
[00:37:31.720 --> 00:37:33.320]   I think we would like to hear it.
[00:37:33.320 --> 00:37:35.200]   - Yeah, I gave prepping Kevin a lot of shit
[00:37:35.200 --> 00:37:36.560]   for my Python issues.
[00:37:36.560 --> 00:37:37.480]   - Yeah, yeah, yeah.
[00:37:37.480 --> 00:37:39.480]   And I think there's a lot to kind of improve
[00:37:39.480 --> 00:37:40.320]   on the environment set.
[00:37:40.320 --> 00:37:42.520]   I think like, for instance, even just a dumb example
[00:37:42.520 --> 00:37:44.920]   and I think sort of Swix, this was a common one.
[00:37:44.920 --> 00:37:46.520]   It's like, yeah, like the virtual environment,
[00:37:46.520 --> 00:37:48.560]   where's the terminal running, what is all this stuff?
[00:37:48.560 --> 00:37:50.200]   These are all basic things that like,
[00:37:50.200 --> 00:37:51.760]   to be honest, this is not rocket science,
[00:37:51.760 --> 00:37:53.520]   but we need to just fix it, right?
[00:37:53.520 --> 00:37:54.360]   We need to fix it.
[00:37:54.360 --> 00:37:56.520]   So we would love to hear like all the feedback
[00:37:56.520 --> 00:37:58.160]   from the product like, was it too slow?
[00:37:58.160 --> 00:37:59.440]   Where was it too slow?
[00:37:59.440 --> 00:38:01.400]   What kind of environments could it work way more in?
[00:38:01.400 --> 00:38:02.760]   There's a lot of things that we don't know.
[00:38:02.760 --> 00:38:06.320]   We luckily were daily users of the product internally.
[00:38:06.320 --> 00:38:08.120]   So we're getting a lot of feedback inside.
[00:38:08.120 --> 00:38:09.440]   But I will say like, there's a little bit
[00:38:09.440 --> 00:38:12.040]   of Silicon Valiism in that a lot of us develop on Mac.
[00:38:12.040 --> 00:38:14.920]   A lot of people, once again, over 80% of developers
[00:38:14.920 --> 00:38:15.760]   are on Windows.
[00:38:15.760 --> 00:38:17.040]   So yeah, there's a lot to learn
[00:38:17.040 --> 00:38:18.680]   and probably a lot of improvements down the line.
[00:38:18.680 --> 00:38:19.640]   - Are you personally tempted,
[00:38:19.640 --> 00:38:22.440]   you're CEO of the company to switch to Windows
[00:38:22.440 --> 00:38:24.720]   just to feel something?
[00:38:24.720 --> 00:38:25.560]   (laughing)
[00:38:25.560 --> 00:38:27.600]   - To feel the pain.
[00:38:27.600 --> 00:38:28.440]   - You know what?
[00:38:28.440 --> 00:38:29.280]   Maybe I should.
[00:38:29.280 --> 00:38:30.440]   - I should answer that.
[00:38:30.440 --> 00:38:34.760]   - I mean, your customers, everyone says is 89%
[00:38:34.760 --> 00:38:35.760]   in all Windows, right?
[00:38:35.760 --> 00:38:37.560]   If you live in Windows, you will never,
[00:38:37.560 --> 00:38:40.800]   you would never not see something that missed.
[00:38:40.800 --> 00:38:41.840]   - So I think in the beginning,
[00:38:41.840 --> 00:38:44.240]   part of the reason why we were hesitant to do that
[00:38:44.240 --> 00:38:46.720]   was like a lot of our architectural decisions
[00:38:46.720 --> 00:38:49.640]   to work on across every IDE was because we built
[00:38:49.640 --> 00:38:52.200]   a platform agnostic way of running the system
[00:38:52.200 --> 00:38:54.920]   on the user's local machine that was only buildable,
[00:38:54.920 --> 00:38:58.040]   easily buildable on dev containers that lived
[00:38:58.040 --> 00:38:59.320]   on a particular time of platform,
[00:38:59.320 --> 00:39:00.680]   so Mac was like nice for that.
[00:39:00.680 --> 00:39:03.280]   But now there's not really an excuse if it's like,
[00:39:03.280 --> 00:39:05.800]   if I can also make changes to the UI and stuff like that.
[00:39:05.800 --> 00:39:07.400]   And yeah, WSL also exists.
[00:39:07.400 --> 00:39:08.800]   That's actually something that we need to add
[00:39:08.800 --> 00:39:09.640]   to the product.
[00:39:09.640 --> 00:39:11.960]   That's how early it is, that we have not actually added that.
[00:39:11.960 --> 00:39:13.120]   - We don't have like remote.
[00:39:13.120 --> 00:39:15.800]   - Anything else about Codeium at large, right?
[00:39:15.800 --> 00:39:19.600]   Like you still have your core business of the enterprise
[00:39:19.600 --> 00:39:20.440]   Codeium.
[00:39:20.440 --> 00:39:21.280]   - Yeah.
[00:39:21.280 --> 00:39:23.400]   - Anything moving there or anything that people should know about?
[00:39:23.400 --> 00:39:26.160]   - I think a lot are still moving there, right?
[00:39:26.160 --> 00:39:27.960]   I think it would be a little bit like, you know,
[00:39:27.960 --> 00:39:29.400]   very kind of egotistical as to being like,
[00:39:29.400 --> 00:39:30.440]   oh, we have Winsurf now,
[00:39:30.440 --> 00:39:31.840]   all of our enterprise customers are gonna switch
[00:39:31.840 --> 00:39:33.320]   to Winsurf and this is the only, like,
[00:39:33.320 --> 00:39:34.360]   you know, we still support each other.
[00:39:34.360 --> 00:39:36.720]   - I was gonna say, you just talked about your Java guys
[00:39:36.720 --> 00:39:38.720]   loving JetBrains, they're never gonna leave JetBrains.
[00:39:38.720 --> 00:39:40.640]   - They're not like, I mean, forget JetBrains.
[00:39:40.640 --> 00:39:43.240]   There's still tons and tons of enterprise people on Eclipse.
[00:39:43.240 --> 00:39:45.320]   Like we're still the only code assistant
[00:39:45.320 --> 00:39:46.480]   that has an extension of Eclipse.
[00:39:46.480 --> 00:39:48.720]   That's still true, it years in, right?
[00:39:48.720 --> 00:39:50.680]   But like, that's 'cause that's our enterprise customers.
[00:39:50.680 --> 00:39:52.600]   And the way that we always think about it is like,
[00:39:52.600 --> 00:39:54.680]   how do we still maximize the value of AI
[00:39:54.680 --> 00:39:55.520]   for every developer?
[00:39:55.520 --> 00:39:58.320]   I don't think that part of who we are has changed
[00:39:58.320 --> 00:39:59.480]   since the beginning, right?
[00:39:59.480 --> 00:40:01.160]   And there's a lot of like meeting the developers
[00:40:01.160 --> 00:40:02.000]   where they are.
[00:40:02.000 --> 00:40:03.080]   So I think on the enterprise side,
[00:40:03.080 --> 00:40:05.160]   we're still pretty invested in doing that.
[00:40:05.160 --> 00:40:07.560]   We have like a team of engineers dedicated just
[00:40:07.560 --> 00:40:08.680]   to making enterprise successful
[00:40:08.680 --> 00:40:10.440]   and thinking about the enterprise problems.
[00:40:10.440 --> 00:40:11.400]   But really, if we think about it
[00:40:11.400 --> 00:40:13.200]   from the really macro perspective,
[00:40:13.200 --> 00:40:15.560]   it's like, if we can solve all the enterprise models
[00:40:15.560 --> 00:40:18.040]   for an enterprise and we have products
[00:40:18.040 --> 00:40:21.360]   that developers themselves just truly, truly love,
[00:40:21.360 --> 00:40:23.240]   then we're solving the problem from both sides.
[00:40:23.240 --> 00:40:24.800]   And I think it's one of those things
[00:40:24.800 --> 00:40:26.880]   where I think when we started working with the enterprise
[00:40:26.880 --> 00:40:28.320]   and we started building like dev tools, right?
[00:40:28.320 --> 00:40:29.440]   We started as an infrastructure company,
[00:40:29.440 --> 00:40:32.920]   now we're not building dev tools for developers.
[00:40:32.920 --> 00:40:35.560]   You really quickly understand and realize just
[00:40:35.560 --> 00:40:37.840]   how much developers loving the tool
[00:40:37.840 --> 00:40:39.720]   make us successful in an enterprise.
[00:40:39.720 --> 00:40:41.680]   There's a lot of enterprise software that developers--
[00:40:41.680 --> 00:40:42.880]   - I wanna draw this flywheel.
[00:40:42.880 --> 00:40:45.400]   - But like, we're giving a tool for people
[00:40:45.400 --> 00:40:47.440]   where they're doing their most important work.
[00:40:47.440 --> 00:40:48.360]   They have to love it.
[00:40:48.360 --> 00:40:50.960]   And it's not like, we're like trying to convince,
[00:40:50.960 --> 00:40:52.280]   the executives at this company
[00:40:52.280 --> 00:40:54.320]   also ask their developers, "What, do you love this?"
[00:40:54.320 --> 00:40:56.800]   Like, that is like almost always a key aspect
[00:40:56.800 --> 00:40:58.120]   of whether or not Codium is accepting
[00:40:58.120 --> 00:41:00.000]   or like into the organization.
[00:41:00.000 --> 00:41:02.560]   I don't think we go from zero to 10 million ARR
[00:41:02.560 --> 00:41:04.400]   in less than a year in an enterprise product
[00:41:04.400 --> 00:41:06.160]   if we don't have a product that developers love.
[00:41:06.160 --> 00:41:07.960]   So I think that's why we're just,
[00:41:07.960 --> 00:41:10.480]   the IDE is more of a developer love kind of play.
[00:41:10.480 --> 00:41:12.200]   It will eventually make it to the enterprise.
[00:41:12.200 --> 00:41:13.440]   We still saw the enterprise problems.
[00:41:13.440 --> 00:41:15.760]   And again, we could be completely wrong about this,
[00:41:15.760 --> 00:41:17.520]   but we hope we're solving the better problems.
[00:41:17.520 --> 00:41:19.520]   - It's interesting to ask you this before
[00:41:19.520 --> 00:41:21.720]   we started rolling, but like, it's the same team,
[00:41:21.720 --> 00:41:22.840]   that's the same engine team.
[00:41:22.840 --> 00:41:25.480]   Like I, in any normal company,
[00:41:25.480 --> 00:41:28.400]   or like my normal mental model of company construction,
[00:41:28.400 --> 00:41:31.320]   if you were to have like effectively two products like this,
[00:41:31.320 --> 00:41:32.600]   like you would have two different teams
[00:41:32.600 --> 00:41:34.880]   serving two different needs, but it's the same team.
[00:41:34.880 --> 00:41:36.200]   - Yeah, I think one of the things
[00:41:36.200 --> 00:41:38.320]   that's maybe unique about our company is like,
[00:41:38.320 --> 00:41:41.120]   this has not been one company the whole time, right?
[00:41:41.120 --> 00:41:43.960]   Like we were first, like this GP virtualization company
[00:41:43.960 --> 00:41:45.000]   pivoted to this.
[00:41:45.000 --> 00:41:46.840]   And then after that, we're making some changes.
[00:41:46.840 --> 00:41:49.960]   And like, I think there's like a versatility of the company.
[00:41:49.960 --> 00:41:53.680]   And like this ability to move where we think the instinct,
[00:41:53.680 --> 00:41:55.240]   we have this instinct where, and by the way,
[00:41:55.240 --> 00:41:56.080]   the instinct could be wrong.
[00:41:56.080 --> 00:41:58.320]   But if we smell something, we're going to move fast.
[00:41:58.320 --> 00:41:59.800]   And I think it's more testament to,
[00:41:59.800 --> 00:42:02.520]   I think the engine team, rather than any one of us.
[00:42:02.520 --> 00:42:06.200]   - I'm sure you had December 19, 2022,
[00:42:06.200 --> 00:42:08.520]   you had one of our guest posts,
[00:42:08.520 --> 00:42:11.280]   what building Co-Pilot correctly takes?
[00:42:11.280 --> 00:42:14.040]   - Estimate inference to figure out latency quality.
[00:42:14.040 --> 00:42:17.040]   - Bill first party, instead of using third party as API,
[00:42:17.040 --> 00:42:22.040]   figure out real time because chat GBT and Dali, Dali are too slow.
[00:42:22.040 --> 00:42:26.040]   Optimize prompt because context windows limited,
[00:42:26.040 --> 00:42:27.880]   which is maybe not that true anymore.
[00:42:27.880 --> 00:42:30.640]   And then merge model outputs with the UX
[00:42:30.640 --> 00:42:32.560]   to make the product more intuitive.
[00:42:32.560 --> 00:42:34.360]   Is there anything you would add?
[00:42:34.360 --> 00:42:36.520]   - I think myself like a B minus on that.
[00:42:36.520 --> 00:42:37.360]   - Yeah, no, it's pretty good.
[00:42:37.360 --> 00:42:38.560]   - Like some parts of that are accurate,
[00:42:38.560 --> 00:42:39.960]   even like the context like one that you call that,
[00:42:39.960 --> 00:42:42.160]   like yeah, models have like larger context like now,
[00:42:42.160 --> 00:42:43.240]   that's absolutely true.
[00:42:43.240 --> 00:42:45.960]   Like it's grown a lot, but look at like an enterprise code base.
[00:42:45.960 --> 00:42:47.280]   They have like, you know,
[00:42:47.280 --> 00:42:48.480]   tens of millions of lines of code
[00:42:48.480 --> 00:42:50.680]   that's hundreds of billions of tokens of code.
[00:42:50.680 --> 00:42:51.760]   - Never going to change.
[00:42:51.760 --> 00:42:53.920]   - It's still being really good at like being able to piece
[00:42:53.920 --> 00:42:55.800]   together, this like distribute knowledge was important.
[00:42:55.800 --> 00:42:57.880]   So I think like there are figures there that are still
[00:42:57.880 --> 00:42:58.800]   pretty accurate.
[00:42:58.800 --> 00:43:00.880]   There's probably some that are, you know, less so.
[00:43:00.880 --> 00:43:01.720]   - First party versus third party.
[00:43:01.720 --> 00:43:02.560]   - First party versus third party.
[00:43:02.560 --> 00:43:03.640]   I think we're like, we're wrong there.
[00:43:03.640 --> 00:43:04.480]   - I got it wrong.
[00:43:04.480 --> 00:43:06.160]   - I think I would nuance that to be like,
[00:43:06.160 --> 00:43:07.680]   there are certain things that it's really important
[00:43:07.680 --> 00:43:09.320]   to first party like, you know, autocomplete,
[00:43:09.320 --> 00:43:12.280]   you have a really specific application that you can't just
[00:43:12.280 --> 00:43:14.760]   prompt engineer your way out of or just maybe even like,
[00:43:14.760 --> 00:43:15.600]   fine tune afterwards.
[00:43:15.600 --> 00:43:16.840]   Like you just can't do that.
[00:43:16.840 --> 00:43:18.240]   I think there's truth there, but like,
[00:43:18.240 --> 00:43:19.080]   that's also be realistic.
[00:43:19.080 --> 00:43:20.920]   Like the stuff that's coming out for the third model
[00:43:20.920 --> 00:43:23.200]   providers like cascade and winsurf would not have been
[00:43:23.200 --> 00:43:26.480]   possible if it wasn't for the rapid improvements with
[00:43:26.480 --> 00:43:27.640]   4.0 and 3.5 song.
[00:43:27.640 --> 00:43:29.120]   Like that just wouldn't have been possible.
[00:43:29.120 --> 00:43:31.000]   So I'll give myself a B minus.
[00:43:31.000 --> 00:43:33.000]   I'll say I passed, but yes.
[00:43:33.000 --> 00:43:36.040]   - I don't think, just to be clear, we're not grading.
[00:43:36.040 --> 00:43:38.840]   It's more of a, what would you, you know,
[00:43:38.840 --> 00:43:40.920]   but where are they now, you know, what would you add it?
[00:43:40.920 --> 00:43:41.840]   What would you like?
[00:43:41.840 --> 00:43:43.600]   - Yeah, I mean, like that first post, right?
[00:43:43.600 --> 00:43:45.440]   Like that was when we had literally had,
[00:43:45.440 --> 00:43:47.720]   I think that was like a few weeks after we had launched
[00:43:47.720 --> 00:43:48.560]   Chodeon.
[00:43:48.560 --> 00:43:50.360]   I think that's like, you know, so we're talking like,
[00:43:50.360 --> 00:43:51.920]   maybe we can write this cause we're like one of the first
[00:43:51.920 --> 00:43:53.280]   products that people can actually use in the AI.
[00:43:53.280 --> 00:43:54.120]   That's cool.
[00:43:54.120 --> 00:43:56.480]   - I specifically like the co-pilot for X thing.
[00:43:56.480 --> 00:43:57.800]   Cause everyone is so hot.
[00:43:57.800 --> 00:43:58.640]   Like everyone wanted to do co-pilot.
[00:43:58.640 --> 00:43:59.840]   - Everyone was just like, you know,
[00:43:59.840 --> 00:44:01.800]   chat to PT, that's all that was.
[00:44:01.800 --> 00:44:03.360]   So, but I think like, you know,
[00:44:03.360 --> 00:44:04.880]   that we didn't have an enterprise product.
[00:44:04.880 --> 00:44:06.640]   I don't even think we were like necessarily thinking
[00:44:06.640 --> 00:44:08.440]   of an enterprise product at that point, right?
[00:44:08.440 --> 00:44:11.000]   So like all of the learnings that like, you know,
[00:44:11.000 --> 00:44:12.720]   we've had from the enterprise perspective,
[00:44:12.720 --> 00:44:13.960]   which is why I loved coming back
[00:44:13.960 --> 00:44:16.400]   for like a third time now and on the blog.
[00:44:16.400 --> 00:44:18.760]   Some of those, I think we kind of like figured,
[00:44:18.760 --> 00:44:21.800]   some of those we just honestly walked backwards into,
[00:44:21.800 --> 00:44:23.200]   had to get lucky a lot of the ways.
[00:44:23.200 --> 00:44:26.040]   Like we had many, we just did a lot.
[00:44:26.040 --> 00:44:28.280]   Like there's so many of like opportunities and deals
[00:44:28.280 --> 00:44:30.480]   that we had that we like lost for a variety of reasons
[00:44:30.480 --> 00:44:31.920]   that we had to like learn from.
[00:44:31.920 --> 00:44:34.280]   There's just so much more to add that there's no way
[00:44:34.280 --> 00:44:35.760]   I would have gotten that right in trying to try to.
[00:44:35.760 --> 00:44:37.760]   - Can I mention one thing that I think is,
[00:44:37.760 --> 00:44:39.880]   hopefully this is not very controversial,
[00:44:39.880 --> 00:44:42.080]   but it's like true about our engineering team as a whole.
[00:44:42.080 --> 00:44:45.160]   I don't think most of us got much value from Chaju BTF.
[00:44:45.160 --> 00:44:47.000]   Largely because I think the problem was,
[00:44:47.000 --> 00:44:49.000]   and this is maybe a little bit of a different thing,
[00:44:49.000 --> 00:44:51.000]   it's like a lot of the engineers at the company
[00:44:51.000 --> 00:44:53.440]   who have been writing software for like over eight years.
[00:44:53.440 --> 00:44:54.720]   And this is not to say they know everything
[00:44:54.720 --> 00:44:56.520]   that Chaju BT knows, they don't.
[00:44:56.520 --> 00:44:58.760]   They'd already gone good enough
[00:44:58.760 --> 00:45:00.960]   at searching for Stack Overflow.
[00:45:00.960 --> 00:45:04.080]   Invested a lot in searching code base, right?
[00:45:04.080 --> 00:45:06.120]   They can very quickly grab through the code.
[00:45:06.120 --> 00:45:07.600]   Incredibly fast, like every tool.
[00:45:07.600 --> 00:45:10.280]   And they've spent like eight years mastering that skill.
[00:45:10.280 --> 00:45:12.280]   And Chaju BT being this thing on the side
[00:45:12.280 --> 00:45:14.080]   that you need to provide a lot of context to.
[00:45:14.080 --> 00:45:16.800]   We were not able to actually get like my co-founder
[00:45:16.800 --> 00:45:18.800]   just basically never used Chaju BTF at all.
[00:45:18.800 --> 00:45:19.920]   Literally never did.
[00:45:19.920 --> 00:45:21.960]   And because of that, probably at the time,
[00:45:21.960 --> 00:45:25.080]   one of our incorrect sort of assumptions was probably that,
[00:45:25.080 --> 00:45:27.000]   hey, like a lot of these passive systems need to get good
[00:45:27.000 --> 00:45:27.840]   because they're always there
[00:45:27.840 --> 00:45:29.680]   and these active systems are gonna be behind.
[00:45:29.680 --> 00:45:32.120]   I think actually, Cascade was the big thing.
[00:45:32.120 --> 00:45:34.000]   Is there a company where everyone is now using?
[00:45:34.000 --> 00:45:35.760]   Literally everyone, biggest skeptics.
[00:45:35.760 --> 00:45:36.920]   And we have a lot of people at the company
[00:45:36.920 --> 00:45:38.400]   that are skeptical of AI.
[00:45:38.400 --> 00:45:39.240]   - I think this is actually--
[00:45:39.240 --> 00:45:40.080]   - Why did I hire them?
[00:45:40.080 --> 00:45:42.280]   - No, I think, here's the important thing.
[00:45:42.280 --> 00:45:44.120]   Those people that were skeptical about AI
[00:45:44.120 --> 00:45:46.000]   previously worked in autonomous vehicles.
[00:45:46.000 --> 00:45:47.200]   These are not crypto people.
[00:45:47.200 --> 00:45:49.160]   These are people that care about technology
[00:45:49.160 --> 00:45:50.400]   and want to work on the future.
[00:45:50.400 --> 00:45:52.640]   Their bar for good is just very high.
[00:45:52.640 --> 00:45:55.600]   They will not form a cult of, this is awesome,
[00:45:55.600 --> 00:45:56.520]   this is gonna change the world.
[00:45:56.520 --> 00:45:58.120]   They were not gonna be the kind of people on Twitter
[00:45:58.120 --> 00:45:58.960]   that are like--
[00:45:58.960 --> 00:45:59.800]   - Wag me.
[00:45:59.800 --> 00:46:00.880]   - Yeah, this changes everything.
[00:46:00.880 --> 00:46:02.420]   Like, software as we know it is dead.
[00:46:02.420 --> 00:46:04.720]   No, there are people that are gonna be incredibly honest.
[00:46:04.720 --> 00:46:07.440]   And we know if we hit the bar that is good for them,
[00:46:07.440 --> 00:46:08.680]   we found something special.
[00:46:08.680 --> 00:46:10.200]   And I think at that time,
[00:46:10.200 --> 00:46:12.240]   we probably had a lot of sentiment like that.
[00:46:12.240 --> 00:46:13.640]   That has changed a lot now.
[00:46:13.640 --> 00:46:15.640]   And I think it's actually important that you have
[00:46:15.640 --> 00:46:18.200]   believers that are incredibly future looking
[00:46:18.200 --> 00:46:20.080]   and people that kind of reined it.
[00:46:20.080 --> 00:46:21.480]   'Cause otherwise you just have,
[00:46:21.480 --> 00:46:23.040]   you know, this is like autonomous vehicles.
[00:46:23.040 --> 00:46:25.320]   You have a very discreet problem.
[00:46:25.320 --> 00:46:27.120]   People are just working in a vacuum
[00:46:27.120 --> 00:46:29.720]   and there's no signal to kind of bring you down to reality.
[00:46:29.720 --> 00:46:31.880]   But you have no good way to kill ideas.
[00:46:31.880 --> 00:46:33.560]   And there are a lot of ideas we're gonna come up with
[00:46:33.560 --> 00:46:34.960]   that are just terrible ideas.
[00:46:34.960 --> 00:46:36.320]   But we need to come up with terrible ideas.
[00:46:36.320 --> 00:46:37.960]   Otherwise, like, how does anything good come on?
[00:46:37.960 --> 00:46:39.160]   And I don't wanna call these skeptics.
[00:46:39.160 --> 00:46:40.680]   Skeptics suggest that they don't know.
[00:46:40.680 --> 00:46:41.720]   They're realists.
[00:46:41.720 --> 00:46:43.320]   They're the type of people that when they see
[00:46:43.320 --> 00:46:45.760]   waitlist on a product online, they just will not believe it.
[00:46:45.760 --> 00:46:47.120]   They will not think about it at all.
[00:46:47.120 --> 00:46:48.960]   - Kudos for launching without a waitlist, yeah.
[00:46:48.960 --> 00:46:51.560]   - Yeah, by the way, we will never launch with a waitlist.
[00:46:51.560 --> 00:46:52.600]   We will never launch with a waitlist.
[00:46:52.600 --> 00:46:53.680]   So that's the thing at the company.
[00:46:53.680 --> 00:46:55.360]   We'd much rather be a company that's considered
[00:46:55.360 --> 00:46:58.560]   the boring company than a company that launches once in a while
[00:46:58.560 --> 00:46:59.400]   and like, hopefully it's good.
[00:46:59.400 --> 00:47:00.800]   - My joke is,
[00:47:00.800 --> 00:47:02.920]   generative AI has really gotten really good
[00:47:02.920 --> 00:47:04.080]   at generating waitlists.
[00:47:04.080 --> 00:47:04.920]   - Yeah.
[00:47:04.920 --> 00:47:05.760]   - That's really good.
[00:47:05.760 --> 00:47:07.000]   - Also, just to clarify, both of us used
[00:47:07.000 --> 00:47:09.200]   to work in a task vehicle so that it doesn't come across.
[00:47:09.200 --> 00:47:11.560]   - Oh yeah, yes, yes, yes, yes.
[00:47:11.560 --> 00:47:13.520]   - We love that technology.
[00:47:13.520 --> 00:47:14.360]   - We love it.
[00:47:14.360 --> 00:47:15.680]   Like, I love hard technology problems.
[00:47:15.680 --> 00:47:16.840]   That's what I live for.
[00:47:16.840 --> 00:47:18.240]   - Amazing.
[00:47:18.240 --> 00:47:19.720]   Just push back on the first party thing.
[00:47:19.720 --> 00:47:23.640]   I accept that the large model labs have just like done
[00:47:23.640 --> 00:47:27.040]   a lot of work for you that you didn't need to duplicate.
[00:47:27.040 --> 00:47:30.880]   But you now are sitting on so much proprietary data
[00:47:30.880 --> 00:47:34.720]   that it's maybe worth training on the trajectories
[00:47:34.720 --> 00:47:35.720]   that you're collecting.
[00:47:35.720 --> 00:47:38.280]   So maybe it's a pendulum back to first party.
[00:47:38.280 --> 00:47:39.560]   - Yeah, I mean, I think like,
[00:47:39.560 --> 00:47:40.640]   I mean, we've been pretty clear
[00:47:40.640 --> 00:47:42.200]   from like a security posture perspective.
[00:47:42.200 --> 00:47:44.280]   Like, I think there's like both like, you know,
[00:47:44.280 --> 00:47:46.160]   customer trust and like--
[00:47:46.160 --> 00:47:47.400]   - I mean, I kind of want, like let me opt in.
[00:47:47.400 --> 00:47:49.520]   - I think that there is signals that we do get
[00:47:49.520 --> 00:47:51.040]   from our users that we can utilize.
[00:47:51.040 --> 00:47:52.480]   Like there's a lot of preference information
[00:47:52.480 --> 00:47:53.320]   that we get for example.
[00:47:53.320 --> 00:47:54.440]   - Which is effectively what you're saying
[00:47:54.440 --> 00:47:55.800]   of like our trajectories.
[00:47:55.800 --> 00:47:56.640]   - Go ahead.
[00:47:56.640 --> 00:47:58.200]   - We, like I will say this,
[00:47:58.200 --> 00:47:59.720]   the super complete product that we have
[00:47:59.720 --> 00:48:01.200]   has gone materially better
[00:48:01.200 --> 00:48:03.680]   because of us not only using synthetic data,
[00:48:03.680 --> 00:48:06.200]   but also getting the preference data from our users
[00:48:06.200 --> 00:48:08.560]   of like, hey, given me a set of trajectories,
[00:48:08.560 --> 00:48:10.200]   here's actually what a good outcome is.
[00:48:10.200 --> 00:48:12.080]   And in fact, one of the really beautiful parts
[00:48:12.080 --> 00:48:14.760]   about our product that is very different than it's at GPT
[00:48:14.760 --> 00:48:17.360]   is we can not only see if the acceptance happened,
[00:48:17.360 --> 00:48:18.960]   but if something more than the acceptance happened
[00:48:18.960 --> 00:48:20.840]   and it happened even more than that, right?
[00:48:20.840 --> 00:48:22.200]   Like let's say you accepted it,
[00:48:22.200 --> 00:48:23.240]   but then after accepting it,
[00:48:23.240 --> 00:48:25.720]   you deleted three or four items in there.
[00:48:25.720 --> 00:48:26.800]   We can see that.
[00:48:26.800 --> 00:48:28.080]   So that actually lets us get
[00:48:28.080 --> 00:48:31.920]   to even better than than acceptance as a metric.
[00:48:31.920 --> 00:48:35.080]   Because we're in the ultimate work output of the developer.
[00:48:35.080 --> 00:48:36.600]   - It's the preference between the acceptance
[00:48:36.600 --> 00:48:37.520]   and what actually happened.
[00:48:37.520 --> 00:48:38.960]   If you can actually get ground truth
[00:48:38.960 --> 00:48:40.160]   at what actually happened,
[00:48:40.160 --> 00:48:41.680]   this is the beauty of being an ID,
[00:48:41.680 --> 00:48:43.600]   then like, yeah, you get a lot of lot of information there.
[00:48:43.600 --> 00:48:46.760]   - Did you get it with the extension or is this pure windsurf?
[00:48:46.760 --> 00:48:48.000]   - We had this with the extension.
[00:48:48.000 --> 00:48:49.160]   - Yeah, okay, great.
[00:48:49.160 --> 00:48:50.640]   The windsurf just gives you more of the ID.
[00:48:50.640 --> 00:48:51.480]   - Yes.
[00:48:51.480 --> 00:48:54.120]   So that means you can also start getting more information.
[00:48:54.120 --> 00:48:56.320]   Like for instance, the basic thing that Untrel said,
[00:48:56.320 --> 00:48:58.760]   we can see if like a file explorer was open.
[00:48:58.760 --> 00:49:00.280]   It's actually just a piece of information
[00:49:00.280 --> 00:49:01.880]   we just cannot see previously.
[00:49:01.880 --> 00:49:02.720]   - Sure, yeah.
[00:49:02.720 --> 00:49:05.000]   - A lot of intent in there, a lot of intent.
[00:49:05.000 --> 00:49:05.840]   - Second one.
[00:49:05.840 --> 00:49:06.680]   - Oh boy.
[00:49:06.680 --> 00:49:07.880]   - How to make a UX remote.
[00:49:07.880 --> 00:49:10.560]   - Oh man, isn't that funny that we now created
[00:49:10.560 --> 00:49:12.200]   like the full UX experience of an ID?
[00:49:12.200 --> 00:49:14.240]   I think that one is pretty accurate.
[00:49:14.240 --> 00:49:15.080]   - It was an A?
[00:49:15.080 --> 00:49:16.240]   - I think that one I'll give myself.
[00:49:16.240 --> 00:49:18.880]   I think like we were doing that within the extension.
[00:49:18.880 --> 00:49:19.720]   I still think that's true
[00:49:19.720 --> 00:49:20.720]   within the extensions as well, right?
[00:49:20.720 --> 00:49:22.960]   Like we got very, very creative with things.
[00:49:22.960 --> 00:49:24.760]   Like we weren't mentioning the idea of just like,
[00:49:24.760 --> 00:49:26.880]   essentially rendering images to display things.
[00:49:26.880 --> 00:49:28.640]   Like we get creative to figure out
[00:49:28.640 --> 00:49:29.880]   what the right UX is doing there.
[00:49:29.880 --> 00:49:32.280]   Like we could create a really like dumb UX
[00:49:32.280 --> 00:49:33.720]   that's like a side panel, like whatever.
[00:49:33.720 --> 00:49:36.040]   Like, but actually going the extra mile
[00:49:36.040 --> 00:49:38.960]   does make that experience as good as it possibly can there.
[00:49:38.960 --> 00:49:40.600]   But yeah, now like look at some of the UX
[00:49:40.600 --> 00:49:42.800]   that we're able to build in like in windsurf
[00:49:42.800 --> 00:49:44.480]   and it's just like, it's fun.
[00:49:44.480 --> 00:49:46.400]   The first time I saw,
[00:49:46.400 --> 00:49:48.320]   'cause now we can do command in the terminal.
[00:49:48.320 --> 00:49:50.480]   Like you can not have to search for a bashman.
[00:49:50.480 --> 00:49:52.360]   The first time I saw that, I was like,
[00:49:52.360 --> 00:49:53.200]   I just started smiling.
[00:49:53.200 --> 00:49:55.200]   And like it's like, it's not like cascade.
[00:49:55.200 --> 00:49:56.480]   It's not like an agentic system right in the lab.
[00:49:56.480 --> 00:49:58.160]   But I'm like, that is just a very, very clear.
[00:49:58.160 --> 00:50:00.000]   - We really couldn't do that in VS Code.
[00:50:00.000 --> 00:50:01.120]   - Yeah, I understand that.
[00:50:01.120 --> 00:50:05.280]   Yeah, I've even went to a 60 line bash command called Please
[00:50:05.280 --> 00:50:07.120]   and you can, you know, do that.
[00:50:07.120 --> 00:50:07.960]   It's like, yeah. - Oh wow.
[00:50:07.960 --> 00:50:08.800]   That's cool.
[00:50:08.800 --> 00:50:10.120]   - Yeah, so please English and energy.
[00:50:10.120 --> 00:50:11.080]   - You know, that's actually really cool
[00:50:11.080 --> 00:50:13.400]   because one of the things I think we believe in
[00:50:13.400 --> 00:50:15.880]   is actually I like products like autocomplete
[00:50:15.880 --> 00:50:18.360]   more than command purely because I don't even want
[00:50:18.360 --> 00:50:19.760]   to open anything up.
[00:50:19.760 --> 00:50:21.520]   So that thing where I just can type
[00:50:21.520 --> 00:50:23.120]   and not have to press some button shortcuts
[00:50:23.120 --> 00:50:24.240]   to go in a different place.
[00:50:24.240 --> 00:50:25.120]   I actually like that too.
[00:50:25.120 --> 00:50:28.280]   - Yeah, and I actually adopted warp, the terminal warp,
[00:50:28.280 --> 00:50:30.200]   initially for that, 'cause they gave that away for free.
[00:50:30.200 --> 00:50:31.040]   - Wow.
[00:50:31.040 --> 00:50:31.880]   - But now it's everywhere.
[00:50:31.880 --> 00:50:34.200]   So like I can turn off a warp and not give Sequoia
[00:50:34.200 --> 00:50:35.720]   my bash commands.
[00:50:35.720 --> 00:50:37.680]   (laughing)
[00:50:37.680 --> 00:50:38.520]   - I don't know.
[00:50:38.520 --> 00:50:40.880]   (laughing)
[00:50:40.880 --> 00:50:41.920]   - No, I use work.
[00:50:41.920 --> 00:50:43.880]   No, no, look, I use work.
[00:50:43.880 --> 00:50:44.720]   Okay, I don't know.
[00:50:44.720 --> 00:50:45.560]   Gotta go on around.
[00:50:45.560 --> 00:50:46.960]   Hopefully somebody will work.
[00:50:46.960 --> 00:50:48.680]   This is like war product feedback.
[00:50:48.680 --> 00:50:50.760]   But they basically had this thing where you can do
[00:50:50.760 --> 00:50:53.400]   kind of like pound and then write in natural language.
[00:50:53.400 --> 00:50:54.400]   - Yeah, you do, okay.
[00:50:54.400 --> 00:50:56.840]   - But then they have also the auto infer
[00:50:56.840 --> 00:50:58.920]   of what your typing is in natural language
[00:50:58.920 --> 00:50:59.880]   and those are different.
[00:50:59.880 --> 00:51:00.800]   When you do the pound,
[00:51:00.800 --> 00:51:03.360]   it's only like it gives you a predetermined command.
[00:51:03.360 --> 00:51:05.800]   When you like talk to it, it generates a flow.
[00:51:05.800 --> 00:51:06.640]   - Okay.
[00:51:06.640 --> 00:51:08.280]   - It's a bit confusing of a UX.
[00:51:08.280 --> 00:51:10.040]   But go back to your post.
[00:51:10.040 --> 00:51:11.560]   You had the three piece.
[00:51:11.560 --> 00:51:12.400]   - Yes.
[00:51:12.400 --> 00:51:13.240]   - Of a UX.
[00:51:13.240 --> 00:51:16.240]   - And present, practical, powerful.
[00:51:16.240 --> 00:51:17.240]   - Actually, that was really good.
[00:51:17.240 --> 00:51:18.080]   I liked it.
[00:51:18.080 --> 00:51:22.120]   - And I think in the beginning being present was enough.
[00:51:22.120 --> 00:51:24.360]   Even when you launch, it's like, oh, you have AI,
[00:51:24.360 --> 00:51:26.160]   like the school, other people don't have it.
[00:51:26.160 --> 00:51:29.200]   Do you think we're still in the practical
[00:51:29.200 --> 00:51:31.280]   where the experience is actually...
[00:51:31.280 --> 00:51:33.880]   The model doesn't even need to be that powerful,
[00:51:33.880 --> 00:51:35.960]   just having better experience is enough.
[00:51:35.960 --> 00:51:39.440]   Or do you think really being able to do the whole...
[00:51:39.440 --> 00:51:40.800]   Because your point was like,
[00:51:40.800 --> 00:51:43.120]   you're powerful when you generate a lot of value
[00:51:43.120 --> 00:51:45.120]   for the customer, you're practical
[00:51:45.120 --> 00:51:47.600]   when you're basically wrapping it in a nicer way.
[00:51:47.600 --> 00:51:48.800]   - Yeah, where are we in the market today?
[00:51:48.800 --> 00:51:50.160]   - I think there's always going to be room
[00:51:50.160 --> 00:51:52.240]   for practical UX, like getting it.
[00:51:52.240 --> 00:51:53.480]   I mean, the command terminal,
[00:51:53.480 --> 00:51:55.080]   that's like a very practical UX, right?
[00:51:55.080 --> 00:51:57.480]   Like, I do think with things like cascade
[00:51:57.480 --> 00:51:58.400]   in these agentics systems,
[00:51:58.400 --> 00:52:00.800]   like we are starting to get onto powerful.
[00:52:00.800 --> 00:52:02.760]   'Cause like, there's so many pieces,
[00:52:02.760 --> 00:52:04.360]   like from a UX perspective,
[00:52:04.360 --> 00:52:05.560]   that make cascade really good.
[00:52:05.560 --> 00:52:08.040]   Like, it's really like micro things
[00:52:08.040 --> 00:52:09.680]   that are like just all over the place.
[00:52:09.680 --> 00:52:11.520]   But as, you know, we're streaming in,
[00:52:11.520 --> 00:52:12.800]   we're showing like the changes.
[00:52:12.800 --> 00:52:15.560]   We're like allowing you to jump in open diffs and see it.
[00:52:15.560 --> 00:52:17.440]   We can run background terminal commands.
[00:52:17.440 --> 00:52:20.160]   We can see what's running background processes are running.
[00:52:20.160 --> 00:52:22.240]   Like, there's all these small UX things
[00:52:22.240 --> 00:52:25.600]   that together come to a really powerful and intuitive UX.
[00:52:25.600 --> 00:52:27.480]   I think we're starting to get there.
[00:52:27.480 --> 00:52:29.520]   It's definitely just a start.
[00:52:29.520 --> 00:52:30.640]   And that's why we're so excited
[00:52:30.640 --> 00:52:32.240]   about where all this is going to go.
[00:52:32.240 --> 00:52:33.760]   I think we're starting to see the glimpse of it.
[00:52:33.760 --> 00:52:34.680]   I'm excited.
[00:52:34.680 --> 00:52:36.200]   It's going to be a whole new blog, yeah.
[00:52:36.200 --> 00:52:37.480]   - Yeah, awesome.
[00:52:37.480 --> 00:52:39.360]   First of all, it's just been really nice to work with you.
[00:52:39.360 --> 00:52:43.120]   It's, you know, I do work with a number of guest posters
[00:52:43.120 --> 00:52:45.520]   and, you know, not everyone makes it through the city end
[00:52:45.520 --> 00:52:47.280]   and nobody else has done it three times.
[00:52:47.280 --> 00:52:48.960]   So kudos.
[00:52:48.960 --> 00:52:50.560]   - We remember Patrick.
[00:52:50.560 --> 00:52:55.160]   - This one was more like the money one, which, you know,
[00:52:55.160 --> 00:52:57.840]   it's funny because I think the developers are like
[00:52:57.840 --> 00:52:59.960]   quite uninterested in money.
[00:52:59.960 --> 00:53:01.200]   Isn't it weird?
[00:53:01.200 --> 00:53:02.360]   - Yeah, I mean, I think like,
[00:53:02.360 --> 00:53:04.640]   I don't know if this is just the nature of our company.
[00:53:04.640 --> 00:53:06.720]   Like, I think there's something we said, like,
[00:53:06.720 --> 00:53:08.360]   there's all like the San Francisco AI companies.
[00:53:08.360 --> 00:53:10.200]   And like everyone's like hyping each other like on the tech
[00:53:10.200 --> 00:53:11.040]   and everything, which is like great.
[00:53:11.040 --> 00:53:12.120]   The tech's really important.
[00:53:12.120 --> 00:53:14.200]   We're here in Mountain View, beautiful office.
[00:53:14.200 --> 00:53:15.680]   - We just really care about like actually
[00:53:15.680 --> 00:53:17.440]   driving down here to keep running,
[00:53:17.440 --> 00:53:20.600]   which is kind of like a core part of the company.
[00:53:20.600 --> 00:53:23.240]   - I think maybe the selfish way of saying that
[00:53:23.240 --> 00:53:25.240]   or like a little more of the selfless way is like,
[00:53:25.240 --> 00:53:29.000]   yeah, we can be kind of like this VC funded company forever.
[00:53:29.000 --> 00:53:30.680]   But ultimately speaking, you know,
[00:53:30.680 --> 00:53:33.360]   if we actually want to transform the way software happens,
[00:53:33.360 --> 00:53:36.080]   we need this part of the business that's cash-renewative
[00:53:36.080 --> 00:53:38.400]   that enables us to actually invest tremendously
[00:53:38.400 --> 00:53:41.240]   in the software and that needs to be durable cash,
[00:53:41.240 --> 00:53:43.360]   be cash that like churns the next year.
[00:53:43.360 --> 00:53:46.200]   And we want to set ourselves up to be a company
[00:53:46.200 --> 00:53:49.840]   that is durable and can actually solve these problems.
[00:53:49.840 --> 00:53:50.680]   - Yeah, yeah, excellent.
[00:53:50.680 --> 00:53:53.080]   So for people, obviously we're going to link in the show notes
[00:53:53.080 --> 00:53:56.800]   but for people who are listening to this for the first time,
[00:53:56.800 --> 00:53:59.120]   but I had a lot of trouble naming this piece.
[00:53:59.120 --> 00:54:01.000]   So we originally called it,
[00:54:01.000 --> 00:54:03.240]   you had like how to make money something.
[00:54:03.240 --> 00:54:06.000]   - I, it was super pretty.
[00:54:06.000 --> 00:54:08.600]   - I apologize, I was super pretty.
[00:54:08.600 --> 00:54:10.720]   I was, I think I was like ready for that thing,
[00:54:10.720 --> 00:54:12.000]   like on a plane flight.
[00:54:12.000 --> 00:54:12.840]   - So I apologize for that.
[00:54:12.840 --> 00:54:14.120]   - No, you had like three dollars in the candle.
[00:54:14.120 --> 00:54:15.480]   - Oh, I absolutely had three dollars in the candle.
[00:54:15.480 --> 00:54:17.080]   - I was like, I can't do that.
[00:54:17.080 --> 00:54:18.720]   So it's either building it for the enterprise
[00:54:18.720 --> 00:54:20.040]   and then I also said the worst,
[00:54:20.040 --> 00:54:21.720]   the most dangerous thing I can start to do
[00:54:21.720 --> 00:54:22.840]   is build for other AI startups,
[00:54:22.840 --> 00:54:24.760]   which I think both of you will go sign.
[00:54:24.760 --> 00:54:26.640]   And I think basically the main thesis
[00:54:26.640 --> 00:54:29.120]   which I really liked was like go slow to go fast.
[00:54:29.120 --> 00:54:33.040]   Like here's the, if you actually build for like security,
[00:54:33.040 --> 00:54:35.160]   compliance, personalization, usage analytics,
[00:54:35.160 --> 00:54:37.760]   latency budgets and scale from the start,
[00:54:37.760 --> 00:54:40.080]   then you're going to pay that cost now,
[00:54:40.080 --> 00:54:42.320]   but eventually it's going to pay off in the long run.
[00:54:42.320 --> 00:54:46.360]   And this is the actual insight you cannot do this later.
[00:54:46.360 --> 00:54:49.120]   Like if you build the easy thing for us as an MVP,
[00:54:49.120 --> 00:54:50.360]   it's like, yeah, I like just ship it
[00:54:50.360 --> 00:54:52.520]   with like whatever is easy to do.
[00:54:52.520 --> 00:54:55.240]   And then you tack on the enterpriseready.io
[00:54:55.240 --> 00:54:57.160]   set of like 12 things that you have.
[00:54:57.160 --> 00:54:58.640]   You actually end up with a different product
[00:54:58.640 --> 00:55:00.440]   or you end up worse off
[00:55:00.440 --> 00:55:01.680]   than if you had started from the beginning.
[00:55:01.680 --> 00:55:03.720]   So that I had never heard before.
[00:55:03.720 --> 00:55:05.840]   - Yeah, I mean, we see that like repeatedly.
[00:55:05.840 --> 00:55:08.840]   I mean, just like right now, here we have a lot of customers
[00:55:08.840 --> 00:55:10.440]   and like the defense space, for example,
[00:55:10.440 --> 00:55:11.800]   we're going through, you know,
[00:55:11.800 --> 00:55:13.760]   FedRAMP accreditation right now.
[00:55:13.760 --> 00:55:16.840]   And people that we're working with, they saw like all the fact
[00:55:16.840 --> 00:55:18.960]   like, oh yeah, we already have a containerized system.
[00:55:18.960 --> 00:55:21.240]   We can already like deploy in these manners.
[00:55:21.240 --> 00:55:23.140]   We can already do like, we've already gone through like
[00:55:23.140 --> 00:55:23.980]   security clips.
[00:55:23.980 --> 00:55:25.720]   They're like, oh, you guys are going to have
[00:55:25.720 --> 00:55:27.640]   a much easier time doing this, right?
[00:55:27.640 --> 00:55:29.000]   Then most companies that are just like, okay,
[00:55:29.000 --> 00:55:30.240]   we have like a big SaaS blob
[00:55:30.240 --> 00:55:31.920]   and now we need to like do all these things.
[00:55:31.920 --> 00:55:33.320]   It might sound like a really deep thing.
[00:55:33.320 --> 00:55:34.840]   I think like it's just anyone who's like worked
[00:55:34.840 --> 00:55:36.840]   like, you know, for like an extended period of time
[00:55:36.840 --> 00:55:39.200]   like a company, like on a certain project
[00:55:39.200 --> 00:55:41.320]   has probably seen this happen, right?
[00:55:41.320 --> 00:55:43.280]   Like the technology just keeps on improving.
[00:55:43.280 --> 00:55:45.320]   And then you realize that like you have to have now
[00:55:45.320 --> 00:55:46.640]   like re-architect your whole system
[00:55:46.640 --> 00:55:47.480]   to get something improving.
[00:55:47.480 --> 00:55:49.720]   Like just making that kind of change
[00:55:49.720 --> 00:55:51.520]   when you've invested so much effort.
[00:55:51.520 --> 00:55:53.320]   Like people have like, for an hour,
[00:55:53.320 --> 00:55:54.280]   is there emotionally invested?
[00:55:54.280 --> 00:55:57.200]   Whatever it might be, it's really hard to make that change.
[00:55:57.200 --> 00:55:59.520]   So I'm sure we're going to hit that also.
[00:55:59.520 --> 00:56:02.600]   Like, yes, I think we've done things a little bit earlier
[00:56:02.600 --> 00:56:03.840]   than most companies.
[00:56:03.840 --> 00:56:05.360]   I think we're going to hit points
[00:56:05.360 --> 00:56:06.680]   where we're going to see parts of our systems
[00:56:06.680 --> 00:56:09.080]   where like, we really need to re-architect that actually.
[00:56:09.080 --> 00:56:10.720]   We've definitely hit that already, right?
[00:56:10.720 --> 00:56:13.040]   And I think that's just like at like the project level,
[00:56:13.040 --> 00:56:15.720]   the product level or is that like your whole company?
[00:56:15.720 --> 00:56:17.800]   And I think the thesis behind here is like,
[00:56:17.800 --> 00:56:20.240]   to some degree your company needs to add this DNA
[00:56:20.240 --> 00:56:21.240]   from the beginning.
[00:56:21.240 --> 00:56:23.480]   And I think then you'll be able to go through those bumps
[00:56:23.480 --> 00:56:26.360]   a lot more smoother and be able to drive the valley.
[00:56:26.360 --> 00:56:27.200]   And I've learned--
[00:56:27.200 --> 00:56:28.760]   - Yeah, can I say two points?
[00:56:28.760 --> 00:56:31.040]   So first point I'd like to say is,
[00:56:31.040 --> 00:56:32.160]   this is something that me and Douglas
[00:56:32.160 --> 00:56:33.720]   might co-founder talk about a lot.
[00:56:33.720 --> 00:56:36.880]   It's like, there's this constant thing of like build versus buy.
[00:56:36.880 --> 00:56:38.720]   I think the answer is like, a lot of the time
[00:56:38.720 --> 00:56:39.920]   the answer should be buy, right?
[00:56:39.920 --> 00:56:41.880]   Like, we're not going to go build our own sales tool.
[00:56:41.880 --> 00:56:43.400]   Should go buy a sales source, right?
[00:56:43.400 --> 00:56:44.280]   That's kind of dumb.
[00:56:44.280 --> 00:56:45.400]   That's undifferentiated.
[00:56:45.400 --> 00:56:48.120]   And the reason why you go with buy instead of build is,
[00:56:48.120 --> 00:56:51.160]   hey, like look, the ROI of what exists out there is good.
[00:56:51.160 --> 00:56:52.920]   From like an opportunity cost standpoint,
[00:56:52.920 --> 00:56:55.160]   it's better to actually go out and buy it
[00:56:55.160 --> 00:56:56.720]   than build it and do a shittier job, right?
[00:56:56.720 --> 00:56:58.080]   There's a company that's actually going out
[00:56:58.080 --> 00:56:59.080]   and focused on that.
[00:56:59.080 --> 00:57:00.480]   But here's the hidden thing that I think
[00:57:00.480 --> 00:57:02.720]   is like really important when you go out and buy.
[00:57:02.720 --> 00:57:04.920]   You're losing a core competency inside the company.
[00:57:04.920 --> 00:57:07.400]   And that's a core competency you can never get.
[00:57:07.400 --> 00:57:09.760]   Or it's very hard, like startups are so limited on time.
[00:57:09.760 --> 00:57:11.960]   Let me just say, like, let's say as a company,
[00:57:11.960 --> 00:57:15.160]   we did not invest in our model inference.
[00:57:15.160 --> 00:57:17.600]   Yeah, we have like a custom inference runtime.
[00:57:17.600 --> 00:57:18.720]   We give that up right now.
[00:57:18.720 --> 00:57:20.320]   We will never get it back.
[00:57:20.320 --> 00:57:22.360]   It's going to be very hard to get it back, right?
[00:57:22.360 --> 00:57:25.000]   - You can't just use VLM and tell us our deal.
[00:57:25.000 --> 00:57:27.000]   - I mean, that would be our only option.
[00:57:27.000 --> 00:57:29.160]   - Or just let me put it, if we use VLM,
[00:57:29.160 --> 00:57:31.120]   we would not be talking with you right now.
[00:57:31.120 --> 00:57:32.760]   Like, yeah, we would have, we would have, yeah.
[00:57:32.760 --> 00:57:35.120]   But the point is, there's more a question of like,
[00:57:35.120 --> 00:57:36.400]   like, you know, I tried to think about it
[00:57:36.400 --> 00:57:37.240]   from first minutes was like,
[00:57:37.240 --> 00:57:38.760]   Google's a great company makes a lot of money.
[00:57:38.760 --> 00:57:40.520]   What happens if they actually made the search index
[00:57:40.520 --> 00:57:42.400]   of the product something that someone else built for them?
[00:57:42.400 --> 00:57:43.240]   It's like, they could.
[00:57:43.240 --> 00:57:45.040]   Maybe someone else could have done a good job.
[00:57:45.040 --> 00:57:46.640]   Maybe that's like a bad example.
[00:57:46.640 --> 00:57:49.240]   But like, particularly because Google is a search index,
[00:57:49.240 --> 00:57:51.760]   but like, tough luck getting that core competency back.
[00:57:51.760 --> 00:57:53.040]   You've lost it, right?
[00:57:53.040 --> 00:57:54.920]   And I think for us, it's more a question of like,
[00:57:54.920 --> 00:57:57.640]   what core competencies do we need inside the business?
[00:57:57.640 --> 00:57:59.320]   And yeah, like sometimes it's painful.
[00:57:59.320 --> 00:58:01.200]   Like sometimes actually like some of these core competencies
[00:58:01.200 --> 00:58:03.200]   that are annoying, sometimes we'll be behind,
[00:58:03.200 --> 00:58:04.720]   behind what exists out there, right?
[00:58:04.720 --> 00:58:05.840]   And we need, just to be very honest,
[00:58:05.840 --> 00:58:08.240]   that's where the true seekingness of the company matters.
[00:58:08.240 --> 00:58:11.440]   Like, are we really honest about this core competency?
[00:58:11.440 --> 00:58:12.640]   Can we actually keep up?
[00:58:12.640 --> 00:58:14.200]   The answer is we truly can't keep up
[00:58:14.200 --> 00:58:15.280]   than why are we keeping up with this right?
[00:58:15.280 --> 00:58:16.560]   We should just buy, right?
[00:58:16.560 --> 00:58:17.680]   Like, let's not build.
[00:58:17.680 --> 00:58:19.320]   The answer is we can and we think that this will
[00:58:19.320 --> 00:58:21.320]   differentially make our company a better company
[00:58:21.320 --> 00:58:23.560]   in the long term than the answers we need to.
[00:58:23.560 --> 00:58:25.520]   We need to because like, the race is not one
[00:58:25.520 --> 00:58:26.360]   in the next year.
[00:58:26.360 --> 00:58:28.080]   The race is one over the next like five, 10 years, right?
[00:58:28.080 --> 00:58:29.200]   Maybe even longer, right?
[00:58:29.200 --> 00:58:30.560]   So that's like, that's maybe one thing.
[00:58:30.560 --> 00:58:32.560]   And then the second thing actually from like
[00:58:32.560 --> 00:58:33.720]   the enterprise standpoint,
[00:58:33.720 --> 00:58:36.280]   I think one of the unique parts of the company is now is
[00:58:36.280 --> 00:58:38.160]   we have like both this individual and enterprise
[00:58:38.160 --> 00:58:40.520]   that usually companies stick to one or the other.
[00:58:40.520 --> 00:58:42.760]   And I think that needs to be part of the DNA,
[00:58:42.760 --> 00:58:45.200]   I think kind of early on in the company as, as UNTRL said,
[00:58:45.200 --> 00:58:47.240]   I mean, there's stories of companies like Dropbox
[00:58:47.240 --> 00:58:50.160]   and stuff that tried and Dropbox is an amazing company,
[00:58:50.160 --> 00:58:52.760]   fantastic company that one of the fastest growing
[00:58:52.760 --> 00:58:54.240]   consumer companies of all time,
[00:58:54.240 --> 00:58:56.720]   consumer more on the software company of all time.
[00:58:56.720 --> 00:58:58.640]   But yeah, like when you have everyone sort of
[00:58:58.640 --> 00:59:00.360]   product oriented on the consumer side,
[00:59:00.360 --> 00:59:03.720]   the enterprise is just, it's checking off a lot of boxes
[00:59:03.720 --> 00:59:06.800]   that ultimately do not help the consumer at all,
[00:59:06.800 --> 00:59:08.240]   doesn't help your growth metrics.
[00:59:08.240 --> 00:59:10.280]   And effectively, if the original group of people
[00:59:10.280 --> 00:59:12.960]   didn't care, it's incredibly hard to get them to care
[00:59:12.960 --> 00:59:14.480]   down the line, right?
[00:59:14.480 --> 00:59:16.080]   It's incredibly hard, why do it?
[00:59:16.080 --> 00:59:17.840]   And you need to feel like, hey, this is like,
[00:59:17.840 --> 00:59:20.760]   this is an important part for the company's viability.
[00:59:20.760 --> 00:59:22.880]   So I think that there's a little bit of like
[00:59:22.880 --> 00:59:24.040]   the build versus buy part.
[00:59:24.040 --> 00:59:26.320]   And then also like the cultural DNA of the company
[00:59:26.320 --> 00:59:27.720]   that I think are both really important.
[00:59:27.720 --> 00:59:29.720]   And yeah, it's something we think about all the time.
[00:59:29.720 --> 00:59:32.040]   - I have the privilege of being friends with you guys
[00:59:32.040 --> 00:59:32.880]   off the air.
[00:59:32.880 --> 00:59:35.480]   I don't feel like, I think I know your work history,
[00:59:35.480 --> 00:59:37.200]   it's like you say cultural DNA,
[00:59:37.200 --> 00:59:39.760]   but like it's not like you've built like giant enterprise
[00:59:39.760 --> 00:59:41.640]   SaaS before, right?
[00:59:41.640 --> 00:59:44.040]   - Yeah, I think, yeah.
[00:59:44.040 --> 00:59:46.080]   - So like where are you getting this from?
[00:59:46.080 --> 00:59:49.960]   - Yeah, in fact, in fact, I think the only other sort of,
[00:59:49.960 --> 00:59:52.600]   I guess like, when I look at my previous internships,
[00:59:52.600 --> 00:59:54.280]   maybe Anshul can provide some context here,
[00:59:54.280 --> 00:59:56.120]   it's like, I worked at like LinkedIn
[00:59:56.120 --> 00:59:57.320]   and then Cora and then Databricks.
[00:59:57.320 --> 00:59:59.280]   And to be honest, like, I was not that interested
[00:59:59.280 --> 01:00:01.480]   in B2B ETL software that much.
[01:00:01.480 --> 01:00:03.440]   That's not what drives me when I wake up at night.
[01:00:03.440 --> 01:00:05.040]   So because of that, because of that,
[01:00:05.040 --> 01:00:07.520]   I decided to go work at an autonomous vehicle company
[01:00:07.520 --> 01:00:08.400]   immediately after.
[01:00:08.400 --> 01:00:11.320]   I think part of it comes down to maybe a little bit
[01:00:11.320 --> 01:00:12.800]   of the unique aspect of the company.
[01:00:12.800 --> 01:00:15.280]   And the fact that we pivoted as a company is like,
[01:00:15.280 --> 01:00:18.320]   we want to, we want to be a durable company.
[01:00:18.320 --> 01:00:19.200]   And then the question is,
[01:00:19.200 --> 01:00:20.680]   how do you work backwards from that?
[01:00:20.680 --> 01:00:22.280]   There's a lot of things about being very honest
[01:00:22.280 --> 01:00:24.160]   about what we're good at and what we're not good at.
[01:00:24.160 --> 01:00:26.600]   Like, I think surprisingly, enterprise sales is like,
[01:00:26.600 --> 01:00:27.480]   not something that like,
[01:00:27.480 --> 01:00:29.200]   it came out of the womb knowing how to do.
[01:00:29.200 --> 01:00:30.120]   I didn't really know.
[01:00:30.120 --> 01:00:31.360]   And because of that, like,
[01:00:31.360 --> 01:00:33.320]   obviously like a lot of sales happened
[01:00:33.320 --> 01:00:34.800]   between sort of folks like Anshul
[01:00:34.800 --> 01:00:37.080]   and I helping partner with companies,
[01:00:37.080 --> 01:00:39.320]   but very soon we hired actually a VP of sales
[01:00:39.320 --> 01:00:41.000]   and we've actually been deeply involved
[01:00:41.000 --> 01:00:42.280]   in the process of scaling out
[01:00:42.280 --> 01:00:43.800]   like a large good market team.
[01:00:43.800 --> 01:00:45.760]   And I think it's more a question of like,
[01:00:45.760 --> 01:00:47.040]   what matters to the company
[01:00:47.040 --> 01:00:48.280]   and how do you actually go out and build it?
[01:00:48.280 --> 01:00:50.080]   And I think one of the people that I think about a lot
[01:00:50.080 --> 01:00:51.680]   actually is someone like Alex White.
[01:00:51.680 --> 01:00:52.600]   He dropped out of college.
[01:00:52.600 --> 01:00:54.440]   He was a year younger than I said at MIT.
[01:00:54.440 --> 01:00:57.600]   And he has figured out how to constantly change
[01:00:57.600 --> 01:00:58.760]   the direction of the company.
[01:00:58.760 --> 01:01:00.240]   Effectively, it starts out as like,
[01:01:00.240 --> 01:01:01.640]   you know, human task interface
[01:01:01.640 --> 01:01:03.120]   than an AV labeling company,
[01:01:03.120 --> 01:01:04.360]   then a cataloging company,
[01:01:04.360 --> 01:01:06.560]   then now a generative AI labeling company.
[01:01:06.560 --> 01:01:08.000]   And every time the revenue of the company
[01:01:08.000 --> 01:01:09.200]   kind of goes up by a factor of 10,
[01:01:09.200 --> 01:01:10.680]   even though the business is doing something
[01:01:10.680 --> 01:01:11.520]   largely different.
[01:01:11.520 --> 01:01:12.360]   - I mean, now it's all about military contracts.
[01:01:12.360 --> 01:01:13.440]   - Yeah, now it's probably gonna be military.
[01:01:13.440 --> 01:01:15.040]   And then after that, it might be taking over the world.
[01:01:15.040 --> 01:01:17.440]   Like, he's just gonna keep increasing the stakes.
[01:01:17.440 --> 01:01:19.960]   And like, there's no playbook on how this really works.
[01:01:19.960 --> 01:01:22.360]   It's just a little bit of like, you know,
[01:01:22.360 --> 01:01:26.040]   solve a hard problem and work backwards from that, right?
[01:01:26.040 --> 01:01:27.280]   - And we'll get lucky along the way.
[01:01:27.280 --> 01:01:28.480]   Like, I don't think like,
[01:01:28.480 --> 01:01:30.560]   you think everything from first principles
[01:01:30.560 --> 01:01:31.560]   to the best of our abilities,
[01:01:31.560 --> 01:01:34.400]   but there's just so many variable unknowns that,
[01:01:34.400 --> 01:01:36.640]   yeah, like, we don't know everything that's happening
[01:01:36.640 --> 01:01:37.960]   and every company out there
[01:01:37.960 --> 01:01:40.200]   and everyone knows how fast AI space is moving.
[01:01:40.200 --> 01:01:42.800]   Like, we have to be pretty, pretty good at adopting.
[01:01:42.800 --> 01:01:44.120]   - I wanna double click on one thing,
[01:01:44.120 --> 01:01:45.720]   just because you brought it up
[01:01:45.720 --> 01:01:48.200]   and it's like a rare thing to touch on VPS sales.
[01:01:48.200 --> 01:01:50.280]   - We don't get to, actually, we talked to pretty early stage
[01:01:50.280 --> 01:01:51.120]   founders most day.
[01:01:51.120 --> 01:01:54.080]   They don't usually have a pretty built-out sales function.
[01:01:54.080 --> 01:01:58.560]   Advice, what kind of sales works in this kind of field?
[01:01:58.560 --> 01:02:00.080]   You know, what didn't work?
[01:02:00.080 --> 01:02:02.120]   You know, anything you can share with other founders.
[01:02:02.120 --> 01:02:04.560]   - I think one of the hard parts about hiring people
[01:02:04.560 --> 01:02:06.840]   in sales, and I really like Graham Unchok
[01:02:06.840 --> 01:02:09.480]   and also a test, like we have amazing VPS sales
[01:02:09.480 --> 01:02:10.320]   at the company.
[01:02:10.320 --> 01:02:12.640]   One of the things is like, if you're purely a developer,
[01:02:12.640 --> 01:02:16.080]   salespeople, their job is to like talk like really well
[01:02:16.080 --> 01:02:19.200]   from and proper. I mean, very obvious if you hear like me talk,
[01:02:19.200 --> 01:02:20.880]   like I'm not a very polished person.
[01:02:20.880 --> 01:02:22.320]   - You're pretty, by the way, I don't know that.
[01:02:22.320 --> 01:02:25.880]   - Or compared to most pure, pure salespeople.
[01:02:25.880 --> 01:02:29.240]   So actually just checking based on the way they speak
[01:02:29.240 --> 01:02:30.240]   is not that interesting.
[01:02:30.240 --> 01:02:32.520]   I think like, you know, what matters in a space like ours
[01:02:32.520 --> 01:02:34.880]   that is very quickly, moving very quickly,
[01:02:34.880 --> 01:02:36.560]   I think it's like intellectual curiosity
[01:02:36.560 --> 01:02:38.840]   is very important, intellectual horsepower,
[01:02:38.840 --> 01:02:41.360]   understanding how to build a factory.
[01:02:41.360 --> 01:02:42.520]   I'm not trying to minimize it,
[01:02:42.520 --> 01:02:45.360]   but in some ways, scales, you need to build something
[01:02:45.360 --> 01:02:47.640]   incredibly scalable here, right?
[01:02:47.640 --> 01:02:49.720]   It's almost like every year you're kind of making
[01:02:49.720 --> 01:02:52.920]   this factory twice, thrice, maybe as big, right?
[01:02:52.920 --> 01:02:54.120]   Because in some ways, you have people
[01:02:54.120 --> 01:02:56.600]   that are quarter carrying, you need some number of people
[01:02:56.600 --> 01:02:57.840]   and you need to make the math work.
[01:02:57.840 --> 01:03:00.000]   And you actually, the process of building a factory
[01:03:00.000 --> 01:03:01.560]   is not something you can just take someone
[01:03:01.560 --> 01:03:03.240]   who is a great rep at another company
[01:03:03.240 --> 01:03:04.400]   and just make them build a factory.
[01:03:04.400 --> 01:03:06.520]   Dave, this is actually a very different skill.
[01:03:06.520 --> 01:03:08.680]   How do you actually make sure you have hundreds of people
[01:03:08.680 --> 01:03:10.040]   that actually deeply understand the product?
[01:03:10.040 --> 01:03:12.120]   Actually, Unchok works very closely also
[01:03:12.120 --> 01:03:14.560]   with sales to make sure that they're enabled properly.
[01:03:14.560 --> 01:03:16.040]   Make sure that they understand the technology.
[01:03:16.040 --> 01:03:18.000]   Our technology is also changing very quickly.
[01:03:18.000 --> 01:03:20.080]   Let's maybe take an example on how our company
[01:03:20.080 --> 01:03:21.880]   is very different than a company like MongoDB.
[01:03:21.880 --> 01:03:23.360]   When you sell a product like MongoDB,
[01:03:23.360 --> 01:03:25.000]   no one at the company is interested
[01:03:25.000 --> 01:03:26.600]   in how the data is being stored.
[01:03:26.600 --> 01:03:27.960]   It's not that interesting, right?
[01:03:27.960 --> 01:03:29.960]   I love databases, I would be interested.
[01:03:29.960 --> 01:03:30.760]   But most people are like,
[01:03:30.760 --> 01:03:32.760]   solve the application problem I have at hand.
[01:03:32.760 --> 01:03:34.960]   People are curious about how our technology works.
[01:03:34.960 --> 01:03:36.600]   People are curious about RAG, right?
[01:03:36.600 --> 01:03:38.160]   People that are buying our technology.
[01:03:38.160 --> 01:03:40.080]   And imagine we had a sales team that is scaling
[01:03:40.080 --> 01:03:42.000]   where no one understands any of this stuff.
[01:03:42.000 --> 01:03:44.120]   We're not gonna be great partners to our customers.
[01:03:44.120 --> 01:03:47.160]   So how do you create almost this growing factory
[01:03:47.160 --> 01:03:49.240]   that is able to actually distribute the software
[01:03:49.240 --> 01:03:51.240]   in a way that is true to our partners?
[01:03:51.240 --> 01:03:52.160]   And also at the same time,
[01:03:52.160 --> 01:03:54.840]   like taking on all the new parts of our product, right?
[01:03:54.840 --> 01:03:56.760]   Like they're actually able to expound
[01:03:56.760 --> 01:03:57.880]   on new parts of our product.
[01:03:57.880 --> 01:04:00.240]   So sorry, that was more a statement
[01:04:00.240 --> 01:04:01.840]   of like building a scalable sales team.
[01:04:01.840 --> 01:04:03.920]   But in terms of like who you hire is,
[01:04:03.920 --> 01:04:05.440]   you just need to have a sense.
[01:04:05.440 --> 01:04:08.000]   Like in some ways, this is maybe an example
[01:04:08.000 --> 01:04:09.280]   of talk to enough people,
[01:04:09.280 --> 01:04:11.440]   find out what good looks like potentially in your category
[01:04:11.440 --> 01:04:12.920]   and find someone who's good and humble
[01:04:12.920 --> 01:04:13.760]   and willing to work with them.
[01:04:13.760 --> 01:04:14.880]   - There's generic hiring.
[01:04:14.880 --> 01:04:16.040]   - There's generic hiring.
[01:04:16.040 --> 01:04:20.480]   - I think here sales, there's sales for AI
[01:04:20.480 --> 01:04:22.280]   or sales for AI infrastructure.
[01:04:22.280 --> 01:04:25.440]   And then there's also the sales feeding into products
[01:04:25.440 --> 01:04:27.480]   in the way that we're talking about here, right?
[01:04:27.480 --> 01:04:29.840]   Where like they basically tell you what they need.
[01:04:29.840 --> 01:04:31.360]   I imagine a lot of that happened.
[01:04:31.360 --> 01:04:32.520]   - I think a lot of that happened.
[01:04:32.520 --> 01:04:35.440]   I mean, I still haven't, actually like ruined myself
[01:04:35.440 --> 01:04:37.480]   and a number of other people who are developers
[01:04:37.480 --> 01:04:38.400]   by trade engineers.
[01:04:38.400 --> 01:04:40.600]   Like we're pretty involved in the sales process
[01:04:40.600 --> 01:04:42.160]   'cause like there's a lot to learn, right?
[01:04:42.160 --> 01:04:45.160]   Like we, before we went out and hired a sales leader,
[01:04:45.160 --> 01:04:47.680]   like yeah, if all we went is like neither of us
[01:04:47.680 --> 01:04:49.960]   had ever done a sale for CoDium in our lives
[01:04:49.960 --> 01:04:51.520]   and we went and tried to find a sales leader,
[01:04:51.520 --> 01:04:53.680]   we probably would have not hired the right person.
[01:04:53.680 --> 01:04:56.200]   - Yeah, we had sold the product to like 30 or 40 customers
[01:04:56.200 --> 01:04:57.040]   of that.
[01:04:57.040 --> 01:04:58.520]   - Like we had done like hundreds and hundreds
[01:04:58.520 --> 01:05:01.480]   of deals cycles ourselves personally, right?
[01:05:01.480 --> 01:05:04.040]   Without, we had a lot of books and we just did a lot of stuff
[01:05:04.040 --> 01:05:05.440]   and we learned like what messaging worked,
[01:05:05.440 --> 01:05:07.080]   like what did we need to do?
[01:05:07.080 --> 01:05:08.960]   And then I think we found like the right person, right?
[01:05:08.960 --> 01:05:11.040]   A second friend like Graham's amazing
[01:05:11.040 --> 01:05:13.040]   and who we brought on was our VP of sales.
[01:05:13.040 --> 01:05:14.760]   That just has to be part of the nature
[01:05:14.760 --> 01:05:17.520]   and doesn't stop now, like just because we have a VP of sales
[01:05:17.520 --> 01:05:19.280]   and people dedicated to sales.
[01:05:19.280 --> 01:05:22.040]   It doesn't stop that we can't be involved
[01:05:22.040 --> 01:05:23.600]   or like engineering can't be involved, right?
[01:05:23.600 --> 01:05:25.800]   Like we have lots of people like,
[01:05:25.800 --> 01:05:27.640]   we hire plenty of deployed engineers, right?
[01:05:27.640 --> 01:05:29.400]   These are people like, you know, I think like Palantir
[01:05:29.400 --> 01:05:31.160]   kind of made the story of the players.
[01:05:31.160 --> 01:05:32.000]   - They're like deployed engineers.
[01:05:32.000 --> 01:05:33.920]   - Like deployed engineers like worked very, very closely
[01:05:33.920 --> 01:05:35.840]   with the sales team on very technical aspects
[01:05:35.840 --> 01:05:37.400]   because they can also understand like,
[01:05:37.400 --> 01:05:39.240]   what are people trying to do with AI?
[01:05:39.240 --> 01:05:41.280]   - As in, they work at podium as deployed engineers.
[01:05:41.280 --> 01:05:42.360]   - Yeah. - Okay.
[01:05:42.360 --> 01:05:44.800]   - And they partner with our account executives
[01:05:44.800 --> 01:05:46.680]   to like make our customers successful
[01:05:46.680 --> 01:05:48.480]   and like learn what is it that people
[01:05:48.480 --> 01:05:50.240]   are actually getting value with AI, right?
[01:05:50.240 --> 01:05:52.440]   And like that's information that we keep on collating
[01:05:52.440 --> 01:05:55.040]   and it's like, we will both jump into any deal cycle
[01:05:55.040 --> 01:05:58.520]   just to learn more because that's how we're gonna just
[01:05:58.520 --> 01:06:00.000]   keep on building like the best product.
[01:06:00.000 --> 01:06:02.640]   It comes back to the same, like just care, I don't know.
[01:06:02.640 --> 01:06:04.640]   And hopefully we build the right thing.
[01:06:04.640 --> 01:06:05.480]   - Cool, guys.
[01:06:05.480 --> 01:06:06.560]   Thank you for the time.
[01:06:06.560 --> 01:06:08.480]   It's good to have you back on the pub.
[01:06:08.480 --> 01:06:09.520]   - Yeah, thanks so for having us.
[01:06:09.520 --> 01:06:11.200]   - Hopefully in a year we can do another one.
[01:06:11.200 --> 01:06:12.680]   - Yeah, you'll be 10 billion by then.
[01:06:12.680 --> 01:06:13.760]   - Yeah, exactly.
[01:06:13.760 --> 01:06:16.000]   - At this rate, the next year.
[01:06:16.000 --> 01:06:17.360]   - We try not thinking about that.
[01:06:17.360 --> 01:06:18.720]   - Try to not be a zero building company.
[01:06:18.720 --> 01:06:20.760]   - That's, well, well, there's that.
[01:06:20.760 --> 01:06:21.600]   Yeah.
[01:06:21.600 --> 01:06:22.440]   - All right, cool. - That's it.
[01:06:22.440 --> 01:06:23.280]   - All right, awesome.
[01:06:23.280 --> 01:06:25.860]   (upbeat music)
[01:06:25.860 --> 01:06:28.440]   (upbeat music)
[01:06:28.440 --> 01:06:31.020]   (upbeat music)
[01:06:31.020 --> 01:06:33.600]   (upbeat music)
[01:06:33.600 --> 01:06:36.180]   (upbeat music)

