--- METADATA START ---
Show: In Depth
Episode: Inside Linear: Why craft and fâ€¦
Host: Unknown
GUESTS: Karri Saarinen 
Guests: Karri Saarinen
Source URL: https://podcasts.apple.com/us/podcast/inside-linear-why-craft-and-focus-still-win-in/id1535886300?i=1000711580201
--- METADATA END ---

1
I find that startups sometimes or founders make the mistake of trying to emulate the other companies.
2
You should almost do the opposite, what all the other players in your domain are doing.
3
For today's episode, I'm really excited to sit down with Kari Saruman.
4
He's the CEO and co-founder of Linear, a platform for planning and building products that's become the tool of choice for companies OpenAI, Ramp, and Rex.
5
Almost everyone said that they hate when these tools are slow.
6
That made us think: what if we can solve the speed issue?
7
What if we can build a tool that is never slow?
8
Before Linear, Kari was a founding designer at Coinbase and a principal designer at Airbnb.
9
In our conversation, Kari shares all the pivotal moments that led him to start Linear.
10
From redesigning websites of local businesses in Finland to founding his first company.
11
It started the Sazai project, so yeah, how it went was that we just put it on HackerNews, hey, we built this thing, and then in a couple months, we have 10,000 users on it.
12
He then digs into how he found conviction for the idea that would then become Linear.
13
I think 2015, that was my first time using Jira.
14
I looked at it.
15
It's, what is this thing?
16
It's so messy and so complicated, and I can't quite understand what it's supposed to do with this thing.
17
Including how he ran informal user research with colleagues at Airbnb and how he's methodically built a product that puts quality above metrics.
18
I think why quality doesn't happen in most companies is it's not incentivized.
19
It's almost that, no, we just want you to complete this task.
20
Let's dive in.
21
Thanks for joining.
22
I'm excited for the conversation.
23
Well, thanks for having me.
24
Maybe a place to start.
25
What was your childhood?
26 when did you get excited about software and design?
27
I would say,, quite quite early on the software or on the computer side.
28
So, I was told, I don't really remember this, but when I was five years old, I wanted to play.
29, we got the Commodore 64K or something at our house.
30
And I wanted to play those games, but to play those games, you have to type in the launch command.
31
And I couldn't even read then.
32
So, I had to have my sister to help me show me how I type the right commands so I could match it visually, even though I didn't know what the letters are.
33
I couldn't read really, but I could match the visual combination of things.
34
So, that got me into computers.
35
And then that continued with other PCs and gaming, online gaming, and which then got me into designing websites.
36
I wanted to design a website for a gaming clan or team, and that got me,, I went to the library to get a book on HTML and got to learn about that.
37
On the design front, I also feel since I was very little, I always noticed things that weren't right, to me to my perspective.
38
And I remember one story that with my parents, we went to look for a new bike for me, and then I told me,, go to the store and look at the bikes,, what bike is interesting to you.
39
And I felt a lot of the bikes were just ugly.
40
And I just couldn't understand.
41
I was maybe seven or eight or something.
42
And I just couldn't understand why do you make ugly bikes?
43, if you make a bike, why don't you make it nice?
44
And then,, maybe years later, I realized that, oh, you need someone to do it.
45, you need to have a designer or some person that selects the design or creates the design.
46
And then I realized that there's that career.
47
But I entered the computer side from the programming.
48
So, my first job when I was 16 was building websites, and that was my job.
49
But even in that job, I saw that what the company needed more was the design help.
50
So, then I got sucked into the design.
51
And every company I went to is, I found that are pretty good at programming, but they're very bad at design.
52
And so, that always caught me to design wherever I went.
53
Why do you think that is or was?
54
I can visualize things quite well.
55
So,, when I look at something, I notice that something is off.
56
And then I start thinking about it,, why?
57
Why is something off?
58
What is bothering me?
59
And then I can visualize a version that is what I think is better.
60
So, I think there is some innate ability to see how things can be better.
61
And then it is easier to do designs when you can do that.
62
Did you, growing up, think of yourself as an entrepreneur or as a programmer or gamer or designer?
63
I've never been too focused on any specific identities.
64, even in school, I wouldn't join this group.
65
So,, I wouldn't form my identity along some group that,, I don't know, you are a skateboarder or you are a musician or something.
66
I would hang out with all of those people.
67
And I found some of the aspects interesting, but I was never a person that I'm going to go 100% in it.
68
And I think when I was thinking about where I should study and what should I study, I did feel that way.
69
That I am interested in entrepreneurship because I had my own little agency.
70
I built websites for some customers.
71
So, I had some concepts of running a business.
72
I was interested in it, but I also knew programming and I also knew design.
73
So, my choice eventually was those three,, what should I study out of those three?
74
And my thinking, at least back then, was that I think that I can learn design by just doing it.
75
And programming is similar that I can, I so far I've been just learning it by doing it.
76
I'm not sure what I will find in this school.
77
So, what do I learn there?
78
So, I went to the business school because I wasn't sure,, what you can learn and can I learn something there.
79
And then later I realized that business schools are not really about founding companies or entrepreneurship.
80
They are more about the middle management or The theory of how do you run a company, but not the practical aspects of it.
81
Were you into school or it was an a side thing as you were pursuing building and designing and all that type of stuff?
82
Yeah, I was never into school at any level basically.
83
I think how my motivations or mind works is that I always was more interested doing something where I could see there's a value to someone.
84
So when I was younger, that could mean that we made events, we made this LAN gaming events, we booked some space and then we sold tickets and we created something for someone.
85
And that always felt to me the real work or the real thing you can do in this world is you can create some value.
86
So I was always interested in that.
87
But school is not that.
88
So I always found that the school is fake because it's you learn something yourself, but you do these exercises or tests or studies, but you are just learning.
89
You're not creating value to anyone else.
90
And that doesn't feel motivating to me.
91
So yeah, a lot of times it was more a side thing that I did.
92
And I did end up dropping out because I could see I can just go work in these companies or startups and I don't necessarily need these studies.
93
So what was the story behind your first company?
94
When I was very young, I had just an agency around building websites.
95
But then in 2012, I had this other startup called Kipped.
96
And it basically, it just came to be from an idea that back then, Delete was the bookmarking tool.
97
And Yahoo had bought it in early 2000s and basically done nothing with it for 10 years.
98
And it was stuck there.
99
And I didn't using it.
100
And I felt maybe a lot of other people feel the same way.
101
And there were some other things that I didn't quite about the model they had.
102, for example, the tagging, I found tagging was this hot thing back in the day, a tag, an interesting idea how you can categorize everything.
103
The problem with tagging is that you might end up with more tags that you have content.
104
And to me, it doesn't feel it has some purpose than you are categorizing for really no benefit, you just have too many things.
105
So we created this product Kipped, which was basically a bookmarking service for saving things from the web, different articles, videos.
106
We could also try to bring in the content to your library so you could access it even if the content went away.
107
We also built some social features.
108
You could follow people or make lists that other people can follow.
109
And one of the ideas there was that Google, even back then, was bad at finding quality content.
110
If you want to learn something, hey, I want to learn about React and it's, what is the best content around that?
111
It's not curated because it's based on the search rank.
112
And the search rank can be, it's probably just gives you the React website, but it doesn't give you someone's great tutorial that they created.
113
But someone who knows the subject, they could create these things.
114
But we built that tool and then found out a lot of people liked using.
115
We put it online.
116
We put it on Hacker News.
117
And then turns out a lot of people liked using it.
118
Did you start it as a company or as a side project?
119
It started as a side project.
120
So yeah, how it went was that we just put it on Hacker News.
121
Hey, we built this thing.
122
And then in a couple of months, we had 10,000 users on it.
123
And then at that point, we were, oh, maybe this could be a company.
124
So we went to apply to YC in 2012 and then got into the summer batch.
125
And that also got me to move to.
126
California or San Francisco.
127
I grew up in Finland, so that's where I'm from and where I was at the time.
128
And then the YC made the reason for me to move.
129
And then we came to do the YC and then run the company from US.
130
What was the trajectory of the company?
131
It's definitely lessons learned.
132
So we always, I still, even yesterday, someone else, I was talking to some investor and they said, hey, I really remember this kipped service you had and I really liked it.
133
So I think we had a good group of people who were very excited about the tool and liked using it.
134
Some of the, I think, the mistakes we made and maybe it was also a timing component that we just didn't, because we didn't start it as a business, we didn't think, what is the business?
135
So Delicious, I don't think really had a business, they just got sold.
136 I think advertising is only works if you just hit a massive scale.
137
And so, and we weren't there.
138
So we weren't some hundreds of thousands of users, but or tens of thousands of users and then later 100,000 users, but not then in millions of users.
139
And it's still, I think, what we found out is not everyone likes to collect stuff and it's not the most mainstream thing.
140
So we struggled a long time with the business and we did some different ideas, built it.
141
But in the end, we were just running it, two of us, two founders, most of the time for a couple of years and just tried different ideas.
142
We didn't really raise any funding because we didn't really have a vision of what we were doing.
143
So we were trying to figure it out at the same time as we were building stuff.
144
And in the end, I think it was a good experience on building things.
145
And then also maybe made me realize that the advice on starting a company and not thinking about the business model too much is not good.
146
I think you should think about it a little bit.
147
It's, what is what business are you in?
148 who is going to pay for it?
149
And aren't they going to pay for it?
150
In our case, these were mostly individuals.
151
And then I think back in the day, people weren't really willing to pay for it, web tools as much.
152
So I think if we had done it now, I think we probably could have gone and done it better.
153
But I still don't think it's a venture scale type of business.
154
It's the market is not there to support it now or probably never.
155
It's just it's not a thing or it's not that interesting for that many people.
156
But I think the ending for that company was that.
157
So Coinbase was in our YC patch in 2012 and they didn't have any designers on the team.
158
So I sometimes advised them on some stuff early days.
159
And Brian Armstrong was always hounding me about it.
160
It's, hey, maybe you should join Coinbase.
161
And I was, well, we have our own company.
162
And eventually it got to a point that he offered to buy our company.
163
So we ended up being acquired by Coinbase in 2014.
164
What,, you talked a little bit about one of the lessons.
165
I guess I'm always interested in this topic of founders that start multiple businesses.
166
And there's obviously this pattern where there's many spectacular companies that were built by founders.
167
When you look back, their first company didn't really work or their first two companies didn't work.
168
And then they land on something and it really has the properties of something that can really get big and create something that's adorable.
169
The thing I find curious about is the question of this intersection of the founder and the idea and product that they're building.
170
And ultimately, how much of it, if it went a founder goes on to build a really good second or third company, is it that they've learned a lot?
171
Or is it just more that there's more randomness than anyone would imagine?
172
And that you take a capable founder and they're pointed in one direction, it doesn't really go anywhere.
173
They roll the dice again and get pointed in another direction.
174
And that we're overfitting to a bunch of these things.
175
And that,, certainly you've learned a lot since the first company, but maybe you're more similar.
176
And,, it's almost you were drilling for oil and you were really good at drilling for oil, but you were drilling in Massachusetts, not Texas.
177
And then you put the rig down in Texas and now,, you're building something pretty special and linear.
178, it's not a very well-formed question, but when you think about those type of topics, what comes to mind for you?
179
I would say you definitely learn something with any company.
180
And I think it's always important to understand what are the lessons and maybe try to think if those, what went wrong or what went well, how much was it about your specific situation versus how much was your choices you made or how much was conceptually you just went to the right wrong direction.
181
I think a few lessons I've learned.
182
One was that the business side that I probably at the time, after that company, thought if I start a new company, I will definitely start a company that I know there's a market for and make sure that there's a market.
183
So linear is that company.
184
We knew that basically every software company needs some issue tracking project management tool.
185
It's just a matter of it's linear that that tool or something else.
186
And then also that software companies and engineering tools are type of products that people are willing to pay for because the engineering functions are already highly paid.
187
And software companies have, especially VZ funded software companies, they have a lot of money to spend.
188
So it's you could build Linear to some other domains, but I think the problem sometimes can be that if you could build Linear for teachers or something or schools, but schools are not willing to pay, they don't have the money to pay.
189
So I think there's some importance of understanding the market, what you're entering and what is the dynamics there.
190
I think the second thing which we explicitly try to do well with Linair was a certain focus and especially the ideal buyer focus.
191
So in the first company, it was this bookmarking tool that was used by all kinds of people.
192
It could be engineers, could be designers, could be teachers, could be sometimes book writers, authors.
193
And every time you hear this story, it's as a startup founder, you might get really excited.
194, oh, wow, someone is writing a book and they're using our tool.
195, that's great.
196
And maybe we could do more for them.
197
But the reality is that you are probably just getting distracted.
198
That's probably not your audience.
199, that's a pretty specific audience.
200
Maybe you could build something for it, but you probably shouldn't build anything right now, especially when you're small.
201
So with Linair, we set out that we basically are building this for product software companies, especially early on.
202
It was very small, early stage companies.
203
And whenever we looked at any feedback, we're looking at who is this feedback coming from?
204, why do they need this?
205
And are they in our focus user group?
206
And then I think there's that focus thinking can also go beyond that.
207
Similarly, even from that group, you might get things, hey, we need SOC 2 and this security certification.
208
And that's one of those things.
209, yes, you should one day have SOC 2, but, is that day today?
210, is it in the first month of your company or the first six months?
211
Probably not.
212
So you should always think about, is this something we should do today?
213, is it blocking us in a massive way?
214
Or is it, is this the most important thing to do right now?
215
So there's, I think, lesson on the focus.
216
I feel I learned a lot from YC just generally that they, I think they give pretty sage or pragmatic advice, which I don't think people usually follow though.
217, I think there's all this, they say,, don't raise a lot of money or try to be profitable if you can, but no one does it ever.
218
And I don't know exactly why, but, it's all there.
219
It's they give all this advice.
220
And I think we been trying to follow that advice.
221
And it seems it does work.
222
But I think people get distracted by other things.
223
Well, there's lots of things in life.
224, how do you be healthy?
225
Well, you exercise and you eat well.
226
Then you look at how many people are exercising and eating well.
227
Well, there's not many.
228, part of it is that there's a whole host of things that are pragmatic, good advice.
229
And the real world is complex and humans are complex and there's status seeking games and all sorts of other things going on.
230
So yeah, I would definitely say that there is things you can learn, just practical things, and there can be just philosophical things or just experience can help.
231
I think I also was helpful to after my first startup, I worked at Coinbase, which I joined there when there were 12 people or so and then saw them grow to 100 people.
232
And then I was at Airbnb when they were already quite massive scale, but they were still growing.
233
And it was good to see how different companies operate, how the CEOs operate, what goes wrong, even in this very successful companies.
234
And I think you realize that even these very successful companies are, they have problems too.
235, every company has problems.
236
And, and as a startup, you don't have to get everything right.
237, you just have to get a few things right.
238
And then you can fix things over time.
239
Do you think Linear would be successful if you didn't work at Coinbase and Airbnb?
240
I think it's likely.
241
I think it depends what else I would have done in those years.
242
I think it's about five years basically of my life.
243
So I don't know.
244
Maybe I think what was really helpful about that experience was seeing that how these organizations get built, how they make decisions, how do they operate.
245
And I still think there's a lot from those days when I'm designing something or talking about the product in the company.
246
A lot of times in the end, the problem we are solving for companies is this organizational coordination and communication problem.
247
And especially the larger the company is more problems you have with that.
248
And basically the problem is always no one ever knows what is going on and who is doing what.
249
And I think having the experience, seeing those companies, seeing how they do planning, how they make these spreadsheets and how bad the experience is or how they prioritize things, it does help me think about the product itself.
250
I remember people doing it this.
251
Maybe we could build a solution for that.
252
And there's simple things we have this product project updates feature that is basically every company almost does something that.
253 you have some weekly meeting maybe that you everyone puts a slide and this is where the project is at.
254
So we just build that into linear that there's a specific place you can do that and you can mark your projects green, yellow, or red, and then people can follow those things.
255
And so, it's we are trying to almost productize the practices companies already have and make just make it more easier or streamlined for them.
256
And it would be hard to do if I didn't have that experience.
257
What about other philosophical things that you took from those companies that have expressed themselves in what you're doing with Linear?
258
I think one would be the small teams.
259, with Linear, so we've been trying to keep the teams, the whole company quite small or not overly growing it too fast.
260
So, I think there's two problems with growing the team too fast.
261
One is the it takes a lot of time and the culture gets diluted very easily.
262
And I could see that happening in these companies, that especially in Coinbase, when you have 12 people and then it suddenly goes to 100 people in one year, almost majority of the people now has been there less than a year, sometimes even weeks, and they don't know what they're doing, or they don't know what they're supposed to do.
263
And then, I think the second thing around that was that I looked back and tried to think all the projects that I was part of, what were the projects that went really well, where the output was really good, where the speed was really fast, or execution speed was really fast.
264
And it was always projects where we had a small team working on something quite intensively.
265
And it was at the Airbnb when I just joined, I got pulled into this project basically redesigning the whole Airbnb application, and there was five of us.
266
And it's almost those things are almost impossible to do with 50 people or 100 people.
267
There's just too many opinions and too much pull to different directions, or just communication problems.
268
So, I think that, that was one thing I took: that small teams can be powerful.
269
And if you just find the right type of people for that, and the companies don't really do it that much because I don't, I find they often think about the resources as number of people, not necessarily the output of those people.
270
So it's easy to say,, we need to hire 100 more engineers, but maybe you only need to hire 10 more engineers if you just structure the organization differently.
271
So on the small teams point, how you put that with Coinbase and Airbnb being two of the largest software companies of the last 20 years?
272
Is it just there are many ways to build companies?
273
Is it for them maybe it was good that they scaled quickly, that the market set up for them required them to do that?
274
Or they would be more successful if they were much, much smaller and they didn't grow headcount in the same way.
275
Airbnb, for example, Prime Tesk is now running it very differently than he was running before, this whole idea of founder mode and being more in the details.
276
And I think he is looking at this differently.
277
He probably agrees that they had too many people.
278
I think it's what happens in these companies is I don't believe that those people are needed for the success.
279
It's more that the company is so successful that they can hire these people.
280
So it's when you have the growth there, you are able to do that.
281
That's the lesson people should take from that, not necessarily that.
282
I sometimes see startups following the hyper growth model where they think the success comes from hiring a lot of people, but it's the opposite.
283 Coinbase was still quite small.
284 when I joined, it was already, yeah, it was two years in and there was still 12 people there.
285
Why did they decide to grow so fast and keep growing that fast?
286
What was the earliest moment that you thought about what then became linear?
287
Well, I would say,, the actual idea, it came from my co-founders, probably in 2000, early 2018 or something.
288
Basically, they wanted to start a company.
289
I wasn't wanting to start a company.
290
And basically, I think their first idea was, hey, we use all these tools in our companies and all of these different companies we've been at, around managing this work, and all of them are quite bad.
291
And I think we could build something better.
292
But,, interestingly enough, there was a little precursor to this.
293, when I joined Airbnb in 2014, I think 2015, that was my first time using Jira.
294, Airbnb was using Jira.
295
They had some self-hosted instance, maybe.
296
And the IT team had customized it a little bit with the Airbnb colors, but not really doing a good job with that.
297
And so, when I was first required to use it, I looked at it.
298
It was, what is this thing?
299
It's so messy and so complicated, and I can't quite understand what I'm supposed to do with this thing.
300
So, I refused to use it for a long time, but eventually, I realized, well, it's not great for my team to refuse to use something, and I should just play along.
301
And but, what I did was that I created a Chrome extension that loaded up a custom CSS for that Jira instance for the Airbnb Jira instance.
302
And so, I started redesigning it.
303
So, I started removing some of the elements.
304
I started changing the colors, the styling, the hierarchy of the views or the screens.
305
And then I also removed a bunch of stuff that I didn't think are necessary, the elements that I don't think are necessary for the to use it.
306
And so, I packaged it into this Chrome extension.
307
I launched it internally and they're, hey, I made this simplify, a nicer-looking Jira for myself, but, maybe you want that too.
308
And I got 100 installs on it inside Airbnb.
309
And this was, yeah, a couple of years or three years before we ever talked about Linair.
310
But when they started talking to me about this idea, I had this personal experience where I went to the lengths of building something custom Chrome extension to make this tool bearable for me because I'm a visual person, so this stuff does bother me.
311
Were you at lunch together at Airbnb and they were saying, hey, we've been wanting to start a company.
312
What do you think about what where did it start?
313
So all of us founders, we're all Finnish and we are friends.
314
And one of the founders, Jory, he was my founder in the first company.
315
So we already had this relationship.
316
And then he stayed at Coinbase.
317
I went to Airbnb.
318
But we all were friends and we had beers every now and then,, I don't know, weekly or so.
319
And I think it was one of these sessions they started talking, okay, I'm at four years into my company or five years into my company.
320
I want to do something else, but I don't want to go take a job.
321
I would want to try something on our own.
322
And it came from that.
323
So it came from this discussions.
324
And then we started looking into it.
325 we started thinking about the problem.
326 we started a little bit designing and building prototypes and talking to our friends and talking to co-workers in the companies, hey, what do you think is really bad with these tools?
327, how would you want to improve it?
328, what are some of the things you really hate about it?
329, what would make you more productive and those things?
330
And so we started this little bit of a research before we committed doing anything.
331
We wanted to see if that idea is, there.
332
I think the interesting thing about it was that a lot of people had a lot of things to say and they clearly saw the problems.
333
No one was saying anything that, hey, I wish someone would solve this or I wish you could solve this or something.
334 no one even thought about it.
335, I think this market is weird where you have this incumbent and I think people just assume it's the thing.
336
It's, it's always been there.
337
It's always going to be there.
338
And so it's, it's a little bit the floors in the building.
339
It's you don't think about the floors, you just walk on them.
340
So I think a lot of people haven't really thought about, could there be something better and do it?
341
Obviously, there's been companies, other companies doing project management and stuff, but no one has really focused on the engineering use case that well, I think, and haven't been able to get to the scale where JIRA is.
342
From an order of events perspective, so I understand it.
343
Did you all first say our next thing, let's start a company together, and then landed on this thing that you wanted to work on?
344
Or were you just kicking around ideas and then decided after that?
345
I would say that both of them came together.
346
In some ways, we first decided, hey, we could start a company and this was the very next sentence, this is the idea.
347
We didn't never explore other ideas.
348
So there wasn't anything that.
349
We were already sold on this idea and wanted to start evaluating or researching it before fully committing on it.
350
And you just talked a little bit about this in a in broad strokes, but in its most tangible way, in the weeks after that, what did you do?
351
What were the types of conversations you had and how much of it was organized around,, there's the dominant players at Lassie, and it's a very large company, studying them, looking at what Asana was doing,, all the things that were going on versus ignoring everything that was there and just trying to figure out what customers wanted.
352
The thing we focused was what the customers were saying.
353
And,, if they mention other tools, then that's fine.
354
And,, that's, that's part of it.
355
But we didn't look at it, we didn't go benchmark the other tools or look at them too closely.
356
I think the main thing thinking was just that, why isn't Asana used in our tech companies?
357
And I think basically the reason is the feature set is not there for technical projects.
358
And maybe they've made some progress there.
359
But overall, that was just the thinking.
360
Basically, companies start with something and then they end up with Jira because there's nothing else.
361, there's no alternative to that faith.
362
So that was the rough understanding on the market for the different players.
363
But yeah, we mostly just focused on can we talk basically, let's talk to anyone who wants to talk to us about this.
364
And usually they were friends.
365
Sometimes they're founders, sometimes they're engineers, sometimes they're designers, PMs.
366
I interviewed some PMs at their Airbnb and just went, let's hey, can you have a coffee with me and talk about something?
367
And then I just went to talk to them,, what is what is problematic in your current world?
368
And when it comes to this tooling or running your team or something.
369
And I found there was a lot of different answers.
370
So there was more this step was more about the user research.
371
So understanding, are there some patterns?
372, are there something that people feel strongly about?
373
We had our own thinking all this time.
374, we experienced all these issues ourselves.
375
So a lot of this, it was, it came from us too.
376
That one of the number one thing for us was that we were always the type of people that wanted to build something.
377
And we weren't really in management positions.
378
We were more a high IC positions because we all loved building things.
379
And when we looked at this tool, they just didn't feel they're helping us to do anything.
380
They're not helping the ICs to do the work, which is weird because I think in the end, the productivity of any company comes from the ICs, what the actual, what is the work output and the ICs engineers or designers or someone are building that output.
381
So I think if the tool should be optimized around anything, it should be that.
382 to how do we make help them to complete that output or do that output faster or better or easier somehow?
383
Because then the whole company can be more proactive.
384
What I could see a lot of tools, and this generally I think goes for enterprise tools, they are optimized around the buyer because that's how they get bought.
385
The users don't go buy the tools.
386
The actual end users don't go buy the tools.
387
Someone in the procurement, IT, the leadership, someone make the decision which tools to buy.
388
And they might have their different favorite things that they want from these tools, or sometimes they don't even care.
389
Maybe sometimes the favorite thing is just the cost or something else.
390
So we just believed in that you could build a tool that is very good for the end users, for the engineers.
391
And that would be really valuable because if they use the tool a lot more than something else, it means that all the work they're doing is more tracked there.
392
And then if it's tracked there, this system can be more the real-time source of truth.
393
It's tracking what's happening in the front lines.
394
So anyone beyond those front lines have a better understanding, what is happening.
395
So we had some of notions this, that there's certain things that we should just hold dear or do really well.
396
But we wanted to also talk to people, what are some of the other things people have problems with.
397
Some other things I noticed, one of the patterns came from this conversation was speed.
398
So almost everyone said that they hate when these tools are slow.
399
So that made us think, what if we can solve the speed issue?
400
What if we can build a tool that is never slow?
401
And so we went on to this exploration of prototyping on a tech stack that could allow DUS.
402
And what it came to be is more of this local first architecture where the data is synced to the client, to the actual client the user is using.
403
And then all the actions you take with the data or with the tool, they happen locally on the client.
404
And then the changes get synced to the server versus the normal way of doing web apps is that you just run the app on the server.
405
And then whenever the user needs to do something, they request the data from the server.
406
And then when you make changes, it also at the same time pushes the data to the server.
407
So you get these loaders in your experience.
408
And it makes sometimes if the services are slow, it can be really jarring.
409
So we built that because we knew that it's number one thing everyone said.
410
So the speed is one thing.
411
So the first thing was the optimizing for IC, the speed was second.
412
And then maybe the third thing was that I noticed in all of the companies I worked at, that the ICs and the high-level leadership was, I think, more philosophically aligned because I think CEOs and a lot of the high-level leadership, they just want to see things happening.
413
They want to see output.
414
They want to have progress.
415
ICs are, I think, similar.
416
I don't want to sit in these meetings.
417
I want to complete my work and build something.
418
But,, something weird happens in the middle where things get really messy or lost.
419, that thinking,, hey, we need to go push forward,, go forward and do this thing just gets modeled by all kinds of other things.
420, we need to have this organizational path and these processes and something.
421
And so, what I saw happening in these companies is that the leadership would have very clear initiatives what the company should do, but then the planning would happen in the middle.
422
And then,, they would create the spreadsheet of 300 projects, but then now the leadership wouldn't know what those projects are doing.
423
Are they pushing those initiatives or not?
424
And then, when people work on those projects, they don't know why they're working on those projects.
425, the connection wasn't there throughout the layers because none of these systems supported that.
426
So, our thinking was always that,, could you connect the highest level of goals basically of the company to the day-to-day work and make it more meaningful that way?
427
For example, at Airbnb, it's it was a pre-IPO company, so there were some annoying things that maybe engineers had to do for the IPO readiness.
428
But if you worked on some of those things and you could see,, oh, this is, we're doing this because we need to get, we're gonna IPO, I think it would make that work feel much more meaningful and you would understand why you're doing this.
429
So, that was one thing is, we wanted to see if we can connect all these different layers of the company and that's why it both helped the leadership, but also the ICs.
430
Before you committed to starting the company, as you were having these conversations, did you intentionally try to talk to people in different roles and different size companies?
431
Or was it just more whoever was around, you were just sitting down and grabbing coffee and chatting about these things in a pretty unstructured way?
432
Yeah, I would say it was fairly random and unstructured.
433
It wasn't to some level, I probably tried to find a little bit different people, but a lot of times it was also, who do I know?
434
And who do I think I could have interesting opinions about this?
435
And it was very unstructured,, just tell me what is wrong.
436
And so it's type of user research in a way that,, I don't, I just want to hear, I want to see what people have to say and how they think about these things.
437
And then maybe I just have some additional questions when needed.
438
And I think that was also quite interesting to see the variance.
439
And sometimes with the PMs, they would have very this process-oriented way of thinking.
440, I need these tools to support my process, and this is my process.
441
And then some people were the opposite, where they are, I don't really care anything except how well the team is doing.
442, my only job as a PM is to make sure that the team is productive and I don't really care what the tool does for me that much.
443, that's not that, that's not what is important.
444
And that, that's more what we try to do with Linear is that we want that your team is the productive unit and maybe there's some cost to, it doesn't support all kinds of crazy processes, but it tries to be more simpler so people can use it.
445
I think obviously one of the benefits of talking to people is to try to understand if your model of the customer in your head and what they want, those two things are aligned, right?
446
The nice thing about what you were building with Linear is you were the customer, right?
447
You used all these tools.
448
And so you have this model in your head about likes and dislikes and what good would look.
449, I think the goal of talking to other people is to understand: is that model representative of a broader population, or is it just you?
450
And with that thinking, you just mentioned this a little bit, but can you sort out in what way was your model changed by these chats that you were having before you committed to the opportunity?
451
You have some intuition about things, and I believe that as a founder, you should probably start companies that you have some intuition about or some understanding about.
452
I know people start companies that in fields that they don't really understand or know much about, and I think that's respectable.
453
But I would never do that because I do the fact that I can imagine myself using this and imagining how it works for other people in that position.
454
So, I think there was definitely a strong intuition we had.
455
And then, what the customer or user chats or research does is we are trying to, yeah, partly you said, see if that model we have is shared by other people.
456
But also, I think it's there to hone the intuition or the thinking.
457
And so, I think it can be, it's never been even in the beginning or later stages, it's never that we listen to these users and then we build what they want or what they say.
458
We went there, it's more we have that model in our heads, and then if something doesn't quite fit into it, then we try to ask them more questions about it, why would they want to do it this way and not this way,, or why, just generally why they want to do it, and then try to understand the why and see if you could, if your solution could still solve their need.
459
It's just it's not the solution they were looking for.
460
I wouldn't say there was anything too much that changed from those chats.
461
Maybe there was some additional ideas.
462
Maybe it just gave us validation, the ideas we had, or maybe it helped us prioritize the ideas a little bit.
463
Because if someone said a lot of people said something, and we knew that,, that's okay, that's probably the area we need to focus on early on, because it seems more critical.
464
But I think how we started Linear was very much, this is our vision, how this should work.
465
And we built that and then put it out there and then.
466 see if that resonates and it did resonate and even from the very blog post we could see oh this is resonating then it's getting the people in and trying the product and we could see it didn't resonate with everyone right in the beginning but it resonated with certain people so we knew that we're we're on to something this is our thinking wasn't completely wrong here but it's it was quite right and it may be exciting or interesting or something different that people could get excited about and that's that was what was really helpful because if you if you think about this domain of project management or issue tracking it's maybe not the most exciting area in the world you probably don't wake up in a in the morning it's aha i wonder if i could think about project management more or something it is you need to get some trigger to it that oh there's something new different this could be interesting so i think it's been part of the linear from the beginning it's we want to make this feel exciting and not just that okay here here's a new new tool for you when was the exact moment that you said that you committed to going and building linear and how easy of a decision was it so yeah during 2018 we we had this some months of researching And thinking about this and designing something and i think along pretty quickly there, I think we made some level of commitment.
467
Okay, next year, in in january 2019 or or something, we will start working on this full time.
468
But then i think there was some personal things.
469 in the end, it started being more March 2019, which ended up being the actual commitment date.
470 we resigned from our jobs in March and then basically started full-time in April 2019.
471
In the time in 2018 before you did that, was it three to five hours a week you were playing around and prototyping and talking?
472
How much of a side exploration was it before you jumped in and started doing it full-time in March and 2019?
473, I think it probably varied by person and by each week, but I wouldn't say it was just probably some nights and weekends during the week.
474
So I would probably assume it's maybe, yeah, 10 hours or something, but not 20 or more hours.
475
And then we did, I think we did one off-site we booked an Airbnb and we went there for a weekend to plan some stuff and talk about things.
476
So that was my bigger time commitment.
477
But basically how it worked during that year is that we met once a week on Wednesdays in this bar nearby.
478
And then we sat in this corner table and then brought our computers and then basically talked about what did we do this week and what did we learn and what did we try.
479
And then we maybe made some decisions, okay, next time, next week, we should do these things or research this more or just whatever comes to mind.
480
But it was basically every Wednesday for almost a year that we we met and talked about this stuff.
481
So you quit in March and you start working on this.
482
What in its most tangible way, what happened next?
483
We basically set the goal.
484
It's we need to build the product so to a state that we can use it and we're basically trying to use it every day and then the basic things are hey you you should be able to create an issue and so okay we need that function and it's we need to be able to view these things or we need to hypothetical change this I need to be able to delete this And all those little things so the first goal was just that we should get this to a state that we could use it basically daily to do our basic workflow before you started writing the first line of code did you say I really want the early users just to be IC developers or product people or or did you punt the specific user you were building for yeah I would say we probably had some writings about this that based on all the research and all The talks we had we we had defined that we want to build this this tool ideally for these people so I can keep the focus I think for example these project management tools can be used for consulting companies but consulting companies with clients operate very differently from companies that build their own products it's a different model so we always funded that we are not building this for consulting companies they can use it but we we should be really honed down on this user that that this should be really good for the I think initially for the engineers was The user that we were building it for and probably working in this early stage startup mainly because or a small startup mainly because we knew that these tools require a lot of breadth.
485, there's just a lot of things you have to build,, a lot of those basic functionalities.
486
You need to move things around, you need to edit them, you need to change them.
487, there's a lot of lot of small features that you need to build to make this even a feel usable product.
488, you could build a very simple version of something, but in this category, it's just doesn't work because people already have pretty high standards or high needs for how these tools should work.
489
So, yeah, so we set that ideal customer and then just went to work, which in the end,, we were the first ideal customer.
490
We just have to build it for us.
491, let's build something nice for us that works.
492
And that was the goal.
493
And then the next goal after that was that we should have a few of our friends use this,, few, maybe it's five people or or something.
494
That was that was the or 10.
495
I don't know if we set the goal to be 10 people, and that was the next goal.
496
And so, how long did it take you to get working for you where you were pleased with it, and then to get your first five friends using it?
497
I think about a month we had it in a state that we could use it day to day.
498
And then, basically, I think months after, we had maybe 10 people or five people using it.
499
Because so much of the ethos and philosophy of the company is around craftsmanship, was there some tension, not wanting to give it to your friends until it was crafted perfectly, or just after a month that felt it was good enough, we'll invite some friends, the way of thinking about it?
500
I think we're happy to give it.
501
I think I would say,, yeah, probably our way of doing an early version is probably still pretty good.
502, so it was maybe limited in the feature set, but it was well done.
503
And, we did this,, all this pre-work and pre-thinking on a lot of stuff.
504
So, that the architecture was already almost built by the time we started.
505
So, we already had the speed solved.
506
And that was one of the reasons for the early customers, early users, that was already a huge improvement.
507
And if you, if that's the thing you care about, then we solve that.
508
And that was, it was already better than something else out there, at least for a certain group of people.
509
So that's why we were okay, giving it out.
510
There were also friends that looked at it as, I don't know, I don't get it.
511, I don't really care about the speed, or I don't get,, I don't get it.
512
So I think the friends was more just that if we can't convince our friends to use it, it's hard to maybe get other people to use it.
513
So it was the next easiest step to do.
514
And then after that, we, in April, we just wrote a blog post about what we're trying to do and why and tweeted about it.
515
And we got a lot of people interested.
516
And, it seemed the messaging was resonating.
517
And we just wrote it very clearly to ourselves that this is with the language and the way I would want to read this.
518
So I think what worked there was that, was that, that it resonated with the people who are, who were feeling the same frustration we were feeling.
519
And in the first, after that blog post, we also put this website up with this waitlist sign up, which had basically you enter an email and then after that, it sends you, gives you a survey that you also need to fill out.
520
The survey was optional, but you wouldn't really get in without filling the survey.
521
So the survey was required to get into the service.
522
Why did you choose to do that?
523
Well, let me go back for one second.
524
You gave it to five or 10 friends.
525
And what happened?
526
Were they emailing you saying this is incredible?
527
Did half of them not use it?
528, what was going on?
529
So, we shared with some friends,, maybe sometimes it was live, and, sometimes I would demo it, but we would demo it live and get them on it and see, try to see their reactions.
530
And yeah, there were different kinds of reactions.
531
Some people just didn't get it.
532
Some people were excited about it, so they wanted to try it.
533
And yeah, I think there was some we could see,, there was one company, our friends' companies that started using it.
534
It's a 10-person team, they started using it, and they were, basically, they were using it in their company, any other tool.
535
So, there was a few of those people that it seemed that it's already something that works for them that gave us the confidence to move forward.
536
How did you figure out that early roadmap after that?
537
Or how did you figure out someone who didn't it that you didn't care if they liked it versus if someone didn't it, you did care and needed to improve the product or evolve the product?
538
It's probably a normal thing.
539, when you create something new, there's always going to be the people that not everyone's going to it, and not everyone's going to it ever.
540
But especially in the beginning, it might not look something that people find that interesting.
541
So, I don't think you should over-index on the side of why didn't that friend or that person it.
542
It's more you index on the other side.
543
It's, who are the people that do it?
544
And,, why do they it?
545
So, I think what we're probably doing, I don't remember exactly that well, but I think we were talking with those people that started using it and were starting using it on the day-to-day.
546
And then we could email them or try to talk to them weekly.
547
It's, hey, how's it going?
548, what are the problems?
549
And,, we also had this feedback button built in very early on.
550
So, you could very easily email us feedback from the app itself.
551
And we would read those emails and respond to them.
552
So, I think it was lots of roadmaps came from what did we need personally?
553
And then, what did we hear from these early customers?
554, for example, I think this sprints or where we call cycles was one of the early additions was that, hey, we're running a sprint,, how can we do that here?
555
And that was something, oh, yeah, I think a lot of companies, even if they don't exactly do agile, they might still this concept of some contained time where you work on something, which is a sprint.
556
But yeah, we called them cycles because we think it's more a continuing activity of working on focusing on something.
557
And it's not really you're sprinting towards something.
558
So I think that, yeah, the roadmaps mainly came from the people who did want it.
559
And then maybe sometimes we would track these blockers.
560 if someone comes to us, hey,, I would love to use it, but I really can't because of this, then that would be something we put it on the list of these are the possible potential blockers and maybe we address them now, maybe we address them later.
561, I think my thinking is early on, the blockers, I mentioned the SOC2, for example, I think it's a usual, easy example to give to any startup founders that if you start some business product, eventually someone's gonna come to you, ask, do you have SOC2?
562
And your way to address that might be, yes, we will go get it.
563
But it doesn't might be a good idea because that user might not even be the right user.
564
And that might be also an excuse.
565
Maybe they don't even really care about the product.
566 they just are wondering about it.
567
So initially, you don't have to get everyone.
568
You don't have to win every deal.
569
You don't have to win every user.
570
You just have to win some that can use the product or and can be happy about using the product and can use it more and maybe daily or in their normal workflow.
571
And then you get feedback from them.
572, what do you need is someone to use the product so you get feedback.
573
Not that you get the most amount of users who maybe eventually stop using the product or don't even give you feedback.
574
When you started to give it to people before you had a wait list, was it a third of people it connected with, half, one out of 10?
575, because you're getting, I think you're hitting on a very simple but important idea, which is,, the classic thing of you're looking for, if you're trying to build the future, you're looking for people that get the future and want the future that you're building, not trying to convince everyone on planet Earth that your future is correct.
576
Maybe in 20 years, that's the case.
577
But there's also this tension of, if you went to a thousand people and only one of them wanted your future, a la work in your product daily or whatever heuristic you want to use, that's probably also not the correct thing.
578
Or one in 10,000.
579
So was it just organically in the 10 or 15 people?
580
It's there were three or five.
581
There was just enough that you just didn't think about it.
582
Yeah, I think what you're hitting there is that basically the boiling the ocean problems, yeah, as a startup, you shouldn't try to boil the ocean.
583
You should start with a pot of water and try to boil that first.
584
And then just always try to increase the pot size.
585
But I don't remember the exact numbers.
586
I would say on the wait list, I remember that eventually we had about 10,000 emails on it.
587
I would say about 10% of them converted during that year.
588
But I think on a weekly basis, so what we did was that each, so we did this wait list and this survey, and it asked some questions about why they want to use this, also what tools they use currently and qualifying questions.
589
So what we did is I just went on the list and picked maybe five or ten names from that list and then I emailed them, hey, here's your invite to Linair and try it out.
590
I think out of those, I think almost probably 90% of those people at least signed up.
591
Maybe I would say half or even 30% I think probably became users from that initial group because I would pick the users based on their how interested they were.
592
So there was open fields why do you want to use it and what's your current problems.
593
So reading that answer, I could get who is the most motivated to try this out.
594
And then I would pick those most motivated people.
595
We always invited different amounts of people.
596
I would say in the very first weeks, I think the users, active user count increased by 10 each week, basically.
597
And we track retention and we try to keep tabs of these people.
598
It's, why are they leaving or why they're staying?
599 what would they need more?
600
So it was very much focused on very maybe small group of people.
601
And then eventually, I think in the first maybe six months or something, we already picked all the highly motivated people who the product was fit currently.
602
And so some of the long tail of that wait list was just that we weren't a fit yet.
603 we weren't able to serve their scale.
604
Maybe they weren't that motivated.
605
But we got into a scale in the first year, we did this a private beta with the waitlist.
606
When we launched, we had over, I think over a thousand daily actives, so that there was at least some a good group of people using it.
607
At what point did you decide, okay, we can go launch with a waitlist and start to get people?
608, what was the indication to do that, and how much of it was just intuition?
609
And did you think about just publicly launching it, or did it just always make sense?
610
Let's create a waitlist, let's try to find the right people that have the right set of problems to be our first thousand users, that type of thing.
611
I don't remember exactly where the waitlist came from, but I think it was the thinking was that we felt that the product product this, and it eventually it's very expensive.
612 I said, it, there's a lot of features that you might need in a certain scale when you use the product.
613
And so we knew it's never going to be a fit to everyone or most people right out of the gate.
614
And so we didn't want to launch it so that we get a lot of people checking it out and then leaving.
615
And it's, it goes back to what I said earlier about the focus.
616, I just wanted the most motivated users and we can focus on them as much as possible.
617
And they can help us with the feedback and building this thing.
618
But we are also, even though we quality and doing things well, we are also, we are also not the type of people that want to run a stealth company forever.
619
So I think we pretty quickly saw that I think we can do this waitlist for a while, but I think at least maybe in a year we should just launch this and it doesn't it doesn't help us that much in it after that.
620
I think there was some signs definitely that we were supporting retention I think is to me at least what I look at the most are the people there.
621
Do the people stay because if they don't if no one stays or majority of people don't stay you have a problem and probably you shouldn't launch it because you are just gonna lose those people as well.
622
Obviously, there could be something else going on.
623
There could be maybe the people you invited weren't the right people, but or something else.
624
But I think retention is to me the number one thing.
625
There's also waitlist has a decade that it's people's interest doesn't last forever.
626
So I think I would say the realistic timeframe is probably months or maybe at max six months.
627
I think what we started seeing after a year, people aren't that interested when we invited them.
628
So I think you have a time, a decay there that people just don't hold the interest for that long to wait for something.
629
But we saw the waitlist as a good way to keep the cohorts focused.
630
So we could invite 10 people, see what happens, do they start using it?
631
What feedback they have, then fix those things that they tell us.
632
Then invite a new cohort.
633
Is this cohort better?
634
Now they complain about different things.
635
So let's fix those things and build those things.
636
So it gave us a little bit more a focus.
637
It's each week we made a new version basically of the product and then we could get feedback on that version with the new users again.
638
So rather than having this one moment in time and in the very beginning you get a thousand users checking it out, but maybe there's a lot of problems that they notice.
639
Now all of those people are have this impression that your tool sucks or it doesn't work that well.
640
So we wanted to control that better that we can invite the right type of users and then see what feedback they have and then try to fix that.
641
Did you think about in those early days of product building, are we mainly trying to make our happy users happier or trying to get the next marginal user that it's not quite right to be happy?
642
I would say both.
643
So yeah, I think early days I would call them enablers and blockers, the different feature sets.
644
And I think it was definitely a lot of focus on the former that let's try to make the users we have extremely happy and build the things that they seem to need and have good reasons to need.
645
But then every now and then we would collect all the blockers.
646 what we heard also from people is, why can't they use it?
647
And then especially before we launched, one of the limitations we had in the system was that we built the whole sign up and login around Google Auth.
648
So you couldn't use Linear if you didn't use the Google workspace or whatever G Suite, whatever it's called these days.
649
So that was a limiting factor.
650
We knew that if we're going to launch it, not everyone has that.
651
So we need to build a basic sign up, email login.
652
We just didn't never get to it because we didn't think it was important to try to get those users because we already, there was enough users that had the stack that we supported.
653
So I think it's more the way I think about it is in the early days of the start to focus on finding that group of people who are really motivated and can see the future and build more stuff for them and get them extremely happy.
654
But every now and then look at the list.
655
It's what are the blockers we are collecting from other people and could we solve one of those things that then would open up as in a new a larger user group that then we could get in and they could be happy too.
656
So it's balancing that that I don't think you should optimize too much of the either side but you just have to try to do both.
657
How did you think about how opinionated you wanted to be versus flexible?
658
My design philosophy has always been that you should design something for someone, and it's really hard to design something really good for everyone or design everything for everyone.
659
It's just it's not even possible, I think.
660
So, I think one of the things about linear we had from the beginning is the goal was to be the best in class tool for this particular purpose.
661
So, the purpose of building software in software companies and managing that work.
662
So, that was the goal.
663
And I think to me, trying to be the best in class means that it is the best tool and it is the highest quality tool.
664
But also, in order you to be really good at the workflows and how the application operates or the platform operates, in order to be really good or work well for the user, you have to be opened.
665
And I think it's more the Apple way.
666
They think this is the experience you should have.
667
This is the experience you have with the iPhone and or Mac or something.
668
And that's the experience you get.
669
You cannot change all the things that they do.
670
You can change some things, but you cannot change all the things.
671
If you want that, if you want to change all the things, don't use it.
672
But I think to me, it's always been that I don't believe that you can build the optimal tool for anything if it's very flexible and endlessly customizable.
673
So, from the beginning, we had this thinking of we want to be opened.
674
There should be a good way of doing this.
675
We should provide certain standards and defaults to people how to operate, which is also important in our domain.
676
I think that I think the more of the companies grow and the organizations grow, the more structure and standardization they need, even if they don't always want it.
677
But I think eventually they need it.
678
And I think what we saw and heard from customers that what happens in other tools is that it becomes very chaotic when one team uses the tool this way, and then the other team uses it very different ways.
679, there's not a standard,, what is a project?
680, it's sometimes it's this epic, and then maybe it's has some sub-epics or something.
681
And sometimes it's just a list of things, and having this guardrails or this opinions or some defaults, it is also valid for the organization.
682
And what it does also for the individual is that they don't have to think about it.
683
I remember being in a lot of meetings at the Airbnb basically every year with whatever team I was on, was that, hey, how do we configure our Jira board?
684, how do we do it?
685, what are the states?
686, what are these things?
687, should we do it this way or that way?
688
And I realized,, no one really cared.
689, I don't,, that wasn't what we wanted to do.
690, we just wanted to do the actual work, not think about how the work is organized.
691
So, the idea with Linear is, it's not a DUI system,, you, you just build it for yourself.
692
And I don't think that's what companies or teams should be doing.
693
It's a more a purpose-built application around this helps your teams to build software.
694
And we have the workflows and features that support that.
695
And yes, it's maybe not as flexible or something else, but we don't think that the flexibility is that good in some of these situations.
696
When you started the company and today, is it important to you that at some point in the future, everyone that's building software is using linear, or you could care less.
697
You have a point of view on what the product is and how it should work.
698
And for whoever that's good for, that's great.
699, my hope would be that everyone would use it.
700, at least every software company would use it.
701
And I think every company today out there almost has some software aspects to them.
702
So I do think it's almost for every software company one day.
703
I think I'm also realistic that I do think it's probably not going to be a fit for everyone.
704
But I do want to see that at least, I would say, the best companies use it, the next generation of companies, the leaders of the domains or the markets should be using it.
705
So I would to see it that way.
706 I would be happy about that.
707
But if there are some more of the legacy companies or some less that don't basically don't take software seriously, then, yeah, maybe that's that's not the customers we need.
708
How does this philosophy that you're articulating foot with the idea that I think if you look at most business software companies that are doing more than $500 million in revenue or more than a billion dollars in revenue, and you look at their products, they're not beautiful and elegant and easy to use.
709
Then if you start to ask yourself why is that, well, there's certainly a taste component.
710
But I think one of the reasons is that their goal is for everyone to use the thing for everything, right?
711
And so if the goal of a company, I'm not saying this is the goal of your company or all companies, is to basically grow forever.
712
What that ultimately means is that you're always trying to expand TAM.
713 one of the misunderstood things about Salesforce, which is a really good example of something that is maybe the opposite of what linear is in terms of product quality and craft, is that it is the way it is because you can use it for anything.
714
They use it in hospitals.
715
They use it in retail set, right?
716
And this act of ultimately allowing something to be flexible and powerful and customizable is at tension with simplicity and elegance.
717
And do you think about that at all?
718
Or, what's your reaction to that line of thinking?
719
Yeah, yeah.
720
I would say,, first of all,, I think,, it's part of the quality is also that something that you just have to, sometimes I think the company don't even try.
721
And I think that's you might be able to build a nice product that is customizable and is very high quality.
722
It's it's not the quality isn't preventing your market,, or reducing your market time.
723
But, but to your point about focusing on a certain customers and that customers that maybe align with our vision or the thinking.
724
Yeah, it's true that maybe the TAM is not as large as the as the more the general purpose tools, but I think the TAM is large enough for a company to us grow.
725
And then I think what you can do then is, if you don't want to grow from two more customers, you can potentially sell more to the existing customers so you can go deeper with the current customers.
726
So I think that's what we've been doing.
727
And basically, we started with the issue tracking because we knew that that's the core need of every software company.
728
Basically, you need to track bugs, but the engineers also have to do other work, not just fixing bugs.
729
So it's always morphs into project management as well.
730
But what we've been doing is basically going downstream of the stack, which is, well, before you build anything, you have to plan it.
731 you need to have some ideas what you're going to plan, what you're going to build.
732
So you need to have some projects briefs and you roadmap.
733
So we built that.
734
And then we recently also launched this customer request, which is basically we think that it could be for us and for a lot of us, it's very powerful to capture the feedback from the customers and then have it in the same system where you build the things.
735
Because when you bring the context of, why are we doing this?
736, what is the actual problem?
737, it could be a small thing,, something we need to fix, or it could be a bigger thing where we get customers saying they have this a planning problem, and then we just capture things around it.
738
And then, once we think this, we should prioritize it, we can take all that feedback and then morph it into a project.
739
And, I think that why we are building this in the same system is that,, ironically, I think these processes are not linear, even though people might want to think that way.
740
And that's why the company is also called linear.
741
It's a little bit aspirational.
742, people linear outcomes or processes.
743
But,, what happens is that you start building something, you realize your plan was wrong, you learned something else.
744
You have to go back to update the plans.
745
And maybe for you to update the plans, you have to know,, where did this come from?
746, why are we building this?
747, what did the customers say?
748
And go back to that.
749, go talk back to those customers who said it.
750
And then you can get back to the planning.
751, how do we fix this?
752
And then you can go into the building.
753
I think there's opportunity.
754
We see that the linear, what we're trying to do is helping companies to build products.
755
And it doesn't have to be limited to the issue tracking or project management.
756
We can do other things too.
757
So, when you think about that first 18 months and you started to really get into strong product market fit, what are the things that you figured out or did correctly that are generalizable?
758
So, I'm sure there's lots of things that you did that if other people knew, it's not going to help them with their companies.
759
But are there, you obviously hit on a bunch of these little story points of what you ended up doing, but if you zoom out a little bit, what are the most generalizable, important things that you did and got right that might be useful to other people that are maybe going and building a new product or a new tool or a new company?
760
Yeah, I would say it's probably the first thing, the if you start a company, then you probably should have some intuition or some point of view, what is what is wrong out there?
761 what is the what is something better you're gonna do or what is the problem?
762
And probably much easier if you have that starting point.
763
I think too is we did that research before we started, partly because of practical reasons, we didn't we didn't have time and we didn't want to quit our jobs at the moment.
764
But I think part of it's sometimes it's good to create the space of, let's not build anything right now too much.
765 let's not commit into starting this company and going really fast, but let's just take some amount of time to talk to people and take it easy a little bit.
766 don't go 100% right on the problem, but more, oh, there's this problem.
767
Let's try to shape it a little bit.
768
Let's try to form our thinking around this.
769
So when you start building it or you go out there to talk to investors or something, you have some point of view formed and it's not just you are coming up with it as you go.
770
And I think at least probably it depends on the personalities, but I did find it useful to have that some amount of time that you reserve in the beginning to just do, let's just see what the customers say or potential customers could want.
771
I think the third thing is the focus I mentioned that having maybe from those conversations, maybe from that thinking that you do, you would really find that clarity of who could be a good initial customer that you want to focus on, and try to put all your efforts into that.
772
I think that probably,, for a startup, though, is the hardest thing is, you don't have a lot of time, and you don't have a lot of resources, and you don't have a lot of anything.
773
So, the more you can,, focus your efforts into one direction and one type of area, or something specific, the better outcome you probably will have.
774
I think,, what I see often startups happening is there's a lot of tweaking,, people think, and be tweaking their direction, which is, I think, useful, or, often is necessary.
775
But I think sometimes maybe there's a good time to boss.
776
It's, what are we even doing here?
777
It's, what are we trying to do?
778
And try to find that clarity.
779
I think you should also think about the dynamics of the market and what advantage you can have.
780
So, something we notice that brands can be very impactful, especially if you try to be the best at something.
781
Then, I think the part of being best at something is that people also have to believe that you're best at something.
782
It doesn't always enough that objectively, in some measures, you might be the best, but if you don't, people don't believe it, then it's pointless.
783
So, I saw some companies, Slack, for example, I feel they always had a good, a brand from the beginning, and it's engaged people and made it much more stronger that eventually they became this a default tool for certain type of companies, or basically for everyone, when it came to chatting or company communications.
784
So, I would the brand is not, I think often people misunderstood the brand, brand thinking, branding is the logo.
785
Yeah, I wanted you to talk about what is brand.
786
The brand to me is a little bit more about what you stand for.
787, what is your take, or what is your almost the manifesto, or what is your worldview, and what do you hold dear?
788
What do you care about?
789
And then you just try to operate based on those principles or those values or that thinking, and then always try to talk about it or try to put your work in that context so why I think it's important is that you you from the beginning have very stable narrative something that people can easily understand oh this company is doing this because of these reasons even if they can't article it exactly the same way you can but you if you're finding the few things that resonate then you just keep hitting those same same things what we found that in this market the brands are non-existent or they're bad or they're negative so if you think about project management tools there's anything and no one is that exciting it's even hard to say what do these companies stand for what are what are they about so we wanted to make clear is we are about quality we're about this craft and we're about the speed and there's a few of these things that we always remind people or we talk about it often in different ways and that's what is building a brand is about is that you find some message and you basically keep repeating it and until everyone has some idea of it so what i was going with it was that you should look at the market what is currently underserved there what Is there opportunity to do something differently so i think for startups often one of the problems is have someone to pay attention to you and be excited about you so if you're everyone else then no one is probably or you are worse version of or a simpler version of something it's it's probably not that interesting so you have to find some angle that maybe you're just weird maybe you're doing things a little differently, and that creates that attention and interest that people have.
790
So, depending on your market, that might be different.
791, if all the players are very weird, then maybe you should be very non-weird.
792
And,, if all the players are rigid or something, maybe you should be very freeform or flexible or something.
793
And so, I think you, I find that startups sometimes or founders make the mistake of trying to emulate the other companies and not play into their own strengths or their own,, where they're coming from or the context they're in.
794
So, you shouldn't probably emulate, you should almost do the opposite, what all the other players in your domain are doing.
795
And maybe you can take inspiration from some other companies in other domains and do something similar there.
796
It's, are you the Apple of this industry, or are you the Amazon of this industry, or are you the, I don't know, some other company that has some a clear culture that,, yeah, and some people use that,, they want to be a Costco of this.
797
And it's more just which cultural track you choose,.
798, what is your,, if you play RPGs, then it's almost which type of character you pick.
799
And that's the company that you're building and the brand you're building.
800
What do you think the impact of being Finnish is on the company, if at all?
801
I to say to the candidates that we have all this experience working in the Silicon Valley companies and we do a lot of stuff they do, and that's the model we follow.
802
But there's also stuff that we do differently, and that's maybe the some of the Finnish or European roots.
803
And I think there is, I think I would say that from US or Silicon Valley, I think that I feel there's this obsession on scale and speed.
804
Those are always the two things that everyone cares about or talks about.
805
And I think for us, it's more the finishedness maybe comes in that being a little more measured on those aspects.
806
That maybe speed is not always the most important thing.
807
And maybe scale is not always the most important thing.
808
Maybe, especially when it comes to team, we don't think it's a good thing to have a massive team or scale the team very fast.
809
We think it's a bad thing.
810
And maybe a lot of people just don't agree with that sentiment, but we think it's think it that way.
811
So I think there's that little bit of, I don't know, I feel finished culture is a little more calmer.
812
There's a little less of the extremes.
813
It's a little more balanced in a way.
814
So I think that's probably what we are trying to do.
815
And, I think it works well for our domain because in some ways we are a critical component of the customers' operations.
816
And I don't think we should be playing fast and loose there.
817
I think you lose your reputation very quickly if you start breaking people's stuff, you lose their data or you do something, something bad.
818
I think again, maybe it depends a little bit domains, what today, AI, I think it's that speed is probably important there because the industry is moving fast.
819
But our industry, it's it's pretty stagnant in some ways.
820
So what we are trying to optimize for is how do we remain and can be the best player and the highest quality player and try to win with that instead of try to be the fastest or something else.
821
One thing I was curious on this exact line to hear your thinking.
822
Just as you said, there's a lot of things that you've chosen to do differently, whether it be the way that you've capitalized the company, how small the company is, this craft orientation.
823, we could talk about some of the other things.
824
And then there's other things where I'm sure you said we're not going to go to first principles.
825
Generally, companies are run this way.
826
Generally, companies have a website that you go to that tells you about the product, whatever it might be.
827
Do you think much about where do you want to invent or where do you want to find, go back to first principles versus, when are you willing to adopt best practices as a company?
828
I think the general advice on this that you should be, you probably should be not innovating things that are not your core and or meaningful to your core, whatever you're doing.
829
And so the things might be HR practices or some of these other things.
830
But the way I think about it more is more from the principles that what is your principle?
831
So I think for us, it is the quality is one of the number one principles.
832
So then everything follows from that.
833
It's, why to be profitable?
834
Well, partly because we can, but also we can get the stability or freedom to do things in a high quality way.
835
I think what often happens to startups or any companies is the quality goes down because they get pressured on something else.
836
They pressured on the, we need to ship this or we need to get these metrics up.
837
And then the quality goes down because they're making that trade-off.
838
So in some ways that being profitable, for example, serves that purpose of we think we can win this market being quality first.
839
But we have to create the environment we can do it.
840
It also goes through recruiting, how do we do it, the type of people we're trying to find.
841
It also goes into how we structure the organization.
842
So, in some ways, it does affect a lot of things.
843
But the specifics of, well, how do we decide the compense or how do we do some contracts or some operations?
844
I think that's not what finances or legal stuff.
845
I always been avoiding trying to innovate on the legal side or when you do fundraising or something, coming up with crazy setups, but more, okay, this is favorable for the company or for us.
846
And that it's quite close to the standard what you see in the market.
847
So, try to be not to innovate on those things that can potentially cause problems down the line.
848
But I think I more do the division between what is important for us to do differently and what's maybe not.
849
But even recently, I've been thinking a lot about the go-to-market, and I think that domain is very this best practices and playbook-driven, which I think that you also could have an advantage there to do things differently.
850
And, one of the things we not surprisingly try to do is we try to provide a quality experience, even in the sales process.
851
And what quality experience Is the salesperson is knowledgeable about the product and can help the customers.
852
It's not that hard or it's not that complicated, but a lot of companies don't do that.
853
They don't think it's important, they just think the rep needs to close the sale and nothing else matters.
854
But we think it does matter, especially in this market.
855
And we think it matters because of retention purposes.
856
Also, it sets the tone for the customer and how they feel about the whole experience.
857
So, we think it's important and we try to do it a little bit differently.
858
And I think there would be other areas we're trying to figure out what we could do differently.
859
Have you had a point of view on the way that you were doing something or running the company that you changed your mind on?
860
Or does that often happen as you grow and scale?
861, there's often this tension of what got us here might not get us there.
862
And I think in startups, the thing that's unique is that you're growing, right?
863
And companies grow at different rates.
864
But I think it's easy to have a set of things that you believed in when you were seven people.
865
And maybe at 70 people, there are things that you should change because the company worked because of or in spite of those things at a certain period of time.
866
And then there's obviously the things that I think some of the things you're getting at, which have to be sewn into the fabric of the company forever.
867
And because you've chosen to build the company in a very specific way, oftentimes deviating from what Silicon Valley companies would do, I wondered as you've grown the company and your college six years in, are there things that you were doing in a different way that you said, oh, we're just going to do it this way?
868
Or are most of the things pretty well solidified?
869
I would say that we have this principles, but we are also pragmatic that we don't get overly dogmatic on that this is the only way you can do things and this is this we can't think about anything else so I think we are always open to thinking about things is this still working and especially yeah often what happens is something works now but OX worked in a smaller scale but even slightly bigger scale we do need to change something but I wouldn't say there is that many things that drastically has changed I think there's things for example the sales process initially we're the investors were saying that hey you probably need some salespeople on, and we said no.
870
And it's not, who wants to talk to salespeople?
871
But then at some point, you start getting these customers that do want to talk to salespeople.
872
And then,, oh,, there's a reason for this to exist.
873
And then, as you go more up market, you realize, oh, that this gets more complicated.
874
Companies can't just go and buy something.
875
They have to talk about it a lot before they do it.
876
So that's where I wasn't dogmatically against sale.
877
I just didn't see the need.
878
And then once I saw the need, I could say,, okay,, we can do it, but we should do it this way.
879, we should keep the quality high and try to make sure that the experience is good for the customers.
880
I think there's some areas, we talked about, being opioid before.
881
And I think there is something I talked to a lot of company leaders in larger companies and try to understand their planning processes and found out that everyone does it differently and no one is quite happy with it, but they also have a certain way of doing it.
882
And what it made me realize that I think the higher levels we go try to support the processes or the different things the companies are doing, we might have to have more flexibility there because we are not in a position to tell the CEOs or the boards of these companies that, hey, you should organize your company differently or you should set up this year goals a little bit differently.
883
We can influence them in some ways, but I don't think we are in a position to tell people what to do on that front.
884
So again, I'm more pragmatic on it that I do think we could still be more opiated on the lower levels where there's more of this volume and need for structure because there's just more people and more things happening.
885
And the more flexibility you introduce, it multiplies a lot more.
886
Once you get to the very highest level, you might not have that many things in there and you might not have that many people there that even look at those things.
887
So I think the flexibility can be greater higher you go into the stack and we can then make the app fit better for the company as a whole or for the leadership.
888
But then the day-to-day can be much more opiated or structured so that the majority of the people don't have to think about this stuff and they can use the product and don't have to design their own workflows.
889
I wanted to wrap up by having you talk a little bit about the role of a founder and CEO who came up through design.
890
And maybe it felt 10 years ago there was this movement towards more founders and CEOs that came up through design.
891
And obviously you have someone Brian Chescu who's been immensely successful, but it has tended to under-index when you look at people building great companies Linear.
892
I think it's mainly more product and or mostly dominated by engineering oriented founders as opposed to design oriented founders.
893
And do you have any reflections or maybe thoughts on that?
894
Yeah, I've definitely thought about it and talked about it with people and I wouldn't say I have the clear answer to it.
895
I also asked this question on X some weeks ago and I got a lot of different comments on it, but I couldn't say that there is a very specific reason for it.
896
The couple of observations I've done is one is that I think engineers might often have this mindset or way of doing things, which is that they're building something and then they start thinking, oh, maybe I could build this thing differently.
897
Or when they're working on some project or building some feature, they might start thinking, oh, it would be really great if we had this new infrastructure or this new system or something that is, it's irrelevant to the problem they're solving, but they have this additional side thoughts.
898
And then they might go home and then build it.
899
And then they realize,, oh,, this is a pretty good idea and this works.
900
But what happened now is that you already built it.
901
So they have this functional prototype that someone can use.
902
And then maybe they can show it to their friends.
903
And they're, their friends are interested in it.
904
And they maybe even want to use it.
905
So there's a little more clear, quicker path to some validation, I would say.
906
Versus designers, you might have this idea something could be better, but so you design it, but you still just have designs.
907
You don't have the product that someone can use, or you can even yourself can use.
908
You're a little bit further getting to the front of the customer.
909
And so it doesn't happen accidentally as much.
910
Maybe there's also, I find in my career working in design that for some reason designers can be quite focused what is front of them, not thinking beyond that or what is going around them.
911
So they're just focused on making their designs and then they listen to the feedback and then they improve it.
912
But for me, my interest has always been whenever I join some company, I always interested to understand how does the business work?
913 why does this company exist?
914 what are they doing?
915
Who are they selling?
916
What people are buying?
917
Why are they buying it?
918
What is happening on the market?
919 why is this company successful?
920
I just want to understand the context I'm operating in.
921
So when I'm working on the designs, and then maybe I might even want to understand the context of the company itself.
922 we have these personalities here.
923
They have these agendas generally.
924
They have this role.
925
They're pushing these things.
926
So I'm trying to understand the external and internal context that I'm operating in.
927, then,, when I'm designing something, I can try to make it more aligned with that context.
928
I can speak to it,, why is this a good idea for the business, or why this is a good idea for some specific person or role or something?
929
So, I think,, what happened to me then is when you start thinking that way, is you start seeing that there's opportunities to do different things differently, or there's, there's, you could solve problems that people have.
930
And,, what I noticed in working in these companies was that the processes weren't optimal.
931, I'd see where the quality fell down and where the process fell down because there wasn't, it wasn't structured, or there wasn't something in place, or it was too free form or something.
932
So, I could start thinking about this problem.
933
So, maybe I could solve this.
934, maybe I could think about the incentives of these people have in this company.
935, why, I think,, why quality doesn't happen in most companies is, it's just because it's not incentivized.
936
No one ever says you should do it.
937
It's almost that, no, we just want you to complete this task.
938
We don't care how you complete it too much.
939
We just want to complete it now.
940
So, you incentivize the speed, but you don't incentivize the quality.
941
So, I think that there's maybe that a lot of designers are too focused on their little bit too narrow, looking at things or narrow-minded and not maybe interested enough, what happens around them or around there, or they're out there more just looking at the design type of things.
942
But, yeah, I wish there would be more design founders.
943
Are there any interventions that you think would,, if you wanted to 10x the successful founders who came up through design or a designer that's listening to this conversation and they might want to start a company, they should consider doing this, this, or this?
944
I would say, just anyone individual listening to this or thinking about this, that, yeah, you shouldn't think your job is a designer.
945
Maybe it's it is your job, but companies don't necessarily care who what your job title is, they take care of what you can do.
946
So, I think it's beneficial, even if you don't become a founder, to think about the broader context of what is happening.
947
And so, it might be just paying more attention to companies, where's what is happening?
948, why are they making these decisions?
949
And thinking about, are there ways that these things could be better?
950, sometimes I would propose changes in the ways the projects were run or the processes were run because I just saw that there was a problem and no one was addressing it.
951
It wasn't really my job to do it, I wasn't there to do that, I was there to design, but I would still propose those changes.
952
And they could take it a little bit.
953
I don't have to force it on them, or I can't.
954
So, I could just point it out.
955
So, I think it's thinking at your place in this world that it's something greater than just what your job title is, and you can pay attention to these things.
956
I think there's probably what I said before about that as a designer, you're not usually some people are, but often you are not able to build the thing you design.
957
So, luckily, you don't have to.
958, I have two technical co-founders, and they can do that.
959
And so, I have to just bring in something to the table, and they can bring their own skill set to the table.
960
So, I think it's always good to look for people that you working with and who are very potentially very good at what they do, and then try to see if you can start thinking about problems with them and try to see something that you could be interested in working, or possibly you would be interested working with.
961
And I think it's very each individual probably has different reasons for this.
962
And I think something I've been talking with some people: if we should make more of these examples and talk about this more, and maybe it will inspire more people, I think sometimes examples are just a good thing and can inspire people more.
963
So I think that's definitely one thing I can try to do or other people can try to do as well.
964
So just to wrap up, we wanted to ask you what we ask everyone, which is in this case, in the topic of company building and making something,, driving a company into product market fit, is there somebody who's had a real outsized impact on the way that you think about any of these things?
965
Where there's a lot of residual value in the way that you think about building companies and products?
966
And, what's that person and the thing that they've imparted on you that's been so useful?
967
I would say that YC and probably Paul Craham, where I think a lot of this stuff came from, has been probably the most influential things.
968
I still have the pollster,, I think behind me, you can't really see it, but it's just make something people want.
969
And I think it's as simple as Wise.
970
And there's a lot of other things.
971, I think that what YZ does well is simplifying the startup problem that a lot of this stuff doesn't really matter.
972
You can read all kinds of books and all kinds of, I don't know, look at all kinds of podcasts and look at all kinds of materials.
973
I think it's good to read that stuff.
974
But in the end, what really matters in your company is, do you have someone using the product?
975
Do you have customers for it?
976
Are they using it?
977
Are they paying for it?
978, did you make something that people want?
979
Then basically focusing all your efforts on that.
980
And until you have that and until you have some traction or scale, you don't have to think about anything else.
981
That's the only thing you can think about.
982
So I think that's probably, for me, at least, that has been the most impactful.
983
Thanks for spending so much time in this conversation.
984
I thought it was awesome.
985
I really appreciate it.
986
Yeah, thanks for having me as well.
987
It was fun to chat about these things.